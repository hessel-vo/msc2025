The target code below is part of the automotive software engineering domain.
Provide a concise, single-line summary of the target Python code below.
Do not provide any other output.

---

**[Example]**
**Code:**
```python
def is_subtype_of(cls, check: str, base: str) -> bool:
    check_type = cls.get_type(check)
    if not check_type:
        raise DatatypesException(f"Not a valid type: '{check}'")
    base_type = cls.get_type(base)
    if not base_type:
        raise DatatypesException(f"Not a valid type: '{base}'")
    return check in base_type[2] or check == base
```

**Summary:**
"Validates that 'check' and 'base' are known types, then returns true if the 'check' type is identical to the 'base' type or if its name is found within the 'base' type's predefined list of subtypes.”

---

**[Target]**
**Summarize the following Python code (do not provide any other output):**
```python
def get_fqn_namespaced_datatypes(fqn: str | None = None) -> dict[str, str]:
    if not fqn:
        return {}
    fqn_namespaced_datatypes = {}
    for t in dynamic_datatypes:
        if fqn.startswith(t):
            continue

        if fqn.startswith(".".join(t.split(".")[:-1])):
            fqn_namespaced_datatypes[(t.split(".")[-1])] = t

    if fqn_namespaced_datatypes:
        log.debug(f"Namespaced datatypes, {fqn=}, {fqn_namespaced_datatypes=}")
    return fqn_namespaced_datatypes
```

**Summary:**