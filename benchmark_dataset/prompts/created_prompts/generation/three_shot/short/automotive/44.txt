Your task is to create a Java function based on a summary.
Below is an example of generating a Java function from a summary.

---

**[Examples]**
**[Example 1]**
**Summary:**
"Lazily initializes and returns an audio card presenter with data models for media and in-call status”

**Code:**
```java
public CardPresenter getCardPresenter() {
    if (mAudioCardPresenter == null) {
        mAudioCardPresenter = new HomeAudioCardPresenter();
        if (mViewModelProvider == null) {
            Log.w(TAG, "No ViewModelProvider set. Cannot get MediaViewModel");
            mAudioCardPresenter.setModels(
                    Collections.unmodifiableList(Collections.singletonList(
                            new InCallModel(SystemClock.elapsedRealtimeClock()))));
        } else {
            mAudioCardPresenter.setModels(Collections.unmodifiableList(Arrays.asList(
                    mViewModelProvider.get(MediaViewModel.class),
                    new InCallModel(SystemClock.elapsedRealtimeClock()))));
        }
    }
    return mAudioCardPresenter;
}
```

**[Example 2]**
**Summary:**
"Lazily initializes and returns the audio card view fragment”

**Code:**
```java
public HomeCardFragment getCardView() {
    if (mAudioCardView == null) {
        mAudioCardView = new AudioFragment();
        getCardPresenter().setView(mAudioCardView);
        mAudioCardView.setPresenter(getCardPresenter());
    }
    return mAudioCardView;
}
```

**[Example 3]**
**Summary:**
"Asynchronously creates, configures, and adds a task view to a parent view group”

**Code:**
```java
private void setUpTaskView(ViewGroup parent) {
    mTaskViewManager = new TaskViewManager(this,
            new HandlerExecutor(getMainThreadHandler()));
    mTaskViewManager.createTaskView(taskView -> {
        taskView.setListener(getMainExecutor(), mTaskViewListener);
        parent.addView(taskView);
        mTaskView = taskView;
    });
}
```

---

**[Target]**
**Based on the summary below, generate the full Java function, including the function signature and function body (do not provide any other output)**

**Summary:**
"Blurs and scales an image to set as a card's visible background."

**Code:**
```java
private void updateBackgroundImage(Drawable image) {
```