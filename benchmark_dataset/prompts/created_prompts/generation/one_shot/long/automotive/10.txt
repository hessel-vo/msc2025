Your task is to implement a Python function based on a summary.
Below is an example of generating a Python function from a summary.

---

**[Example]**
**Summary:**
"Validates that 'check' and 'base' are known types, then returns true if the 'check' type is identical to the 'base' type or if its name is found within the 'base' type's predefined list of subtypes”

**Code:**
def is_subtype_of(cls, check: str, base: str) -> bool:
    check_type = cls.get_type(check)
    if not check_type:
        raise DatatypesException(f"Not a valid type: '{check}'")
    base_type = cls.get_type(base)
    if not base_type:
        raise DatatypesException(f"Not a valid type: '{base}'")
    return check in base_type[2] or check == base


---

**[Target]**
**Use the summary below to generate the related Python function**
Return the full target function code, including function signature and function implementation
Do NOT add comments to the code and provide only the code as output

**Summary:**
"Loads and parses multiple VSpec files from specified paths, using a list of include directories, then merges them into a single composite VSpec object and returns it, raising an exception if no files are successfully loaded"

**Code:**
def load_vspec(include_dirs: list[Path], specs: list[Path], identifier: str | None = None) -> VSpec:
