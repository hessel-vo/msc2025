The target code below is part of the automotive software engineering domain.
Provide a detailed, single-line summary of the target Java code below.
Do not provide any other output.

---

**[Examples]**
**[Example 1]**
**Code:**
```java
int FindMaxSum(int arr[], int n) {
    int incl = arr[0];
    int excl = 0;
    int excl_new;
    int i;

    for (i = 1; i < n; i++) {
        excl_new = (incl > excl) ? incl : excl;
        incl = excl + arr[i];
        excl = excl_new;
    }
    return ((incl > excl) ? incl : excl);
}
```

**Summary:**
"Finds the maximum sum of a subsequence of non-adjacent elements by iteratively tracking the maximum sum including and excluding the current element”

**[Example 2]**
**Code:**
```java
static boolean isMajority(int arr[], int n, int x) {
    int i, last_index = 0;
    last_index = (n % 2 == 0) ? n / 2 : n / 2 + 1;

    for (i = 0; i < last_index; i++) {
        if (arr[i] == x && arr[i + n / 2] == x) {
            return true;
        }
    }
    return false;
}
```

**Summary:**
"Determines if a given element `x` is the majority in a sorted array by checking if `x` occupies both an index `i` and the index `n/2` positions ahead of it”

**[Example 3]**
**Code:**
```java
static boolean findPair(int arr[], int n) {
    int size = arr.length;
    int i = 0, j = 1;

    while (i < size && j < size) {
        if (i != j && arr[j] - arr[i] == n) {
            System.out.print("Pair Found: (" + arr[i] + ", " + arr[j] + ")");
            return true;
        } else if (arr[j] - arr[i] < n) {
            j++;
        } else {
            i++;
        }
    }

    System.out.print("No such pair");
    return false;
}
```

**Summary:**
"Finds if a pair of elements with a given difference `n` exists in a sorted array by using a two-pointer approach.”

---

**[Target]**
**Summarize the following Java code (do not provide any other output):**
```java
private Intent getMapsIntent() {
    Intent defaultIntent =
            Intent.makeMainSelectorActivity(Intent.ACTION_MAIN, Intent.CATEGORY_APP_MAPS);
    PackageManager pm = getPackageManager();
    ComponentName defaultActivity = defaultIntent.resolveActivity(pm);

    for (String intentUri : getResources().getStringArray(
            R.array.config_homeCardPreferredMapActivities)) {
        Intent preferredIntent;
        try {
            preferredIntent = Intent.parseUri(intentUri, Intent.URI_ANDROID_APP_SCHEME);
        } catch (URISyntaxException se) {
            Log.w(TAG, "Invalid intent URI in config_homeCardPreferredMapActivities", se);
            continue;
        }

        if (defaultActivity != null && !defaultActivity.getPackageName().equals(
                preferredIntent.getPackage())) {
            continue;
        }

        if (preferredIntent.resolveActivityInfo(pm, /* flags= */ 0) != null) {
            return preferredIntent;
        }
    }
    return defaultIntent;
}
```

**Summary:**