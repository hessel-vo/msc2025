id,language,reference,generated,generated_rci,bleu_score,rouge1,rouge2,rougeL,bertscore_f1
2,python,"Raises an exception if the specified 'datatype' is unsupported, otherwise retrieves that type's validation function and returns the boolean result of calling it with the provided 'value'",Validates if a given value conforms to a specified datatype by retrieving the corresponding type checker function and applying it to the value.,"Checks if a value matches a given datatype by retrieving and applying a type checker function, raising an exception if the datatype is unsupported.",3.6431272114063575,39.21568627450981,8.16326530612245,35.294117647058826,67.98964142799377
3,python,"Validates that a given value, or each value in a list, is an integer that fits within the numerical range defined by a specified bit-width and signedness",Validates if a given integer or list of integers falls within a specified range based on whether it's signed and the number of bits.”,Determines if an integer or a list of integers is a valid representation of a signed or unsigned integer within a specified bit range.”,4.791332423462419,45.28301886792452,7.843137254901962,33.9622641509434,77.52376198768616
4,python,"Returns the type definition tuple from a class-level list of types that matches the provided 'datatype' name, or returns None if no match is found","Retrieves type information (name, conversion function, and validation rules) from a list of defined types within a class based on a provided datatype string.”","Looks up type details (name, conversion function, and validation rules) within a class's defined types based on a given datatype string.”",4.759465490908452,40.0,16.666666666666664,32.0,67.23917126655579
5,python,Returns a dictionary mapping the short name to the full FQN for all dynamic datatypes that exist in the same namespace as the provided FQN,"Identifies and returns a dictionary of namespaced datatypes from a list, matching a given fully qualified name (FQN) prefix, while excluding direct matches and logging the results for debugging.”","Extracts namespaced datatypes from a predefined list that match a given fully qualified name (FQN) prefix, excluding exact matches and logging the found mappings for debugging purposes.”",2.888679060775857,29.629629629629633,7.692307692307692,22.222222222222225,62.972718477249146
7,python,"Parses a type string to create an `ApiGearType` object, mapping common primitive types to their ApiGear equivalents, sanitizing custom type names by replacing dots with underscores, and setting an array flag based on a ""[]"" suffix","Maps a string representation of a data type (e.g., 'int32', 'string[]') to an `ApiGearType` object, handling basic types, floating-point types, booleans, strings, and array types by setting the `is_array` flag if applicable.”","Converts a string representation of a data type to an `ApiGearType` object, mapping common types like integers, floats, booleans, and strings, and indicating whether the type is an array.”",12.11618035990288,40.00000000000001,11.76470588235294,34.285714285714285,64.99552726745605
8,python,"Creates an `ApiGearProperty` by converting the VSS node's datatype to a supported ApiGear type and copying its description, returning `None` and logging a warning if the datatype is not supported","Generates an `ApiGearProperty` object from a `VSSNode`'s data and a specified datatype, returning `None` if the datatype is unsupported.”","Creates an `ApiGearProperty` object from a `VSSNode`'s data and datatype, populating its description if available, and returning `None` for unsupported datatypes.”",24.579577986789843,50.98039215686274,20.40816326530612,39.21568627450981,75.26779770851135
10,python,"Loads and parses multiple VSpec files from specified paths, using a list of include directories, then merges them into a single composite VSpec object and returns it, raising an exception if no files are successfully loaded","Loads and merges multiple VSpec objects from specified files and directories, combining them into a single VSpec and logging the process, while raising an exception if no specs are loaded.”","Loads, merges, and combines multiple VSpec objects from specified files and directories into a single, unified VSpec, logging the process and raising an exception if no specifications are found.”",21.082923292618357,66.66666666666666,31.25,60.606060606060595,82.24695920944214
11,python,"Recursively updates a 'base' dictionary with an 'update' dictionary, merging nested dictionaries for common keys and overwriting or adding all other key-value pairs","Recursively updates a dictionary `base` with the contents of another dictionary `update`, merging nested dictionaries while overwriting non-dictionary values.”","Recursively merges a dictionary `update` into a base dictionary `base`, updating nested dictionaries and overwriting non-dictionary values.”",14.643937864373886,54.54545454545454,19.04761904761905,45.45454545454545,75.34105181694031
12,python,"Asserts that the input value, if not None, is a valid 'constUID' formatted as an 8-digit hexadecimal string prefixed with '0x', returning the value if the check passes","Validates if a given string `v` conforms to the 'constUID' format (starting with '0x' followed by eight hexadecimal characters) and returns the string if valid, otherwise raises an assertion error.”","Validates if a given string `v` conforms to the 'constUID' format (starting with '0x' followed by eight hexadecimal characters) and returns the string if valid, or `None` if the input was `None`.”",3.1820027069808767,40.67796610169491,3.508771929824562,23.728813559322038,74.62290525436401
13,python,"Initializes a VSSRaw model and attempts to resolve it, returning the successfully resolved model or the original unresolved model if resolution fails due to a validation or model error","Creates and validates a `VSSRaw` object from a dictionary, resolving its attributes and handling potential validation errors by logging a debug message and returning the partially initialized object.”","Creates a `VSSRaw` object from a dictionary, attempts to resolve and validate its attributes, and returns the object while logging debug information if validation fails.”",3.176605498590708,24.561403508771928,7.2727272727272725,17.543859649122805,69.14517283439636
14,python,"Asserts that each string in the input list is a valid datatype by checking against a master list, returning the original list if all values are valid","Validates a list of datatypes against a predefined set of allowed datatypes, raising an assertion error if an invalid datatype is encountered.","Verifies that a list of datatypes contains only valid types from a predefined set, raising an assertion error for any invalid entries.",3.7667979294958727,28.57142857142857,4.25531914893617,16.3265306122449,66.17274880409241
15,python,"Traverses a VSSNode tree to generate a formatted string, displaying each node's name followed by the values of any specified attributes found on it","Generates a string representation of a tree structure, including node names and specified attributes, by traversing the tree and formatting each node's information.”","Renders a tree structure into a string, displaying node names and selected attributes (if present) with appropriate formatting.”",5.166045454134253,48.97959183673469,12.76595744680851,20.408163265306126,74.225515127182
16,python,"Recursively traverses up the parent hierarchy to find and return the first non-instance ancestor node and the traversal depth, raising an exception if the starting node is not a branch or if no root is found","Traverses up the parent chain of a VSSNode to find the root instance node, raising an exception if no instance root exists or if the current node is not an instance.”","Recursively traverses the parent chain of a VSSNode to locate the root instance node, raising a NoInstanceRootException if one is not found or if the current node isn't an instance.”",19.97118807514704,64.70588235294117,36.36363636363636,50.0,73.3236312866211
17,python,Recursively calculates the depth of the first-found branch of children where each node is a `VSSDataBranch` with its `is_instance` flag set,Recursively counts the depth of instance children within a tree-like structure where each node has a 'children' attribute and data that may be a 'VSSDataBranch' with an 'is_instance' flag.,Recursively counts the depth of instance children within a tree-like data structure by traversing 'children' nodes and checking for 'VSSDataBranch' data with an 'is_instance' flag.,8.810348847243409,51.85185185185185,30.769230769230766,51.85185185185185,79.877370595932
18,python,Returns a list of node IDs from an input list whose expected parent's name matches the provided `name`,Identifies child node IDs from a list by filtering for nodes whose expected parent matches a specified name.”,Extracts node IDs from a list that have a specific name as their expected parent.”,11.154288433080788,54.05405405405405,28.571428571428577,48.64864864864865,73.52819442749023
19,python,"Retrieves an attribute from an object, returning a specified default value if the attribute is missing or its value is `None`","Safely retrieves an attribute from an object by name, returning a specified default value if the attribute is not found or is None.”","Retrieves an attribute from an object by name, returning a provided default value if the attribute is missing or its value is None.”",50.4080217979218,81.81818181818183,66.66666666666666,81.81818181818183,84.89843606948853
20,python,Generates a `proto3` file from a VSS tree by first writing import statements for complex data types and then converting each branch in the tree into a corresponding protobuf message,"Generates Protocol Buffer definitions from a signal tree by extracting data types, writing imports, and recursively creating messages for each branch node.”","Generates Protocol Buffer definitions from a signal tree by extracting data types, writing necessary imports, and recursively creating messages for each branch node.”",5.076950165777899,46.15384615384615,16.0,38.46153846153846,70.9693968296051
21,python,"Traverses a VSS tree to find all terminal instance branches, grouping their relative names into a dictionary where each key is the fully qualified name of the original branch they instantiate","Extracts metadata about instances within a VSS tree structure, grouping instance names under their respective root fully qualified names (FQNs) while skipping nodes with further instance children.”","Collects instance metadata from a VSS tree, organizing instance names under their root FQNs and excluding nodes containing nested instances.”",6.938247178254631,31.03448275862069,10.714285714285714,24.137931034482758,64.24809098243713
22,python,Checks if a given VSSNode is a leaf by verifying its 'data' attribute is an instance of VSSDataDatatype,Checks if a node in a VSS tree is a leaf node by verifying if its data is an instance of the VSSDataDatatype class.”,Determines if a given VSS node is a leaf node by checking if its data attribute is of type VSSDataDatatype.”,18.79777274487072,71.42857142857143,45.0,71.42857142857143,83.90225172042847
23,python,Returns `True` if the given `VSSNode`'s data is a `VSSDataBranch` and its `is_instance` attribute is `False`,Checks if a node represents a VSS branch by verifying if its data is a VSSDataBranch instance and if that instance's 'is_instance' attribute is false.”,Determines if a node is a VSS branch by checking if its data is a VSSDataBranch and its 'is_instance' attribute is false.”,7.334959170370916,57.77777777777777,32.558139534883715,48.888888888888886,72.10556864738464
24,python,Returns True if the node's data is a VSSDataBranch and its 'is_instance' attribute is True,Checks if a given node represents an instance of a VSS branch by verifying if its data is a VSSDataBranch and if that branch is marked as an instance.”,Determines if a node is a VSS branch instance by checking if its data is a VSSDataBranch and its 'is_instance' attribute is True.”,12.627447243144081,43.47826086956522,18.181818181818183,39.130434782608695,67.80546307563782
25,python,"Calculates a 32-bit FNV-1 hash for a given byte string by iterating through each byte, multiplying the current hash by the FNV prime, and then performing a bitwise XOR with the byte",Calculates a 32-bit FNV-1a hash value for a given byte string by iteratively updating a hash value with each byte using a prime number and bitwise operations.”,Computes a 32-bit FNV-1a hash value for a byte string using a specific prime number and XOR operation in each iteration.,26.406890736473112,63.49206349206349,32.78688524590164,53.96825396825397,79.09716367721558
28,java,"Inflates the `card_fragment` layout, finds and assigns the card's title and icon views, and returns the resulting root view","Inflates a layout file (`card_fragment`) to create a view, finds the `card_name` and `card_icon` views within the inflated layout, and returns the root view.”",Inflates a layout file (`card_fragment`) to create a view and initializes views for the card title and icon within the layout.”,21.055668975171354,66.66666666666666,26.08695652173913,58.333333333333336,77.47925519943237
29,java,"Updates an `ImageButton`'s icon and click listener from a content object and makes it visible, or hides the button if the content is null","Updates the visibility and content of an ImageButton based on the provided DescriptiveTextWithControlsView.Control, setting its icon and click listener if the control is not null, otherwise hiding the button.”","Updates an ImageButton's icon, click listener, and visibility based on a DescriptiveTextWithControlsView.Control, displaying it if the control is valid and hiding it otherwise.”",10.62251311026331,54.54545454545454,22.641509433962266,40.0,71.26619815826416
30,java,"Lazily inflates a `ViewStub` to create a descriptive text layout, caches references to its child views (title, subtitle, image), and returns the inflated layout","Lazily inflates and caches a view containing descriptive text elements (title, subtitle, optional image, and tap-for-more text) from a ViewStub within a root view, ensuring it's only created when needed.”","Lazily inflates and caches a descriptive text-only layout view from a ViewStub within a root view, retrieving its title, subtitle, optional image, and tap-for-more text elements for later use.”",14.3728033123722,42.10526315789474,18.181818181818183,31.57894736842105,70.40746212005615
31,java,Updates the header view on the main UI thread by making its root view visible and setting the card's title and icon from the provided `CardHeader` object,"Updates the UI elements (visibility, title, and icon) of a card header view on the main thread to reflect the data from a provided `CardHeader` object.”","Updates the card header view's UI elements (visibility, title, and icon) on the main thread using data from a `CardHeader` object.”",25.299682930744943,66.66666666666666,34.61538461538461,48.14814814814815,77.8683602809906
32,java,"Lazily inflates a `ViewStub` to create and return the text block layout view, while also finding and caching references to its child text views on the first call","Retrieves a text block layout view, inflating it from a ViewStub if it doesn't already exist and caching it for subsequent use.”","Lazily retrieves and caches a text block layout view, inflating it from a ViewStub if it's null and obtaining references to its child views.”",13.584223662982575,31.372549019607842,20.408163265306122,27.450980392156865,68.66139769554138
33,java,"Queries the `PackageManager` for a `MediaBrowserService` within a given package and returns a `ComponentName` for the first one found, or `null` if none exist",Retrieves the component name of a media browsing service within a specified package by querying for services that implement the MediaBrowserService interface.”,Locates the component name of a media browsing service within a given package by querying the package manager for services implementing the MediaBrowserService interface.”,3.0584001475626565,34.78260869565217,4.545454545454545,30.434782608695656,63.4504497051239
34,java,"Determines if a component should be added to a launchable list, returning `false` if its package is explicitly hidden or if it's a custom media component and launchable apps are also being shown, otherwise returning `true` for valid launchable or media service types","Determines whether a component should be added to a list of launchables based on a blacklist of package names, custom media component configurations, and the component's application type.”","Determines if a component should be added to launchables, considering a package name blacklist, custom media component settings, and the component's application type.”",14.57843358992614,43.83561643835616,22.535211267605632,38.35616438356164,67.54419207572937
35,java,"Sets the car's media source to a given component in browse mode and finishes the context if it's an Activity, catching and logging a `CarNotConnectedException` if the car service is unavailable","Selects a media source and finishes the current activity, handling potential connection errors by logging them.”","Sets the media source to browse mode and finishes the activity, gracefully handling car disconnection errors by logging them.”",4.83929942516475,32.6530612244898,12.765957446808512,28.57142857142857,68.12753677368164
36,java,"Safely checks if a given activity is distraction optimized using the `CarPackageManager`, returning `false` and logging an error if the manager is null or a `CarNotConnectedException` is caught","Checks if a specified activity within a given package is distraction optimized by querying the car package manager, handling potential connection errors, and returning a boolean result.",Determines if an activity within a package is distraction optimized by querying the car package manager and gracefully handling car connection exceptions.,6.711980117104399,47.27272727272727,18.867924528301884,36.36363636363637,69.31561827659607
38,java,"Retrieves a specific, resolvable map `Intent` from a configured list if it matches the system's default map app, otherwise falls back to a generic `Intent` for any map application","Retrieves the preferred intent for launching maps, prioritizing activities specified in a configuration array and falling back to a default maps activity if no preferred activity is found or valid.”","Retrieves the preferred intent for launching maps, iterating through a configuration array to find a valid and compatible activity, and falling back to a default maps activity if none is found.”",5.316703061843745,33.33333333333333,10.344827586206897,20.000000000000004,62.87635564804077
39,java,"Lazily initializes a set of `HomeCardModule`s by reflectively instantiating class names from a configuration array, and then uses a `FragmentTransaction` to add each module's card view to the UI layout","Initializes and displays a set of HomeCardModule fragments by dynamically creating instances of classes specified in a resource array, setting a ViewModelProvider, and adding them to the fragment manager.”","Initializes and displays a set of HomeCardModule fragments by dynamically creating instances of classes defined in a resource array, setting a ViewModelProvider for each, and adding them to the fragment manager to be displayed in specified resource IDs.”",6.7883195900873865,39.344262295081975,13.559322033898304,36.0655737704918,69.73393559455872
40,java,"Iterates through a list of appeared tasks and uses the `ActivityTaskManager` to remove any task that is in multi-window mode, logging it as a dangling task",Removes dangling tasks from a list that are in multi-window mode by iterating through the list and calling ActivityTaskManager to remove tasks with the corresponding task ID.”,Removes dangling multi-window tasks from a list by iterating through the list and using ActivityTaskManager to remove tasks identified by their task ID.”,8.517399705356635,58.18181818181818,22.641509433962266,29.09090909090909,74.70211982727051
41,java,Parses the mode from the current Intent and sets the title for both the Activity and the CarUi toolbar using the string resource ID defined in that mode,"Updates the application's mode based on intent data, setting the title of the activity and toolbar to the corresponding title string ID.”","Retrieves and applies a driving mode from the intent, updating the activity and toolbar titles accordingly.”",3.9951834285335357,47.05882352941176,12.244897959183673,47.05882352941176,72.64311909675598
42,java,"Lazily initializes and returns a `Chronometer` by finding it in the layout, while also finding and caching its associated separator view on the first call","Retrieves a Chronometer view from the layout, initializing it if it's null, to display a timer within a descriptive text control layout.”","Lazily retrieves and caches a Chronometer view from the layout, initializing it if null, to display a timer within a descriptive text control layout.”",6.1539524121469285,24.999999999999993,8.695652173913043,16.666666666666664,65.076345205307
43,java,"Lazily inflates a media layout from a `ViewStub`, finds and caches its title and subtitle views, initializes its media playback controls bar via a presenter, and returns the inflated view","Lazily initializes and returns a `View` representing the media layout, inflating it from a `ViewStub` if it doesn't already exist, and setting up its title, subtitle, and playback controls.”","Lazily initializes and returns a `View` representing the media layout, inflating it from a `ViewStub` if it doesn't already exist, and initializing associated UI elements and controls.”",15.83770654966812,63.33333333333333,20.689655172413794,43.333333333333336,71.93991541862488
44,java,"If a valid `Drawable` and card size are provided, this method scales the image to a square based on the card's largest dimension, blurs it, and sets the resulting bitmap as the animated, visible card background","Updates the card's background image by scaling a provided drawable to the larger dimension of the card size, blurring it, and setting it as the card's blurred background image with an animation.","Updates the card's background image by scaling a provided drawable to the larger dimension of the card size, blurring it, and setting it as the card's blurred background image.",6.33346700189339,53.521126760563384,14.492753623188403,30.98591549295775,71.05581760406494
45,java,Makes the media layout view visible and updates its title and subtitle with the provided text,Updates the visibility and text content of a media view component with a provided title and subtitle.”,Updates a media view's visibility and text fields (title and subtitle) with the given CharSequence values.”,10.182425646195501,66.66666666666667,12.903225806451616,36.36363636363636,78.60586047172546
46,java,"If the content's start time is positive, this method makes a chronometer and a separator visible, sets the chronometer's base time, and starts it; otherwise, it hides both views","Updates the visibility and state of a chronometer and separator based on the start time of audio content, displaying it when the start time is positive and hiding it otherwise.”","Controls the visibility and start time of a chronometer to display audio duration when a start time is available, and hides it when the start time is zero.”",12.129856272011155,52.459016393442624,20.338983050847457,32.78688524590164,68.70052218437195
47,java,Registers a member callback to the provided `Call` object after verifying it is not null,"Registers a callback with a newly added call object, ensuring the call object is not null before registration.”",Registers a callback on a non-null call object to handle subsequent events.”,9.560408787521254,54.54545454545454,25.80645161290323,54.54545454545454,73.30361604690552
48,java,"Handles the removal of a call by clearing the current call and card content, notifying the presenter of the model update, and unregistering its callback from the call object for cleanup","Handles the removal of a call by clearing call-related data, notifying the presenter of the model update, and unregistering a callback associated with the removed call.”","Resets call-related data, notifies the presenter of an update, and unregisters a callback when a call is removed.”",52.21398537289197,72.41379310344827,53.57142857142857,72.41379310344827,83.86889696121216
49,java,"Formats a phone number to create a new `DescriptiveTextWithControlsView` with call details and controls, then notifies the presenter that the model has been updated","Updates a user interface model with a formatted phone number, creating a descriptive text view and notifying a presenter of the update.”","Formats a phone number, updates a descriptive text view with the formatted number and related controls, and notifies a presenter of the UI update.”",4.15822995729259,39.13043478260869,4.545454545454545,30.434782608695656,72.87538647651672
50,java,"Initializes mute, end call, and dialpad buttons by assigning each an icon and a click listener to toggle mute status, disconnect the current call, and delegate to an onClick handler, respectively","Initializes audio control buttons (mute, end call, dialpad) within a user interface, assigning click listeners to toggle mute status, disconnect the call, and open the dialpad respectively.”","Initializes audio control buttons (mute, end call, dialpad) by creating view controls and assigning click listeners to toggle mute status, disconnect the call, or open the dialpad within an automotive user interface.”",32.04312470441263,62.06896551724138,28.571428571428577,55.172413793103445,74.65108036994934
53,cpp,"When a new listener is added, this callback immediately notifies it with an `AVAILABLE` status if the D-Bus connection is already active",Notifies a newly added listener with an `AVAILABLE` status if the DBus connection is currently connected.”,Notifies a newly added listener with an `AVAILABLE` status if the DBus connection is connected.”,31.52018604832909,61.53846153846153,32.43243243243243,51.28205128205128,81.86870813369751
54,cpp,"Atomically registers a given thread to be joined later by adding it to a list, but only if its associated connection is active and the thread is not already present in the list","Registers a thread and its connection for cleanup on program exit, ensuring the thread is added to a list of threads associated with a given connection if the connection exists.”","Associates a thread with a connection and adds it to a cleanup list to be executed upon program exit, ensuring threads associated with a connection are tracked for proper termination.”",9.216697657298868,50.793650793650805,19.672131147540988,28.571428571428566,64.74215984344482
56,cpp,A callback function that handles the removal of a D-Bus watch by stopping its monitoring and disassociating the high-level wrapper object from the underlying `libdbus` watch,"Handles the removal of a DBus watch by stopping its monitoring if ready and clearing associated data, logging an error if the provided context data is null.”","Removes a DBus watch by stopping its monitoring if ready, clearing associated data, and logging an error if the provided context is null.”",20.4708197395452,43.63636363636363,30.18867924528302,43.63636363636363,68.53899955749512
57,cpp,"Handles the toggling of a D-Bus watch by creating a C++ wrapper object for it on first use, and then starting or stopping its monitoring based on its readiness status",Manages the watching state of a DBus connection by either initializing a new DBusWatch object and starting it or toggling the watching state of an existing one based on readiness.”,"Manages the watching state of a DBus connection, creating a new DBusWatch object if one doesn't exist and starting/stopping its watching based on readiness.”",4.3494823950564045,45.90163934426229,6.779661016949152,39.34426229508197,72.85159230232239
58,cpp,"Lazily initializes and returns a thread-safe, singleton `DBusObjectManager` instance using a double-checked locking pattern","Lazily initializes and returns a shared pointer to a `DBusObjectManager` object, ensuring thread-safe creation using a mutex.”","Provides a thread-safe, lazily initialized shared pointer to a `DBusObjectManager` object for managing D-Bus objects.”",24.87344417023396,58.82352941176471,37.50000000000001,52.94117647058824,82.05253481864929
59,cpp,"Decrements a reference count for a given D-Bus service name, releasing it from the bus if the count reaches zero, and returns `true` on success or `false` if the name was not being tracked","Releases a service name on the D-Bus connection, decrementing a counter if the name is held multiple times or releasing it via `dbus_bus_release_name` if it's the last reference, while ensuring thread safety with a mutex.”","Releases a service name on the D-Bus connection by either decrementing a reference count or calling `dbus_bus_release_name` to remove the name, protected by a mutex for thread safety.”",5.917790766521186,48.0,13.698630136986301,26.666666666666668,63.53042721748352
60,cpp,"Steals the reply from a `DBusPendingCall` handle and wraps it in a new `DBusMessage` object that takes ownership, returning an empty message if the input handle is null","Converts a libdbus pending call reply to a DBusMessage object by stealing the underlying libdbus message and creating a wrapper, handling null input and controlling reference counting.”","Converts a libdbus pending call reply to a DBusMessage object by stealing the underlying libdbus message and creating a wrapper, handling null input and avoiding an increase in the libdbus message's reference count.”",2.0458013816314056,36.36363636363637,3.7735849056603774,21.818181818181817,68.97099018096924
61,cpp,Thread-safely deallocates a collection of asynchronous D-Bus message reply handlers by moving them from a protected member list to a local copy before iterating through and deleting each one,"Deletes asynchronously registered DBus message reply handlers by transferring them from a protected vector to a local vector, clearing the protected vector, and then iterating through the local vector to delete each handler.”","Deletes asynchronously registered DBus message reply handlers by safely transferring them from a protected vector to a local vector for iteration and deletion, ensuring thread-safe access to the handler list.”",17.083255863912036,46.87499999999999,29.032258064516125,43.75,74.47858452796936
62,cpp,Thread-safely notifies all registered signal handlers of a successful state by invoking their `onSpecificError` callback with a `SUCCESS` status for each associated signal tag,"Iterates through signal handlers and their associated tags, notifying each handler of a successful call status for each tag after acquiring a lock to protect the signal state handlers map.”","Iterates through stored signal handlers and their associated tags, notifying each handler of a successful call status for each tag after safely copying the signal state handlers map.”",9.188355573937164,50.90909090909091,18.867924528301888,32.727272727272734,65.67559242248535
63,cpp,"Thread-safely removes a connection, identified by its ID, from an internal collection if it exists",Releases a connection identified by `_connectionId` from a managed collection by removing it under the protection of a recursive mutex.”,"Removes a connection identified by `_connectionId` from a managed collection, ensuring thread safety with a recursive mutex.”",4.899864500847875,38.888888888888886,17.647058823529413,38.888888888888886,69.96393203735352
64,cpp,"Handles an incoming D-Bus signal by dispatching it to the appropriate handler for either ""InterfacesAdded"" or ""InterfacesRemoved"" events based on the message's member name",Handles DBus messages related to interface availability changes by routing 'InterfacesAdded' and 'InterfacesRemoved' signals to a dedicated event handler.”,Dispatches DBus signals indicating interface additions or removals to corresponding event handlers within an instance availability status event.”,1.8402902615276922,26.666666666666668,0.0,17.77777777777778,75.24464726448059
65,cpp,"Retrieves available service instances from a registry, translates the internal D-Bus representation into a vector of `DBusAddress` objects, and populates the provided output vector and status parameter","Retrieves a list of available DBus service instances from a registry and translates them into a vector of DBusAddresses, setting a success status if the operation completes without errors.”","Retrieves available DBus service instances from a registry, translating them into a vector of DBusAddresses and setting a success status.”",21.004850229269245,52.63157894736843,25.454545454545453,45.6140350877193,74.48617815971375
66,cpp,"Gets the availability status of a service instance by translating its identifier to a D-Bus address and querying a registry, setting the result and a success status in output parameters","Determines the availability status of a DBus service instance by translating an address, checking its liveness in a registry, and updating the availability and call status accordingly.”","Retrieves the availability status of a DBus service instance by translating its address, querying a registry for its liveness, and setting the availability and call status accordingly.”",25.267216956158865,62.06896551724138,28.571428571428577,51.724137931034484,76.76188349723816
67,cpp,"Handles a D-Bus ""InterfacesRemoved"" signal by parsing the object path and interface names, and for any interface matching the one being observed, notifies listeners that its status has changed to ""NOT_AVAILABLE","Handles a DBus signal indicating the removal of interfaces from an object, updating the internal state and notifying listeners if the removed interface matches the observed interface and removal is successful.”","Processes a DBus signal for interface removal, updating the availability status of an observed interface and notifying listeners if a match and successful removal occur.”",3.090250893027722,37.50000000000001,3.225806451612904,28.125,66.13879203796387
68,cpp,Notifies listeners of an interface's availability change by translating its D-Bus path and name into a generic CommonAPI address,Notifies listeners about a change in the availability status of a DBus interface by translating a DBus address to a common address format and then invoking a notification function.”,Translates a DBus address for an interface status change and notifies listeners of the new availability status.”,4.265552167438487,44.0,8.333333333333332,32.0,76.58253312110901
69,cpp,"Thread-safely schedules a task on the main event loop to notify a newly added listener, passing along its specific subscription details","Adds a listener and subscription to a DBusProxy, then pushes a function to the main loop to notify the listener when relevant DBus messages arrive.”",Registers a listener and subscription with a DBusProxy and schedules a notification to be sent to the listener via the main loop when corresponding DBus messages are received.”,7.432998184513635,38.297872340425535,13.333333333333334,29.787234042553195,65.41317105293274
70,cpp,Thread-safely removes all listeners from an internal collection that match the provided `Subscription` identifier,Removes a listener from a collection of listeners associated with a specific subscription by iterating through the collection and erasing the matching subscription.”,"Removes a listener from a collection of listeners, protected by a mutex, based on a given subscription by iterating and erasing the matching entry.”",2.1300733682208985,31.578947368421055,0.0,26.315789473684205,61.260610818862915
71,cpp,Delegates the registration of a signal state handler for a specific subscription to the underlying connection object,Adds a signal handler and its associated subscription to the connection object to manage DBus signal handling.”,Registers a DBus signal handler with a specific subscription on the connection object to enable signal reception and processing.”,11.451997463067551,47.05882352941176,25.0,47.05882352941176,69.4803774356842
72,cpp,Handles the result of an asynchronous service instance query by translating the `DBusAddress` list to a string list on success and invoking a final callback with the call status and the translated list,"Handles the asynchronous callback from a DBus proxy, translating available service instances into strings and passing the status and instances to a provided callback function.”","Processes the asynchronous callback from a DBus proxy, converting available service instances to strings and invoking a callback with the call status and translated instances.”",4.370803140940122,44.82758620689655,10.714285714285714,27.58620689655172,70.53231596946716
73,cpp,"Dispatches an incoming `DBusMessage` to a registered handler based on its object path and interface, or handles it as a standard introspection request, returning `true` if the message was processed","Handles incoming DBus messages by looking up a registered interface handler, calling its message handler if found, or processing introspectable interface messages directly.”","Handles incoming DBus messages by attempting to route them to a registered interface handler based on object path and interface name, or by directly processing messages for the Introspectable interface.”",3.6219817317743304,37.73584905660377,3.9215686274509802,22.641509433962266,70.3326940536499
74,cpp,"Registers a D-Bus interface handler for a specific path, returning `false` if the exact handler is already registered, but allowing idempotent registration for standard `ObjectManager` and `Properties` interfaces","Adds a DBus interface handler to a table, checking for existing handlers and handling specific object manager interfaces to avoid duplicates.”","Adds a DBus interface handler to a table, preventing duplicates and handling special cases for object manager interfaces.”",2.779685274167129,32.0,4.166666666666666,28.000000000000004,65.99792838096619
75,cpp,"Registers a given `DBusInterfaceHandler` to a specific path in a table, returning `true` on success and `false` if the handler is already registered for that path","Adds a DBusInterfaceHandler to a table of registered objects, keyed by interface path, ensuring no duplicate handlers are added for the same path.”","Adds or updates a DBusInterfaceHandler in a table of registered objects, keyed by interface path, preventing duplicate handlers for the same path.”",4.047633651892491,40.816326530612244,12.76595744680851,32.6530612244898,65.78267812728882
78,c,"Constructs and sends a 2-byte UDS positive response to an ECU Reset request, containing the positive response SID and the echoed reset type, over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","Sends a positive response to an ECU reset request via ISOTP, constructing a message with a specific SID and reset type, and logging any transmission errors.”","Sends a positive response to an ECU reset request via ISOTP by transmitting a message containing a predefined SID and the reset type, while also logging any transmission errors.”",12.646044321261718,51.51515151515152,28.125,45.45454545454545,76.47728323936462
79,c,"Processes a UDS ECU Reset request, validating the 2-byte message length, sending a positive response before triggering a system reboot for a 'hard reset', and sending a negative response for either an incorrect length or an unsupported reset sub-function","Handles an ECU reset request by validating the message length, processing a hard reset type by initiating a system reboot, and returning an error for unsupported reset types.”","Handles an ECU reset request by validating the message length and initiating a cold reboot for a hard reset type, while returning an error for unsupported reset types.”",7.554826140809348,55.072463768115945,26.865671641791046,43.47826086956522,75.226491689682
80,c,"Constructs and sends a 4-byte UDS positive response for a ""Request Download"" service, specifying a maximum block length of 0x00D2, over a CAN bus using the ISO-TP protocol and logging an error on failure",Sends an ISOTP request to download a response with a specified block size by constructing a UDS download response message and transmitting it via the isotp_send function.”,"Sends a UDS download response request via ISOTP by constructing a message containing a positive SID, response code, and block size, and transmitting it using isotp_send.”",1.5538904395808322,37.5,0.0,21.875000000000004,64.87109065055847
81,c,"Constructs and sends a 2-byte UDS positive response for a Transfer Data request (containing the positive SID and the block sequence counter) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","Sends a transfer data response via ISOTP, constructing a message with a positive service ID and block sequence counter, and handling potential errors during transmission.”","Sends a transfer data response over ISOTP by transmitting a message containing a positive service identifier and block sequence counter, logging any transmission errors.”",4.326515788528823,43.75,16.129032258064516,31.25,73.49545359611511
82,c,"Constructs and sends a 5-byte UDS positive response for the Routine Control service (containing the routine control type, routine ID, and a result code) over a CAN bus via ISO-TP, logging an error if the transmission fails","Sends a diagnostic routine control result via ISOTP to a specified CAN ID, encapsulating the routine ID and result within a UDS-defined message structure.","Sends a diagnostic routine control result via ISOTP to a specified CAN ID, encapsulating the routine ID and result within a UDS-defined message structure for remote routine control feedback.",3.2647491691072665,43.75,16.129032258064516,31.25,68.08370351791382
83,c,"Constructs and sends a 1-byte UDS positive response for a Transfer Exit request (containing the request SID + 0x40) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails",Sends a positive transfer exit response message over ISOTP using a predefined service ID and error handling for transmission failures.”,"Sends a positive transfer exit response message over ISOTP to a specific CAN ID, utilizing a predefined service ID and logging transmission errors.”",1.4182651221632032,47.27272727272728,7.547169811320755,32.72727272727273,69.81456875801086
85,c,"Searches a predefined `id_mapping` array for a given CAN ID and returns its corresponding index, or `0xff` if the ID is not found",Maps a CAN identifier (`can_id`) to a corresponding index within a translation table (`id_mapping`) and returns the index or `0xff` if no match is found.”,Maps a CAN identifier (`can_id`) to an index within a translation table (`id_mapping`) by searching for a match and returning the index or `0xff` if no match is found.”,21.080810117233366,62.7450980392157,28.571428571428577,47.05882352941176,74.24676418304443
86,c,"Disables a specific LIN-to-CAN receive filter by clearing its callback pointer, or disables all filters if a special ID is passed, while ignoring out-of-bounds IDs","Removes a specific CAN receive filter by setting the corresponding callback function to null, potentially clearing all filters if `filter_id` is `TRANSLATABLE_ADDRESSES_LEN`.","Removes a CAN receive filter by setting the associated callback to null, with an option to clear all filters if the provided ID matches the length of translatable addresses.",8.568635726825898,51.85185185185185,26.923076923076923,44.44444444444445,64.70745801925659
87,c,"A LIN driver callback that retrieves a pending outgoing frame from a message queue, copies its data for transmission, invokes a frame-specific completion callback, and returns a boolean indicating if a frame was successfully prepared","Retrieves a LIN frame from a message queue, copies its data into a provided LIN frame structure, and then invokes a user-defined callback function to transmit the frame via CAN.”","Retrieves a LIN frame from a message queue, populates a provided LIN frame structure with its data, and triggers a user-defined callback function to handle the frame's transmission over CAN.”",25.52177338617325,53.7313432835821,30.769230769230766,44.776119402985074,72.65381217002869
88,c,"Acts as a LIN-to-CAN gateway callback, translating an incoming LIN frame by using its first data byte's top two bits as an index to find a target CAN ID, constructing a new CAN frame with the translated ID and a payload where those index bits are masked out, and finally invoking a registered handler with the resulting CAN frame","Handles incoming LIN frames by translating the LIN identifier to a CAN identifier, extracting relevant data, and invoking a registered callback function to process the translated CAN frame.”","Translates incoming LIN frames to CAN frames by mapping the LIN ID to a CAN ID, extracting data, and invoking a registered callback function to handle the translated CAN frame.”",3.575847628094673,44.44444444444444,11.363636363636363,28.888888888888893,69.52936053276062
89,c,"Initializes a high-voltage shield by configuring its Output Enable (OE) GPIO, writing a zeroed state to its hardware registers, and then setting the OE pin to enable the device's outputs, logging errors at each step","Initializes a high-voltage shield device by configuring an output enable pin, initializing internal registers, updating shield settings, and enabling the shield output.”","Initializes a high-voltage shield device by configuring and enabling an output enable pin, initializing internal registers, and updating shield settings.”",8.731733641905398,46.666666666666664,20.689655172413794,40.0,72.64212965965271
90,c,"Sets the gain for a specified DAC (0 or 1) on a high-voltage shield by updating its value in a cached data structure and then calling an update function to write the new configuration to the hardware, returning an error for an invalid DAC index","Sets the digital-to-analog converter (DAC) gain for a high-voltage shield device by updating a register and triggering an update function, validating the DAC number and gain value.”",Configures the gain of a specified DAC (0 or 1) within a high-voltage shield device by updating a corresponding register and initiating a device update.”,7.928575443882451,52.63157894736841,24.324324324324326,44.73684210526315,71.07369303703308
91,c,"Enables or disables a specific GPIO output on a high-voltage shield by validating the pin index (0-31), remapping it via a nibble-swap, modifying a cached register bit, and then calling a helper function to write the update to the hardware","Configures the output enable state of a specific GPIO pin by manipulating a bitfield within a register, after validating the index and adjusting it based on a grouping scheme.”","Enables or disables a GPIO output pin by setting or clearing a corresponding bit in a register, after validating the index and adjusting it for register mapping.”",5.0291241357533245,47.22222222222222,11.428571428571427,25.0,72.43208885192871
92,c,"A callback function that forwards a received CAN frame from a source device to a destination device (passed via `user_data`) using a non-blocking send operation, logging a debug message on successful queuing or a warning on failure",Routes a CAN frame received on one device to another specified device by attempting to send the frame using `can_send` and logging success or failure.”,Routes a CAN frame received on one device to another specified device by attempting to send the frame using `can_send` and logging routing activity or transmission errors.”,3.154145773175296,40.0,6.349206349206349,33.84615384615385,71.68048024177551
93,c,"Configures a CAN message router by iterating through an array of routing entries, adding a receive filter to a source CAN interface for each entry that uses a callback to forward matching frames to a destination interface, and returns an error if any filter registration fails","Registers a set of CAN router entries by iterating through them and adding corresponding receive filters to the CAN controller, returning an error code if any registration fails.”","Registers a set of CAN router entries by adding receive filters to the CAN controller for each entry, returning an error code if any registration fails.”",5.212802447765168,51.35135135135135,13.888888888888888,43.24324324324324,77.60303020477295
94,c,"Initializes the CAN router by iterating through all statically-defined routing tables found in a dedicated linker section and registering their entries, returning an error if any registration fails","Registers CAN router entries from a predefined table by iterating through the table and calling `can_router_register` for each entry, returning an error code if registration fails.”","Initializes the CAN router by registering entries from a statically defined table using `can_router_register`, returning an error if registration fails.”",12.787395553510192,52.63157894736843,21.818181818181817,42.10526315789473,72.30640053749084
95,c,"Iterates through a pre-configured list of low-voltage GPIOs, setting the state of each pin enabled by an input mask to the corresponding bit in a value word, logging and returning an error if any underlying GPIO operation fails",Sets the levels of specified GPIO pins within a given port to a defined value by iterating through a configuration and using the `gpio_pin_set` function for each pin specified in the mask.”,Configures the level of specific GPIO pins on a device port to a given value by iterating through a configuration and setting each selected pin using the `gpio_pin_set` function.”,3.6160159476806646,40.54054054054054,5.555555555555555,18.918918918918916,64.27367329597473
96,c,"Populates an output parameter with the number of available Abstract LIN callback slots, calculated by subtracting the used count from a configured maximum, returning an error if the parameter is a null pointer","Retrieves the number of available callback slots for a LIN device by subtracting the number of used callbacks from the maximum allowed, returning an error if the provided buffer is null.”","Calculates and returns the number of free callback slots for a LIN device, based on the configured maximum and the currently used callbacks, returning an error if the provided buffer is null.”",27.12338258888614,65.625,32.25806451612903,59.375,79.2198657989502
97,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","Registers an incoming callback function for a specific frame ID and size within an abstract LIN (Local Interconnect Network) device, validating input parameters and allocating a slot to store the callback details.”","Registers an incoming callback function for a specific frame ID and size within an abstract LIN (Local Interconnect Network) device, performing input validation and allocating a callback slot in a data structure.”",12.085298050950934,55.99999999999999,21.91780821917808,42.666666666666664,71.2428629398346
98,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","Registers an outgoing callback function for a specific frame ID and size within an abstract LIN communication system, validating input parameters and allocating a slot to store the callback details.”","Registers an outgoing callback function for a specific frame ID and size within an abstract LIN communication system, validating input parameters and storing the callback details in a designated slot.”",11.277843087172476,57.534246575342465,22.535211267605636,43.83561643835616,71.90995216369629
99,c,"Sets the active LIN schedule table by index, first validating the index and then using a semaphore to thread-safely update the scheduler's state and reset its entry pointer to the start of the new table","Sets the active table index for a LIN scheduler, ensuring exclusive access via a semaphore and resetting the table entry counter to zero.”","Activates a specific table within a LIN scheduler by acquiring a semaphore for exclusive access, updating the current table index, and resetting the entry counter.”",5.953952641585805,46.666666666666664,10.344827586206897,33.33333333333333,71.51811122894287
100,c,"Disables a LIN scheduler by first checking if it's already stopped, then taking a semaphore to safely wait for the current operation to complete before setting the active schedule table index to -1",Disables a linear scheduling instance by setting its current table to -1 and acquiring a semaphore to ensure exclusive access.”,Disables a linear scheduling instance by setting its current table to -1 and blocking until the scheduler is no longer active.”,6.132130348776006,40.74074074074075,15.384615384615385,25.925925925925924,69.91949081420898
