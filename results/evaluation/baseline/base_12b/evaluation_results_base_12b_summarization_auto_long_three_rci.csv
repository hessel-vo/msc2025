id,language,reference,generated,generated_rci,bleu_score,rouge1,rouge2,rougeL,bertscore_f1
2,python,"Raises an exception if the specified 'datatype' is unsupported, otherwise retrieves that type's validation function and returns the boolean result of calling it with the provided 'value'","Validates that a given datatype is supported, then uses the datatype's associated constructor to check if the provided value conforms to that datatype”","Validates that a given datatype is supported, then returns true if the provided value can be successfully converted to that datatype using its constructor”",4.345789962946894,30.769230769230766,15.999999999999998,23.076923076923077,69.89918947219849
3,python,"Validates that a given value, or each value in a list, is an integer that fits within the numerical range defined by a specified bit-width and signedness",Validates if a given value or list of values are within the specified range for a signed or unsigned integer of a given bit width.,Checks if a single value or a list of values represents a valid signed or unsigned integer within a specified bit range.,4.5117064786907095,44.0,16.666666666666664,40.0,79.17000651359558
4,python,"Returns the type definition tuple from a class-level list of types that matches the provided 'datatype' name, or returns None if no match is found","Searches a predefined list of data types for a match to the provided datatype string and returns a tuple containing the datatype name, a callable, and a list of subtypes if found, otherwise returns None.”","Searches a predefined list of data types for a match to the provided datatype string and returns the corresponding tuple (name, callable, subtypes) if found, otherwise returns None.”",4.942681158143397,59.25925925925927,19.23076923076923,37.03703703703704,70.61394453048706
5,python,Returns a dictionary mapping the short name to the full FQN for all dynamic datatypes that exist in the same namespace as the provided FQN,"Identifies and returns a dictionary of namespaced datatypes from a list of dynamic datatypes, matching a given fully qualified name prefix.","Identifies and returns a dictionary of namespaced datatypes from a list of dynamic datatypes, matching a given fully qualified name to its complete namespaced representation.",4.807547001959649,28.000000000000004,16.666666666666664,20.000000000000004,63.798511028289795
7,python,"Parses a type string to create an `ApiGearType` object, mapping common primitive types to their ApiGear equivalents, sanitizing custom type names by replacing dots with underscores, and setting an array flag based on a ""[]"" suffix","Converts a string representation of a data type (e.g., 'int32', 'string[]', 'double') into an ApiGearType object, handling basic types, floating-point types, booleans, strings, and arrays while mapping custom types to their corresponding ApiGearBasicType values.”","Maps a string representation of a data type (e.g., 'int32', 'string[]', 'double') to an ApiGearType object, recognizing basic types, floating-point types, booleans, strings, and arrays, and converting custom types to a standardized representation.”",3.381970619593248,34.285714285714285,8.823529411764707,28.57142857142857,64.87423777580261
8,python,"Creates an `ApiGearProperty` by converting the VSS node's datatype to a supported ApiGear type and copying its description, returning `None` and logging a warning if the datatype is not supported","Generates an ApiGearProperty object based on a VSSNode's datatype and data, returning None if the datatype is unsupported.”","Creates an ApiGearProperty object from a VSSNode's data and datatype, logging a warning and returning None if the datatype is not supported.”",19.732880105853397,70.37037037037037,38.46153846153846,55.55555555555556,77.12368965148926
10,python,"Loads and parses multiple VSpec files from specified paths, using a list of include directories, then merges them into a single composite VSpec object and returns it, raising an exception if no files are successfully loaded","Loads and merges VSpec objects from a list of specification files, including any files they reference, logging the process and raising an exception if no specifications are loaded.”","Loads and merges VSpec objects from a list of specification files and their included files, logging the process and raising an exception if no specifications are loaded.”",14.857194209763092,57.14285714285715,22.950819672131146,47.61904761904762,77.68658995628357
11,python,"Recursively updates a 'base' dictionary with an 'update' dictionary, merging nested dictionaries for common keys and overwriting or adding all other key-value pairs","Recursively merges the contents of an 'update' dictionary into a 'base' dictionary, overwriting existing values or creating new keys, and deeply merging nested dictionaries.”","Recursively merges the contents of an 'update' dictionary into a 'base' dictionary, deeply merging nested dictionaries and overwriting existing values with non-dictionary values.”",14.710052131359536,54.166666666666664,30.434782608695656,37.5,72.09991216659546
12,python,"Asserts that the input value, if not None, is a valid 'constUID' formatted as an 8-digit hexadecimal string prefixed with '0x', returning the value if the check passes","Validates that a given string 'v' conforms to the 'constUID' format (starting with '0x' followed by eight hexadecimal characters) and returns the string if valid, otherwise returning None.","Validates that a given string 'v' conforms to the 'constUID' format (starting with '0x' followed by eight hexadecimal characters) and returns the validated string if valid, raising an assertion error if invalid.",3.3355592666827527,42.62295081967213,3.389830508474576,22.950819672131146,75.81840753555298
13,python,"Initializes a VSSRaw model and attempts to resolve it, returning the successfully resolved model or the original unresolved model if resolution fails due to a validation or model error","Creates a VSSRaw object from input data and an optional fully qualified name, attempts to resolve it, and returns the object, logging a debug message if resolution fails due to validation or model errors.”","Creates a VSSRaw object from input data and an optional fully qualified name, attempts to resolve it using `resolve_vss_raw`, and returns the object, logging a debug message if resolution fails.”",9.905603757948775,39.344262295081975,20.338983050847457,36.0655737704918,69.25915479660034
14,python,"Asserts that each string in the input list is a valid datatype by checking against a master list, returning the original list if all values are valid","Validates that all provided string values are present in a predefined list of supported datatypes, raising an assertion error if an invalid datatype is encountered, and returning the original list if all values are valid.”","Verifies that a list of string values contains only valid datatypes from a predefined list, raising an assertion error for any invalid entries and returning the original list if all entries are valid.”",17.827531042796252,53.333333333333336,20.689655172413794,43.33333333333332,76.55944228172302
15,python,"Traverses a VSSNode tree to generate a formatted string, displaying each node's name followed by the values of any specified attributes found on it","Generates a string representation of a VSSNode tree, recursively traversing the tree and formatting each node's name and specified attributes (if present) into a readable, indented structure.","Generates a formatted string representation of a VSSNode tree, recursively traversing the tree and including each node's name and specified attributes in an indented, readable format.",12.67231758411645,53.84615384615385,32.0,34.61538461538461,80.47425746917725
16,python,"Recursively traverses up the parent hierarchy to find and return the first non-instance ancestor node and the traversal depth, raising an exception if the starting node is not a branch or if no root is found","Recursively traverses up the VSS node tree to find the root instance node, incrementing the depth with each level, and raising an exception if an instance root cannot be found.”","Recursively traverses up the VSS node tree to locate the nearest instance root node, incrementing the depth with each level, and raising an exception if no instance root is found.”",18.359966847511686,59.70149253731343,27.692307692307693,53.73134328358209,74.38157200813293
17,python,Recursively calculates the depth of the first-found branch of children where each node is a `VSSDataBranch` with its `is_instance` flag set,"Recursively traverses the children of a VSSDataNode, returning the depth of the nearest instance branch, or 0 if no instance branch is found.”","Recursively traverses the children of a VSSDataNode to determine the depth of the nearest VSSDataBranch marked as an instance, returning 0 if no such branch is found.”",10.22875701616399,52.0,12.499999999999996,27.999999999999996,69.28887367248535
18,python,Returns a list of node IDs from an input list whose expected parent's name matches the provided `name`,Filters a list of node IDs to return only those whose expected parent is a specified name.”,"Filters a list of node IDs, returning only the IDs of nodes whose expected parent matches a given name.”",20.331710659744477,57.89473684210527,33.33333333333333,52.63157894736842,71.47785425186157
19,python,"Retrieves an attribute from an object, returning a specified default value if the attribute is missing or its value is `None`","Safely retrieves an attribute from an object by name, returning a provided default value if the attribute is not found or is None.”","Safely retrieves an attribute from an object by name, returning a specified default value if the attribute is missing or its value is None.”",66.95960204886555,93.33333333333333,88.37209302325583,93.33333333333333,90.2079164981842
20,python,Generates a `proto3` file from a VSS tree by first writing import statements for complex data types and then converting each branch in the tree into a corresponding protobuf message,"Traverses a VSS node tree to generate a Protocol Buffer definition file, including necessary imports for custom datatypes and defining messages based on branch nodes within the tree.”","Traverses a VSS node tree to generate a Protocol Buffer definition file, including imports for custom datatypes and defining messages based on branch nodes and their children.”",3.2850105791223916,28.070175438596497,3.6363636363636367,21.05263157894737,70.62795758247375
21,python,"Traverses a VSS tree to find all terminal instance branches, grouping their relative names into a dictionary where each key is the fully qualified name of the original branch they instantiate","Traverses a VSS node tree in pre-order, identifies instance branches without further nested instances, extracts their fully qualified names relative to their root instance, and aggregates them into a dictionary mapping root instance FQNs to lists of their child instance names.”","Traverses a VSS node tree in pre-order, identifies leaf instance branches, extracts their relative FQNs, and aggregates them into a dictionary mapping root instance FQNs to lists of their child instance names.”",9.984063694388796,43.75,19.35483870967742,37.50000000000001,70.55532336235046
22,python,Checks if a given VSSNode is a leaf by verifying its 'data' attribute is an instance of VSSDataDatatype,Determines if a VSSNode represents a leaf node by checking if its 'data' attribute is an instance of VSSDataDatatype.”,Checks if a VSSNode is a leaf node by verifying if its 'data' attribute is of type VSSDataDatatype.”,32.82518529729175,83.33333333333334,52.94117647058824,83.33333333333334,90.35233855247498
23,python,Returns `True` if the given `VSSNode`'s data is a `VSSDataBranch` and its `is_instance` attribute is `False`,"Checks if a VSSNode represents a branch with an uninstantiated data structure, indicating a potential VSS branch.”","Determines if a VSSNode represents a branch containing uninstantiated data, signifying a VSS branch.”",1.5966588916835565,25.0,0.0,25.0,57.92309045791626
24,python,Returns True if the node's data is a VSSDataBranch and its 'is_instance' attribute is True,Checks if a VSSNode represents an instance of a VSSDataBranch by verifying both its data type and an 'is_instance' flag within the data.,Determines if a VSSNode represents an instance of a VSSDataBranch by inspecting its data type and an 'is_instance' attribute.,14.610534486579725,48.648648648648646,17.142857142857142,37.83783783783783,74.28301572799683
25,python,"Calculates a 32-bit FNV-1 hash for a given byte string by iterating through each byte, multiplying the current hash by the FNV prime, and then performing a bitwise XOR with the byte",Calculates a 32-bit FNV-1a hash value for a given byte string using a specific prime number and bitwise operations.,Computes a 32-bit FNV-1a hash value for a byte string by iteratively updating a hash value using a prime number and XOR operation.,11.274349490073288,50.84745762711865,21.05263157894737,47.45762711864407,76.994389295578
28,java,"Inflates the `card_fragment` layout, finds and assigns the card's title and icon views, and returns the resulting root view","Inflates a layout (`card_fragment`) to create a `View`, finds the `card_name` and `card_icon` views within it, and returns the inflated `View` as the fragment's root.”","Inflates a layout (`card_fragment`) to create a `View`, retrieves references to the `card_name` and `card_icon` views within it, and returns the inflated `View` as the fragment's root.”",16.14619457164275,61.53846153846153,20.0,46.15384615384615,72.48741388320923
29,java,"Updates an `ImageButton`'s icon and click listener from a content object and makes it visible, or hides the button if the content is null","Updates the visibility and properties (icon and click listener) of an `ImageButton` based on the provided `DescriptiveTextWithControlsView.Control` content, showing it if the content is not null and hiding it otherwise.","Conditionally updates an `ImageButton`'s icon, click listener, and visibility based on the presence of a `DescriptiveTextWithControlsView.Control` object.",20.92241878602314,50.0,23.80952380952381,40.90909090909091,69.45661902427673
30,java,"Lazily inflates a `ViewStub` to create a descriptive text layout, caches references to its child views (title, subtitle, image), and returns the inflated layout","Lazily inflates a `ViewStub` into a `View` containing title, subtitle, optional image, and 'tap for more' elements, storing these components as member variables for later use.","Lazily inflates a `ViewStub` into a `View` containing title, subtitle, optional image, and 'tap for more' elements, caching the inflated view and its child views for subsequent access.",25.516994599541146,53.84615384615385,31.999999999999996,42.30769230769231,78.3026933670044
31,java,Updates the header view on the main UI thread by making its root view visible and setting the card's title and icon from the provided `CardHeader` object,"Updates the visibility and content of a header view within the activity's UI thread, setting the card title and icon based on the provided `CardHeader` object.","Updates the visibility and content of a header view on the main thread, setting the card title and icon based on the provided `CardHeader` object.",36.75234456178971,71.69811320754718,47.05882352941176,67.9245283018868,85.99027395248413
32,java,"Lazily inflates a `ViewStub` to create and return the text block layout view, while also finding and caching references to its child text views on the first call","Lazily initializes and returns a `View` from a `ViewStub` within the root view, inflating it and retrieving references to its child views (`text_block` and `tap_for_more_text`) for later use.","Lazily initializes and returns a `View` from a `ViewStub` within the root view, inflating it and obtaining references to its child views (`text_block` and `tap_for_more_text`) for subsequent use.",12.120981066263758,50.0,17.241379310344826,36.66666666666667,75.19619464874268
33,java,"Queries the `PackageManager` for a `MediaBrowserService` within a given package and returns a `ComponentName` for the first one found, or `null` if none exist","Queries the system for a media browsing service within a specified package, returning its `ComponentName` if found, otherwise returning null.",Retrieves the `ComponentName` of a media browsing service within a given package by querying the system's package manager.,10.625050472977374,37.2093023255814,14.634146341463413,32.55813953488372,73.96405339241028
34,java,"Determines if a component should be added to a launchable list, returning `false` if its package is explicitly hidden or if it's a custom media component and launchable apps are also being shown, otherwise returning `true` for valid launchable or media service types","Determines whether a given component should be added to a list of launchables based on a blacklist of package names, a set of custom media components, and the component's application type, logging an error for invalid application types.”","Determines whether a component should be added to launchables, excluding packages in a blacklist or custom media components when the appropriate app types are specified, and logging an error for invalid component application types.”",12.312477793544447,41.02564102564102,15.789473684210527,35.8974358974359,70.14280557632446
35,java,"Sets the car's media source to a given component in browse mode and finishes the context if it's an Activity, catching and logging a `CarNotConnectedException` if the car service is unavailable","Selects a media source and finishes the activity, utilizing a `CarMediaManager` to set the media source mode to browse for a specified component, while handling potential `CarNotConnectedException` errors.","Sets the media source to browse mode for a given component using a `CarMediaManager` and finishes the activity, gracefully handling `CarNotConnectedException` by logging an error.",14.10343581595348,62.06896551724138,28.571428571428577,44.82758620689655,77.0590603351593
36,java,"Safely checks if a given activity is distraction optimized using the `CarPackageManager`, returning `false` and logging an error if the manager is null or a `CarNotConnectedException` is caught","Checks if a specified activity within a given package is distraction optimized using a `CarPackageManager`, handling potential `CarNotConnectedException` errors and returning a boolean indicating the optimization status.","Determines whether a given activity within a specified package is optimized for distraction mitigation by querying a `CarPackageManager`, logging an error if the car is not connected, and returning a boolean result.",21.552305276172266,53.333333333333336,20.689655172413794,43.33333333333333,74.23599362373352
38,java,"Retrieves a specific, resolvable map `Intent` from a configured list if it matches the system's default map app, otherwise falls back to a generic `Intent` for any map application","Constructs an `Intent` to launch a maps application, prioritizing preferred activities defined in a resource array while falling back to the system default if no preferred or valid activities are found.”","Constructs an `Intent` to launch a maps application, iterating through preferred activities defined in a resource array and returning the first valid and compatible activity, falling back to the system default if none are found.”",5.32213197742502,30.769230769230766,6.349206349206351,15.384615384615383,63.55199217796326
39,java,"Lazily initializes a set of `HomeCardModule`s by reflectively instantiating class names from a configuration array, and then uses a `FragmentTransaction` to add each module's card view to the UI layout","Lazily initializes a set of `HomeCardModule` instances by dynamically creating them via reflection from a resource array, setting a `ViewModelProvider` for each, and then adding their corresponding views to the fragment manager at their defined resource IDs.”","Lazily initializes a set of `HomeCardModule` instances by dynamically creating them via reflection from a resource array, providing each with a `ViewModelProvider`, and then adding their views to the fragment manager at their specified resource IDs.”",23.27121738310495,47.05882352941176,24.242424242424246,41.1764705882353,76.71642899513245
40,java,"Iterates through a list of appeared tasks and uses the `ActivityTaskManager` to remove any task that is in multi-window mode, logging it as a dangling task","Iterates through a list of `TaskAppearedInfo` objects, identifies tasks running in multi-window mode, and removes them using `ActivityTaskManager` to clean up dangling tasks.","Iterates through a list of `TaskAppearedInfo` objects, identifies tasks running in multi-window mode, and removes them from the system using `ActivityTaskManager` to clean up dangling tasks.",26.385481354743817,55.55555555555556,30.76923076923077,40.74074074074074,79.47771549224854
41,java,Parses the mode from the current Intent and sets the title for both the Activity and the CarUi toolbar using the string resource ID defined in that mode,"Parses the application's mode from the incoming intent, sets the activity title, and updates the toolbar title accordingly.”","Determines the application's mode from the intent, setting both the activity and toolbar titles based on the parsed mode.”",7.319349278089436,50.0,21.73913043478261,50.0,74.30492639541626
42,java,"Lazily initializes and returns a `Chronometer` by finding it in the layout, while also finding and caching its associated separator view on the first call","Lazily initializes and returns a `Chronometer` view, retrieving it from a layout and also its associated separator view if they haven't been initialized previously.","Lazily initializes and returns a `Chronometer` view, retrieving it and its associated separator view from a layout only if they haven't been initialized previously.",35.3574973073037,52.0,33.33333333333333,48.0,74.92777109146118
43,java,"Lazily inflates a media layout from a `ViewStub`, finds and caches its title and subtitle views, initializes its media playback controls bar via a presenter, and returns the inflated view","Lazily initializes and returns a `View` from a `ViewStub` within the root view, populating title and subtitle text views and initializing a media control bar with the presenter.","Lazily initializes and returns a `View` inflated from a `ViewStub`, finding and caching title, subtitle, and media control bar views for later use and initializing the control bar with the presenter.",17.68738680104602,62.29508196721313,10.169491525423728,39.34426229508197,75.43898224830627
44,java,"If a valid `Drawable` and card size are provided, this method scales the image to a square based on the card's largest dimension, blurs it, and sets the resulting bitmap as the animated, visible card background","Updates the background image of a card by scaling a provided `Drawable` to a square, blurring it, and setting it as the card's blurred background image, ensuring visibility if the image and card size are valid.","Updates the card's background image by scaling a provided `Drawable` to a square, blurring it, and setting it as the card's blurred background, only if the image and card size are valid.",15.353897595014283,64.78873239436619,28.985507246376805,30.98591549295775,73.3610212802887
45,java,Makes the media layout view visible and updates its title and subtitle with the provided text,Updates the visibility and text content of a media layout view with provided title and subtitle strings.”,Sets the visibility of a media layout view to visible and updates its title and subtitle text fields with the provided strings.”,35.82342119128719,78.94736842105263,55.55555555555556,73.68421052631578,82.81338214874268
46,java,"If the content's start time is positive, this method makes a chronometer and a separator visible, sets the chronometer's base time, and starts it; otherwise, it hides both views","Conditionally displays a chronometer and separator based on the provided `DescriptiveTextWithControlsView`'s start time, initializing and starting the chronometer if the start time is positive.","Conditionally shows a chronometer and separator, initializing and starting the chronometer with the view's start time if it's greater than zero.",5.681549651875399,51.85185185185185,19.23076923076923,33.333333333333336,69.55803632736206
47,java,Registers a member callback to the provided `Call` object after verifying it is not null,"Registers a callback with the provided `Call` object to receive updates related to the call, ensuring the callback is only registered if the `Call` is not null.",Registers a callback with a non-null `Call` object to receive updates related to the call.,18.71015823041063,51.61290322580646,20.689655172413797,38.70967741935484,76.57808065414429
48,java,"Handles the removal of a call by clearing the current call and card content, notifying the presenter of the model update, and unregistering its callback from the call object for cleanup","Clears call-related data, notifies the presenter of an update, and unregisters a callback from the removed call to prevent further notifications.","Resets call data, notifies the presenter of an update, and unregisters a callback from the removed call to prevent further notifications.",10.058674890282683,42.30769230769231,20.0,38.46153846153846,74.02108311653137
49,java,"Formats a phone number to create a new `DescriptiveTextWithControlsView` with call details and controls, then notifies the presenter that the model has been updated","Formats a phone number, creates a `DescriptiveTextWithControlsView` using the formatted number and other UI elements, and then notifies the presenter that the model has been updated.","Formats a phone number using `TelecomUtils`, creates a `DescriptiveTextWithControlsView` with the formatted number and associated UI controls, and then notifies the presenter of the model update.",24.544133650973997,60.0,33.33333333333333,60.0,85.36321520805359
50,java,"Initializes mute, end call, and dialpad buttons by assigning each an icon and a click listener to toggle mute status, disconnect the current call, and delegate to an onClick handler, respectively","Initializes three `DescriptiveTextWithControlsView.Control` objects representing mute, end call, and dialpad buttons, configuring each with an icon and a corresponding action to modify call state via `mInCallService` or `mCurrentCall`.","Initializes three `DescriptiveTextWithControlsView.Control` objects representing mute, end call, and dialpad buttons, associating each with an icon and a lambda expression to trigger actions on `mInCallService` (for mute) or `mCurrentCall` (for end call and dialpad).",20.15451792128069,48.48484848484849,28.125,48.48484848484849,66.28851294517517
53,cpp,"When a new listener is added, this callback immediately notifies it with an `AVAILABLE` status if the D-Bus connection is already active",Notifies a newly added listener with an `AvailabilityStatus::AVAILABLE` signal if the D-Bus connection is currently connected.,"If the D-Bus connection is connected, notifies a newly added listener with an `AvailabilityStatus::AVAILABLE` signal, otherwise doing nothing.",16.279348731624776,60.46511627906976,29.268292682926827,27.906976744186046,71.5370237827301
54,cpp,"Atomically registers a given thread to be joined later by adding it to a list, but only if its associated connection is active and the thread is not already present in the list","Associates a given thread with a D-Bus connection by adding the thread pointer to a vector of threads associated with the connection, ensuring thread safety via a mutex.","Associates a given thread with a D-Bus connection by adding the thread pointer to a vector of threads associated with the connection, ensuring thread safety with a mutex and only adding the thread if it's already associated with the connection.",6.30678166162876,45.33333333333333,13.698630136986301,37.33333333333333,68.57388615608215
56,cpp,A callback function that handles the removal of a D-Bus watch by stopping its monitoring and disassociating the high-level wrapper object from the underlying `libdbus` watch,"Handles the removal of a D-Bus watch by retrieving associated data, stopping the watch if it's ready, and clearing the watch's data before releasing the watch object.”","Removes a D-Bus watch by retrieving and potentially stopping its associated `DBusWatch` object, then clearing the watch's data and releasing the watch.”",12.079564118208545,46.15384615384615,20.0,38.46153846153846,70.72497010231018
57,cpp,"Handles the toggling of a D-Bus watch by creating a C++ wrapper object for it on first use, and then starting or stopping its monitoring based on its readiness status",Handles D-Bus watch toggling events by either initializing a `DBusWatch` object with associated context and starting its monitoring or stopping the existing watch and releasing its resources if it's no longer ready to be watched.”,"Manages D-Bus watch toggling events, initializing a `DBusWatch` object and starting monitoring if the watch is ready, or stopping the watch and releasing resources if it's no longer ready.”",3.93076964669987,41.935483870967744,10.000000000000002,29.03225806451613,65.97546339035034
58,cpp,"Lazily initializes and returns a thread-safe, singleton `DBusObjectManager` instance using a double-checked locking pattern","Retrieves a shared pointer to a `DBusObjectManager`, lazily initializing it with a mutex lock to ensure thread-safe creation if it doesn't already exist, and associating it with the current `DBusConnection`.","Retrieves a shared pointer to a `DBusObjectManager`, lazily initializing it with thread-safe creation using a mutex if it doesn't already exist, and associating it with the current `DBusConnection`.",5.725068959849069,34.78260869565218,9.090909090909092,21.73913043478261,67.9109513759613
59,cpp,"Decrements a reference count for a given D-Bus service name, releasing it from the bus if the count reaches zero, and returns `true` on success or `false` if the name was not being tracked","Releases a D-Bus service name by either calling `dbus_bus_release_name` if the name count is one or decrementing the count if it's greater than one, returning `true` if the release was successful or the count was decremented.”","Releases a D-Bus service name by decrementing its reference count or calling `dbus_bus_release_name` to remove it from the bus, returning `true` if the release or decrement was successful.”",14.416980526649002,50.74626865671641,24.615384615384613,38.80597014925374,70.14141082763672
60,cpp,"Steals the reply from a `DBusPendingCall` handle and wraps it in a new `DBusMessage` object that takes ownership, returning an empty message if the input handle is null","Converts a `DBusPendingCall` (representing a pending D-Bus reply) into a `DBusMessage` object by stealing the underlying D-Bus message and returning it, handling null input and preventing reference count increment.”","Converts a `DBusPendingCall` into a `DBusMessage` by extracting the reply message, handling null input and ensuring no reference count increment on the extracted message.”",13.101450449483572,42.30769230769231,7.999999999999999,23.076923076923077,72.50287532806396
61,cpp,Thread-safely deallocates a collection of asynchronous D-Bus message reply handlers by moving them from a protected member list to a local copy before iterating through and deleting each one,"Deletes all asynchronous D-Bus message reply handlers stored in a protected vector by first safely transferring ownership of the vector from a mutex-protected storage to a local vector, then iterating through and deleting each handler.”",Deletes all asynchronous D-Bus message reply handlers stored in a protected vector by atomically moving the handlers to a local vector and then iterating to delete each one.”,19.863909464564692,56.66666666666666,31.03448275862069,46.666666666666664,77.81828045845032
62,cpp,Thread-safely notifies all registered signal handlers of a successful state by invoking their `onSpecificError` callback with a `SUCCESS` status for each associated signal tag,"Iterates through registered D-Bus signal handlers and their associated tags, notifying each handler of a successful call status for each tag after acquiring a lock to protect the handler map.","Iterates through registered D-Bus signal handlers and their associated tags, notifying each handler of a successful call status for each tag after acquiring a lock to protect the handler map.",9.31580969196188,46.42857142857142,18.51851851851852,35.71428571428571,65.79654812812805
63,cpp,"Thread-safely removes a connection, identified by its ID, from an internal collection if it exists","Releases a D-Bus connection associated with a given `ConnectionId_t` by removing it from an internal map of connections, protected by a recursive mutex.”","Removes a D-Bus connection from an internal map, identified by its `ConnectionId_t`, under the protection of a recursive mutex, effectively releasing the connection.”",11.481934989482795,43.90243902439025,25.641025641025646,29.268292682926827,69.57318782806396
64,cpp,"Handles an incoming D-Bus signal by dispatching it to the appropriate handler for either ""InterfacesAdded"" or ""InterfacesRemoved"" events based on the message's member name","Handles D-Bus signals, routing 'InterfacesAdded' signals to `onInterfacesAddedSignal` and 'InterfacesRemoved' signals to `onInterfacesRemovedSignal` of the associated `DBusInstanceAvailabilityStatusChangedEvent` object.”","Dispatches D-Bus signals received to the appropriate handler within the `DBusInstanceAvailabilityStatusChangedEvent` object, based on whether the signal name is 'InterfacesAdded' or 'InterfacesRemoved'.”",11.585468389579283,57.14285714285715,29.787234042553195,40.816326530612244,77.28762030601501
65,cpp,"Retrieves available service instances from a registry, translates the internal D-Bus representation into a vector of `DBusAddress` objects, and populates the provided output vector and status parameter","Retrieves a list of available D-Bus service instances from a registry, translates the internal representation to a vector of `DBusAddress` objects, and populates the provided `_availableServiceInstances` vector while setting the `_status` to `SUCCESS` if the operation completes without errors.”","Retrieves available D-Bus service instances from a registry, translates them into a vector of `DBusAddress` objects, and populates the provided `_availableServiceInstances` vector, setting the `_status` to `SUCCESS` upon completion.”",42.9294349316905,79.31034482758619,57.14285714285714,68.9655172413793,78.3494234085083
66,cpp,"Gets the availability status of a service instance by translating its identifier to a D-Bus address and querying a registry, setting the result and a success status in output parameters","Determines the availability status of a D-Bus service instance given its address, translating a common API address to a D-Bus address and checking its existence in the registry to set the availability status and call status accordingly.”","Retrieves the availability status of a D-Bus service instance by translating a common API address to a D-Bus address and querying the registry to determine if the instance is alive, setting the availability and call status accordingly.”",30.296887338419456,62.857142857142854,41.17647058823529,60.0,75.81761479377747
67,cpp,"Handles a D-Bus ""InterfacesRemoved"" signal by parsing the object path and interface names, and for any interface matching the one being observed, notifies listeners that its status has changed to ""NOT_AVAILABLE","Processes a D-Bus message indicating the removal of interfaces, extracts the object path and interface names, and if the observed interface is removed, updates the availability status to 'NOT_AVAILABLE' and notifies listeners.","Parses a D-Bus message signaling interface removal, checks if the removed interface matches the observed interface, and if so, updates its availability status to 'NOT_AVAILABLE' and notifies relevant listeners.",3.9361285291278407,53.125,12.903225806451616,37.50000000000001,75.48378109931946
68,cpp,Notifies listeners of an interface's availability change by translating its D-Bus path and name into a generic CommonAPI address,"Translates a D-Bus address (constructed from object path, interface name, and service) into a common address format and then notifies listeners about a change in availability status for that address.”","Translates a D-Bus address, formed from an object path, interface name, and service, into a common address format and notifies listeners of an availability status change for the corresponding object.”",5.973478099277328,57.692307692307686,20.0,26.923076923076923,77.07147598266602
69,cpp,"Thread-safely schedules a task on the main event loop to notify a newly added listener, passing along its specific subscription details","Adds a listener and subscription, then pushes a function call to the main loop to notify the specific listener via the D-Bus connection, ensuring thread-safe access to the listener list.”","Adds a listener and subscription, then schedules a function call to the main loop to notify the specific listener through the D-Bus connection, using a shared pointer to the proxy and thread-safe access to the listener list.”",5.60569929753793,39.344262295081975,13.559322033898304,29.508196721311474,69.6601927280426
70,cpp,Thread-safely removes all listeners from an internal collection that match the provided `Subscription` identifier,"Removes a listener from the `listeners_` collection, protected by a recursive mutex, based on the provided subscription ID, iterating and erasing entries until the subscription is found or the end of the collection is reached.”","Removes a listener from the `listeners_` collection, protected by a recursive mutex, based on the provided subscription, iterating and erasing entries until a match is found.”",3.0787460505623354,39.02439024390244,10.256410256410255,29.268292682926834,65.93928337097168
71,cpp,Delegates the registration of a signal state handler for a specific subscription to the underlying connection object,"Adds a given `DBusSignalHandler` to the connection's signal state management, associating it with a specific subscription ID.",Registers a `DBusSignalHandler` with the connection to handle signals associated with a given subscription ID.,3.3613183938332405,37.50000000000001,0.0,18.750000000000004,71.11221551895142
72,cpp,Handles the result of an asynchronous service instance query by translating the `DBusAddress` list to a string list on success and invoking a final callback with the call status and the translated list,"Handles the asynchronous callback for retrieving available service instances, translating D-Bus addresses to strings and passing the status and translated instances to the provided callback function.”","Processes the asynchronous callback for retrieving available service instances, translating D-Bus addresses to strings and invoking the provided callback with the call status and the translated list of instances.”",27.131152180296336,57.14285714285713,29.50819672131148,50.793650793650805,74.3434727191925
73,cpp,"Dispatches an incoming `DBusMessage` to a registered handler based on its object path and interface, or handles it as a standard introspection request, returning `true` if the message was processed","Handles an incoming `DBusMessage` by searching a registered table for a matching interface handler, invoking the handler's `onInterfaceDBusMessage` method if found, or processing it as an introspectable message if no specific handler is registered.”","Handles an incoming `DBusMessage` by searching a registered table for a matching interface handler, invoking the handler's `onInterfaceDBusMessage` method if found, or processing it as an introspectable message if no specific handler is registered, returning `true` if the message was handled and `false` otherwise.”",23.477037244978114,50.66666666666666,24.657534246575345,40.0,74.8159646987915
74,cpp,"Registers a D-Bus interface handler for a specific path, returning `false` if the exact handler is already registered, but allowing idempotent registration for standard `ObjectManager` and `Properties` interfaces","Adds a `DBusInterfaceHandler` to a table associated with a given path, checking for existing handlers and returning `true` if the handler already exists or if the path is a special case, otherwise attempting to insert the handler and returning the insertion result.”","Adds a `DBusInterfaceHandler` to a table indexed by path, preventing duplicates unless the path is for `org.freedesktop.DBus.ObjectManager` or `org.freedesktop.DBus.Properties` and returning `true` on success or `false` if a duplicate is found and not an exception case.”",7.019046559844957,33.80281690140845,2.898550724637681,22.535211267605636,61.708515882492065
75,cpp,"Registers a given `DBusInterfaceHandler` to a specific path in a table, returning `true` on success and `false` if the handler is already registered for that path","Adds a `DBusInterfaceHandler` to a table of registered objects, keyed by `DBusInterfaceHandlerPath`, ensuring that duplicate handlers for the same path are not added and returning `true` on success or `false` if a duplicate is detected”","Adds a `DBusInterfaceHandler` to a table of registered objects, keyed by `DBusInterfaceHandlerPath`, appending the handler to an existing list if the path already exists and returning `true` on success or `false` if a duplicate handler is detected”",26.914824520414005,60.317460317460316,32.786885245901644,41.26984126984127,74.09002184867859
78,c,"Constructs and sends a 2-byte UDS positive response to an ECU Reset request, containing the positive response SID and the echoed reset type, over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","Constructs and sends a 2-byte UDS positive response for an ECU Reset request—containing the reset type—over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails.","Constructs and sends a 2-byte UDS positive response for an ECU Reset service request—containing the reset type—over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails.",49.62181479071228,85.33333333333333,73.97260273972601,85.33333333333333,90.14889597892761
79,c,"Processes a UDS ECU Reset request, validating the 2-byte message length, sending a positive response before triggering a system reboot for a 'hard reset', and sending a negative response for either an incorrect length or an unsupported reset sub-function","Handles an ECU reset request received over UDS, validating the message length, determining the reset type (hard or unsupported), sending an appropriate positive or negative response, and initiating a cold reboot if a hard reset is requested.”","Handles an ECU reset request received over UDS, validating the message length and reset type, sending a corresponding positive or negative response, and initiating a cold reboot if a hard reset is requested.”",8.245526671627356,59.45945945945946,22.222222222222225,43.24324324324324,73.02104234695435
80,c,"Constructs and sends a 4-byte UDS positive response for a ""Request Download"" service, specifying a maximum block length of 0x00D2, over a CAN bus using the ISO-TP protocol and logging an error on failure","Constructs and sends a 4-byte UDS positive response for a Request Download request—containing the Request Download SID (0x40 + UDS_SID_REQUEST_DOWNLOAD), a positive response code (0x20), and a block size (258 bytes)—over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails.”","Constructs and sends a 4-byte UDS positive response for a Request Download request—containing the Request Download SID (0x40 + UDS_SID_REQUEST_DOWNLOAD), a positive response code (0x20), and a block size (258 bytes)—over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails.”",24.544133650973997,62.068965517241395,47.05882352941176,59.77011494252873,75.43341517448425
81,c,"Constructs and sends a 2-byte UDS positive response for a Transfer Data request (containing the positive SID and the block sequence counter) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","Constructs and sends a 2-byte UDS positive response for a Transfer Data request—containing the block sequence counter—over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails.","Constructs and sends a 2-byte UDS positive response for a Transfer Data request, including the block sequence counter, over a CAN bus using the ISO-TP protocol, and logs an error if transmission fails.",62.73851305045478,89.1891891891892,77.77777777777779,86.48648648648648,93.59632730484009
82,c,"Constructs and sends a 5-byte UDS positive response for the Routine Control service (containing the routine control type, routine ID, and a result code) over a CAN bus via ISO-TP, logging an error if the transmission fails","Constructs and sends a 5-byte UDS positive response for a Routine Control request—containing the routine ID and a result code—over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails.","Constructs and sends a 5-byte UDS positive response for a Routine Control request—containing the routine ID and a result code—over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails.",49.98064345274311,90.9090909090909,77.33333333333334,88.31168831168831,92.27253198623657
83,c,"Constructs and sends a 1-byte UDS positive response for a Transfer Exit request (containing the request SID + 0x40) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","Constructs and sends a 1-byte UDS positive response for a Request Transfer Exit service over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails.","Sends a 1-byte UDS positive response for the Request Transfer Exit diagnostic service over a CAN bus via ISO-TP, logging an error on transmission failure.",30.87673278860986,70.96774193548386,50.0,64.51612903225806,83.62230658531189
85,c,"Searches a predefined `id_mapping` array for a given CAN ID and returns its corresponding index, or `0xff` if the ID is not found","Translates a 32-bit CAN identifier to an index within the `id_mapping` array, returning the index if found or `0xff` if the identifier is not present in the mapping.”","Looks up a 32-bit CAN identifier within the `id_mapping` array and returns its corresponding index, defaulting to `0xff` if the identifier is not found.”",40.4949394786753,64.0,45.83333333333333,60.0,84.17553305625916
86,c,"Disables a specific LIN-to-CAN receive filter by clearing its callback pointer, or disables all filters if a special ID is passed, while ignoring out-of-bounds IDs","Removes a CAN receive filter by clearing the callback function associated with a specific filter ID within the `lin2can_data` structure, or clears all callbacks if the filter ID matches `TRANSLATABLE_ADDRESSES_LEN`, effectively disabling message reception for that filter.","Removes a CAN receive filter by setting the callback function for a specified filter ID to null within the `lin2can_data` structure, disabling message reception for that filter, or clears all callbacks if the filter ID matches `TRANSLATABLE_ADDRESSES_LEN`.",4.248071632433068,34.78260869565217,8.955223880597014,28.985507246376812,63.4870707988739
87,c,"A LIN driver callback that retrieves a pending outgoing frame from a message queue, copies its data for transmission, invokes a frame-specific completion callback, and returns a boolean indicating if a frame was successfully prepared","Retrieves a LIN frame from a message queue, copies its contents into a provided `lin_frame` structure, and then invokes a user-defined callback function to transmit the frame over CAN, logging debug information and handling potential queue retrieval failures.","Retrieves a LIN frame from a message queue, copies its contents into a provided `lin_frame` structure, and then invokes a user-defined callback function to transmit the frame over CAN, handling potential queue retrieval failures and logging debug information.",18.768786664684082,44.73684210526316,24.324324324324323,36.84210526315789,70.73208689689636
88,c,"Acts as a LIN-to-CAN gateway callback, translating an incoming LIN frame by using its first data byte's top two bits as an index to find a target CAN ID, constructing a new CAN frame with the translated ID and a payload where those index bits are masked out, and finally invoking a registered handler with the resulting CAN frame","Handles incoming LIN frames by mapping the LIN identifier to a CAN identifier, translating the LIN data into a CAN frame, and then invoking a registered callback function with the translated CAN frame and associated user data.”","Translates incoming LIN frames into CAN frames by mapping the LIN identifier to a CAN identifier, copying the relevant data, and invoking a registered callback function with the translated CAN frame and associated user data.”",5.210983359645114,43.298969072164944,12.63157894736842,30.92783505154639,70.13829350471497
89,c,"Initializes a high-voltage shield by configuring its Output Enable (OE) GPIO, writing a zeroed state to its hardware registers, and then setting the OE pin to enable the device's outputs, logging errors at each step","Initializes the HV shield device by configuring the output enable GPIO pin, zeroing out the register data structure, updating the shield's registers, and enabling the output, returning an error code if any step fails.”","Initializes the HV shield device by configuring and enabling the output enable GPIO pin, zeroing the register data structure, updating the shield's registers, and returning an error code if any step fails.”",5.660043472889528,42.857142857142854,8.823529411764707,31.428571428571427,71.60214185714722
90,c,"Sets the gain for a specified DAC (0 or 1) on a high-voltage shield by updating its value in a cached data structure and then calling an update function to write the new configuration to the hardware, returning an error for an invalid DAC index","Sets the gain value for a specified DAC channel (0 or 1) within the HV shield device by updating a register and then invoking a device update function, returning an error if the DAC channel is invalid.”","Sets the gain value for a specified DAC channel (0 or 1) within the HV shield device by updating a corresponding register and then triggering a device update, returning an error if the DAC channel is invalid.”",22.860593317438692,62.65060240963856,27.160493827160494,50.6024096385542,79.2735755443573
91,c,"Enables or disables a specific GPIO output on a high-voltage shield by validating the pin index (0-31), remapping it via a nibble-swap, modifying a cached register bit, and then calling a helper function to write the update to the hardware","Configures the output enable state of a specific GPIO pin (index 0-31) on an HV shield device by manipulating a bitfield within a register, performing an index adjustment based on the pin's position, and then updating the device's hardware, returning -EINVAL for invalid index values.”","Configures the output enable state of a specific GPIO pin (index 0-31) on an HV shield device by setting or clearing a corresponding bit in a register, adjusting the index based on its position within an 8-pin group, and then updating the device's hardware, returning -EINVAL for invalid index values.”",8.894852341966315,45.833333333333336,12.765957446808512,29.166666666666664,73.20128083229065
92,c,"A callback function that forwards a received CAN frame from a source device to a destination device (passed via `user_data`) using a non-blocking send operation, logging a debug message on successful queuing or a warning on failure","Routes incoming CAN frames received on a specified device to another device using the `can_send` function, logging a warning if transmission fails and a debug message upon successful routing.","Routes incoming CAN frames from one device to another using the `can_send` function, logging a warning if transmission fails and a debug message indicating the source and destination devices.",7.5465381003640415,43.47826086956522,14.92537313432836,28.985507246376812,74.96151328086853
93,c,"Configures a CAN message router by iterating through an array of routing entries, adding a receive filter to a source CAN interface for each entry that uses a callback to forward matching frames to a destination interface, and returns an error if any filter registration fails","Registers a specified number of CAN router entries by adding RX filters for each entry, associating a callback function with the incoming frames and a destination address, returning an error code if any filter addition fails.”","Registers a specified number of CAN router entries by adding RX filters, associating a callback function and destination address with each incoming frame, and returning an error code if any filter addition fails.”",5.5669219041387,45.56962025316456,10.38961038961039,37.9746835443038,76.23382806777954
94,c,"Initializes the CAN router by iterating through all statically-defined routing tables found in a dedicated linker section and registering their entries, returning an error if any registration fails","Initializes the CAN router by iterating through a table of CAN router configurations and registering each entry using `can_router_register`, returning an error code if registration fails.”","Initializes the CAN router by iterating through a table of CAN router configurations and registering each entry using `can_router_register`, returning an error if any registration fails.”",37.536710763485736,59.64912280701754,47.27272727272727,59.64912280701754,79.18538451194763
95,c,"Iterates through a pre-configured list of low-voltage GPIOs, setting the state of each pin enabled by an input mask to the corresponding bit in a value word, logging and returning an error if any underlying GPIO operation fails","Iterates through a configured set of GPIO pins, setting the state of those specified by a bitmask to a given value, and returning an error code if any individual GPIO setting operation fails.”","Iterates through a configured set of GPIO pins, setting the state of the pins specified by a bitmask to a given value, logging an error and returning a negative error code if any individual GPIO setting operation fails.”",16.916722834543876,61.53846153846154,23.684210526315788,56.41025641025641,80.08898496627808
96,c,"Populates an output parameter with the number of available Abstract LIN callback slots, calculated by subtracting the used count from a configured maximum, returning an error if the parameter is a null pointer","Retrieves the number of available callback slots within an abstract LIN communication system, storing the count in the provided `free_slots` variable and returning an error if the input pointer is null.”","Determines and returns the number of free callback slots in an abstract LIN communication system, storing the result in the provided `free_slots` variable and returning `-EINVAL` if the input pointer is null.”",5.927305348705564,45.45454545454545,15.625,33.33333333333333,70.74430584907532
97,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","Registers an incoming callback function for a specific LIN frame ID and size within a device's abstract LIN data structure, performing input validation and allocating a callback slot, returning 0 on success or an error code for invalid input or allocation failure.”","Registers an incoming callback function for a specific LIN frame ID and size within a device's abstract LIN data structure, validating input, allocating a callback slot, and storing the callback and user data, returning 0 on success or an error code for invalid input or allocation failure.”",32.20325318578889,70.32967032967034,35.955056179775276,57.14285714285714,77.0058274269104
98,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","Registers an outgoing callback function for a specific LIN frame ID and size within a device's abstract LIN data structure, performing input validation and allocating a callback slot, returning 0 on success or an error code for invalid input or allocation failure.”","Registers an outgoing callback function for a specific LIN frame ID and size within a device's abstract LIN data structure, validating input parameters, allocating a callback slot, and storing the callback and user data, returning 0 on success or an error code for invalid input or allocation failure.”",31.819334303490084,71.7391304347826,35.55555555555556,56.52173913043479,77.14006900787354
99,c,"Sets the active LIN schedule table by index, first validating the index and then using a semaphore to thread-safely update the scheduler's state and reset its entry pointer to the start of the new table","Sets the active table index within a LIN scheduler, ensuring exclusive access via a semaphore, resetting the entry index to zero, and returning an error if the table index is out of bounds.”","Sets the active table index within a LIN scheduler, acquiring a semaphore for exclusive access, resetting the entry index to zero, and returning an error if the table index is out of bounds.”",6.159508780559903,48.57142857142858,8.823529411764707,34.285714285714285,71.20392918586731
100,c,"Disables a LIN scheduler by first checking if it's already stopped, then taking a semaphore to safely wait for the current operation to complete before setting the active schedule table index to -1","Disables a LIN scheduler by setting its current table index to -1 and acquiring the scheduler's active semaphore, ensuring exclusive access and preventing further scheduling operations.","Disables a LIN scheduler by setting its current table index to -1 and acquiring the scheduler's active semaphore, preventing further scheduling operations and ensuring exclusive access.",19.204289676882283,49.180327868852466,23.728813559322038,32.786885245901644,72.04645872116089
