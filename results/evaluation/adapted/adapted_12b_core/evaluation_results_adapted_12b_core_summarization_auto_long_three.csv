id,language,reference,generated,generated_rci,bleu_score,rouge1,rouge2,rougeL,bertscore_f1
2,python,"Raises an exception if the specified 'datatype' is unsupported, otherwise retrieves that type's validation function and returns the boolean result of calling it with the provided 'value'","Validates that the provided 'datatype' is supported, then returns true if the 'value' is an instance of the specified 'datatype'”","Validates that the provided 'datatype' is supported, then returns true if the 'value' is an instance of the specified 'datatype' or a subtype thereof”",5.986746012243267,54.16666666666667,21.73913043478261,29.166666666666668,69.7569191455841
3,python,"Validates that a given value, or each value in a list, is an integer that fits within the numerical range defined by a specified bit-width and signedness",Checks if a given value or list of values are all within the range of a signed or unsigned integer with a specified number of bits.,Checks if a given value or list of values are all within the range of a signed or unsigned integer with a specified number of bits.,8.06790467390425,44.44444444444445,19.23076923076923,37.03703703703704,79.65022921562195
4,python,"Returns the type definition tuple from a class-level list of types that matches the provided 'datatype' name, or returns None if no match is found","Retrieves a tuple containing the type name, constructor, and list of subtypes for a given datatype from a predefined list of types, or returns None if the datatype is not found.”","Retrieves a tuple containing the type name, constructor, and subtypes for a given datatype from a predefined list of types, or returns None if the datatype is not found.”",17.15356940022251,59.64912280701755,25.454545454545453,45.614035087719294,72.94779419898987
5,python,Returns a dictionary mapping the short name to the full FQN for all dynamic datatypes that exist in the same namespace as the provided FQN,"Identifies and returns a dictionary of namespaced datatypes that match a given fully qualified name (FQN) prefix, excluding the FQN itself.”","Identifies and returns a dictionary of namespaced datatypes whose names match a given fully qualified name (FQN) prefix, excluding the FQN itself.”",4.858971931642977,39.130434782608695,13.636363636363635,30.434782608695656,67.99386739730835
7,python,"Parses a type string to create an `ApiGearType` object, mapping common primitive types to their ApiGear equivalents, sanitizing custom type names by replacing dots with underscores, and setting an array flag based on a ""[]"" suffix","Converts a string representation of a data type (e.g., 'int32', 'string', 'double[]') into an ApiGearType object, handling basic types, floating-point types, booleans, strings, and arrays.”","Converts a string representation of a data type (e.g., 'int32', 'string', 'double[]') into an ApiGearType object, handling basic types, floating-point types, booleans, strings, and array types.”",3.5649180901478434,29.03225806451613,6.666666666666667,25.806451612903224,63.091254234313965
8,python,"Creates an `ApiGearProperty` by converting the VSS node's datatype to a supported ApiGear type and copying its description, returning `None` and logging a warning if the datatype is not supported","Generates an `ApiGearProperty` object from a VSS node's data and a specified datatype, setting the property's type and description if available.”","Generates an `ApiGearProperty` object from a VSS node's data and a specified datatype, setting the property's type and description if available, or returning `None` if the datatype is not supported.”",10.279788556185165,51.85185185185185,15.384615384615383,37.03703703703704,68.07476282119751
10,python,"Loads and parses multiple VSpec files from specified paths, using a list of include directories, then merges them into a single composite VSpec object and returns it, raising an exception if no files are successfully loaded","Loads and merges a list of VSpec objects, recursively parsing each specification file and its includes, then combining them into a single VSpec object while logging the process and raising an exception if no specifications are loaded.”","Loads and merges a list of VSpec objects, recursively parsing each specification file and its includes, combining them into a single VSpec object, and logging the process while raising an exception if no specifications are loaded.”",21.490337463840206,60.273972602739725,30.98591549295775,54.794520547945204,78.40387225151062
11,python,"Recursively updates a 'base' dictionary with an 'update' dictionary, merging nested dictionaries for common keys and overwriting or adding all other key-value pairs","Recursively merges the contents of the 'update' dictionary into the 'base' dictionary, overwriting existing keys with the update values and merging nested dictionaries.”","Recursively merges the contents of the 'update' dictionary into the 'base' dictionary, overwriting existing non-dictionary values with the update values and merging nested dictionaries.",9.755684161213917,51.06382978723404,17.777777777777775,34.04255319148936,71.09952569007874
12,python,"Asserts that the input value, if not None, is a valid 'constUID' formatted as an 8-digit hexadecimal string prefixed with '0x', returning the value if the check passes","Validates that a given string 'v' matches the pattern of a hexadecimal constant UID (e.g., '0x12345678') and returns the string if valid, otherwise raises an assertion error.”","Validates that a given string 'v' matches the pattern of a hexadecimal constant UID (e.g., '0x12345678') and returns the string if valid, otherwise raises an assertion error.”",1.8672923900170302,31.578947368421055,0.0,21.052631578947366,68.25518012046814
13,python,"Initializes a VSSRaw model and attempts to resolve it, returning the successfully resolved model or the original unresolved model if resolution fails due to a validation or model error","Creates a VSSRaw object from a dictionary, attempts to resolve it, and returns the object (either resolved or incomplete) after logging any validation or model errors”","Creates a VSSRaw object from a dictionary, attempts to resolve it, and returns the object (either resolved or incomplete) after logging any validation or model errors”",18.90425467840326,50.90909090909091,22.64150943396226,43.63636363636363,78.26345562934875
14,python,"Asserts that each string in the input list is a valid datatype by checking against a master list, returning the original list if all values are valid",Validates that all provided values are valid datatypes by checking them against a predefined list of allowed datatypes and raising an assertion error if any are invalid”,"Validates that all provided values are valid datatypes by checking them against a predefined list of allowed datatypes, raising an assertion error if any are invalid”",8.1921632614939,40.74074074074074,15.384615384615385,33.33333333333333,71.55529856681824
15,python,"Traverses a VSSNode tree to generate a formatted string, displaying each node's name followed by the values of any specified attributes found on it","Recursively traverses a VSS node tree, extracting specified attributes from each node and formatting them into a string representation suitable for rendering as a tree structure”","Recursively traverses a VSS node tree, extracting specified attributes from each node and formatting them into a string representation suitable for rendering as a tree structure”",3.9253456897493937,35.294117647058826,12.244897959183673,19.607843137254903,74.77815747261047
16,python,"Recursively traverses up the parent hierarchy to find and return the first non-instance ancestor node and the traversal depth, raising an exception if the starting node is not a branch or if no root is found","Recursively traverses up the VSS node tree until an instance root is found, returning the root node and the depth of the root relative to the starting node”","Recursively traverses up the VSS node tree, starting from a given node, until an instance root is found, returning the root node and the depth of the root relative to the starting node”",13.530908623681713,55.38461538461539,28.571428571428577,36.92307692307692,71.51457667350769
17,python,Recursively calculates the depth of the first-found branch of children where each node is a `VSSDataBranch` with its `is_instance` flag set,"Recursively counts the depth of instance children within a VSSDataBranch, returning 0 if no instance children are found.”","Recursively counts the depth of instance children within a VSSDataBranch, returning 0 if no instance children are found or if the current node is not an instance.”",6.491865447919415,43.90243902439025,15.384615384615383,39.02439024390244,68.24308037757874
18,python,Returns a list of node IDs from an input list whose expected parent's name matches the provided `name`,Filters a list of node IDs to return only those whose expected parent is the specified name”,Filters a list of node IDs to return only those whose expected parent is the specified name.”,21.341038930353758,55.55555555555555,35.294117647058826,55.55555555555555,74.27316904067993
19,python,"Retrieves an attribute from an object, returning a specified default value if the attribute is missing or its value is `None`","Safely retrieves an attribute from an object, returning a default value if the attribute is not found or is None”","Safely retrieves an attribute from an object, returning a default value if the attribute is not found”",49.572050787468605,82.92682926829269,66.66666666666667,82.92682926829269,85.24665236473083
20,python,Generates a `proto3` file from a VSS tree by first writing import statements for complex data types and then converting each branch in the tree into a corresponding protobuf message,"Recursively traverses a VSS node tree, generating a protobuf definition for each VSSDataBranch node by writing a message block containing the fields defined by its children, and including necessary import statements for referenced datatypes.”","Recursively traverses a VSS node tree, generating a protobuf definition for each VSSDataBranch node by writing a message block containing the fields defined by its children, and including necessary import statements for referenced datatypes.”",5.96975713224886,46.875,9.67741935483871,25.0,69.4311261177063
21,python,"Traverses a VSS tree to find all terminal instance branches, grouping their relative names into a dictionary where each key is the fully qualified name of the original branch they instantiate","Recursively traverses a VSS node tree to identify and collect the fully qualified names of all instance nodes, grouping them by their root instance node”","Recursively traverses a VSS node tree to identify and collect the fully qualified names of all instance nodes, grouping them by their root instance node and excluding any instance nodes that have child instance nodes.”",7.890092577398426,50.0,18.51851851851852,32.14285714285714,73.34632873535156
22,python,Checks if a given VSSNode is a leaf by verifying its 'data' attribute is an instance of VSSDataDatatype,Determines if a given VSS node is a leaf node by checking if its data attribute is an instance of the VSSDataDatatype class”,Determines if a given VSS node is a leaf node by checking if its 'data' attribute is an instance of the VSSDataDatatype class.”,26.94353370737825,73.17073170731709,51.28205128205129,73.17073170731709,85.79518795013428
23,python,Returns `True` if the given `VSSNode`'s data is a `VSSDataBranch` and its `is_instance` attribute is `False`,"Checks if a VSS node represents a branch and if it is not an instance of a branch, returning True if both conditions are met, otherwise False”","Checks if a VSS node represents a branch and if it is not an instance, returning True if both conditions are met, otherwise False”",2.01381482546679,31.11111111111111,4.651162790697675,26.666666666666668,58.717280626297
24,python,Returns True if the node's data is a VSSDataBranch and its 'is_instance' attribute is True,Checks if a VSSNode represents an instance of a VSSDataBranch by verifying that its 'data' attribute is a VSSDataBranch and that the 'is_instance' attribute of the VSSDataBranch is true”,Checks if a VSSNode represents an instance of a VSSDataBranch by verifying that its 'data' attribute is a VSSDataBranch and that the 'is_instance' attribute of the VSSDataBranch is true.,17.27160009442635,55.319148936170215,31.11111111111111,46.808510638297875,69.452965259552
25,python,"Calculates a 32-bit FNV-1 hash for a given byte string by iterating through each byte, multiplying the current hash by the FNV prime, and then performing a bitwise XOR with the byte",Calculates a 32-bit FNV-1a hash value for a given byte string using a specified prime number and bitwise operations”,Calculates a 32-bit FNV-1a hash value for a given byte string using a specified prime number and bitwise operations”,18.4212428775086,54.545454545454554,30.188679245283023,50.90909090909091,74.44130182266235
28,java,"Inflates the `card_fragment` layout, finds and assigns the card's title and icon views, and returns the resulting root view","Inflates a layout (`card_fragment`) into a `View`, finds the `card_name` and `card_icon` views within it, and returns the inflated `View`.","Inflates a layout (`card_fragment`) into a `View`, finds the `card_name` and `card_icon` views within it, and returns the inflated `View`.",19.715266645700087,63.63636363636365,23.809523809523807,59.09090909090909,76.95773839950562
29,java,"Updates an `ImageButton`'s icon and click listener from a content object and makes it visible, or hides the button if the content is null","Updates the visibility and content of an `ImageButton` based on the provided `DescriptiveTextWithControlsView.Control`, setting its icon and click listener if the control is not null, otherwise hiding the button.”","Updates the visibility and content of an `ImageButton` based on the provided `DescriptiveTextWithControlsView.Control`, setting its icon and click listener if the control is not null, otherwise hiding the button.”",15.54264804148821,54.54545454545454,22.641509433962266,40.0,73.00386428833008
30,java,"Lazily inflates a `ViewStub` to create a descriptive text layout, caches references to its child views (title, subtitle, image), and returns the inflated layout","Lazily initializes and returns a `View` representing a descriptive text-only layout, inflating it from a `ViewStub` and retrieving references to its title, subtitle, optional image, and tap-for-more text views.”","Lazily initializes and returns a `View` representing a descriptive text-only layout, inflating it from a `ViewStub` and retrieving references to its title, subtitle, optional image, and tap-for-more text views.”",19.12330160465971,57.14285714285715,29.629629629629626,46.42857142857142,75.30038356781006
31,java,Updates the header view on the main UI thread by making its root view visible and setting the card's title and icon from the provided `CardHeader` object,"Updates the header view of a card by setting its visibility, title, and icon within the main thread using `requireActivity().runOnUiThread()`”","Updates the header view of a card by setting its visibility, title, and icon within the main thread using `requireActivity().runOnUiThread()`”",11.871704290088221,57.14285714285715,25.531914893617024,40.816326530612244,72.26923704147339
32,java,"Lazily inflates a `ViewStub` to create and return the text block layout view, while also finding and caching references to its child text views on the first call","Lazily initializes and returns a `View` from a `ViewStub` within the root view, retrieving the `TextBlock` and `TapForMoreText` views from the inflated layout”","Lazily initializes and returns a `View` from a `ViewStub` within the root view, retrieving the `TextBlock` and `TapForMoreText` views from the inflated layout”",10.269754859886746,39.21568627450981,4.081632653061225,31.372549019607842,71.69420719146729
33,java,"Queries the `PackageManager` for a `MediaBrowserService` within a given package and returns a `ComponentName` for the first one found, or `null` if none exist","Queries the package manager for a `MediaBrowserService` within a given package, returning its `ComponentName` if found, otherwise returning null.”","Queries the package manager for a `MediaBrowserService` within a given package, returning its `ComponentName` if found, or null if no such service exists.”",32.35804675535806,60.46511627906976,34.146341463414636,55.81395348837209,85.14068722724915
34,java,"Determines if a component should be added to a launchable list, returning `false` if its package is explicitly hidden or if it's a custom media component and launchable apps are also being shown, otherwise returning `true` for valid launchable or media service types","Determines whether a given component should be added to the launchables list based on a blacklist of package names, custom media component exclusions, and the component's application type.”","Determines whether a given component should be added to the launchables list based on a blacklist of package names, custom media component exclusions, and the component's application type, logging an error for invalid application types.”",10.153449901810308,41.0958904109589,16.901408450704224,35.61643835616439,67.59925484657288
35,java,"Sets the car's media source to a given component in browse mode and finishes the context if it's an Activity, catching and logging a `CarNotConnectedException` if the car service is unavailable","Sets the media source of a `CarMediaManager` to browse mode and finishes the given `Activity` if it is one, handling `CarNotConnectedException` if the connection fails.”","Sets the media source of a `CarMediaManager` to browse mode and finishes the given `Activity` if it is one, logging an error if the connection fails.”",26.56621439255862,65.51724137931035,32.142857142857146,51.724137931034484,78.50558757781982
36,java,"Safely checks if a given activity is distraction optimized using the `CarPackageManager`, returning `false` and logging an error if the manager is null or a `CarNotConnectedException` is caught","Checks if a given activity within a specified package is distraction optimized using the `CarPackageManager`, handling potential `CarNotConnectedException` errors.”","Checks if a given activity within a specified package is distraction optimized using the `CarPackageManager`, returning `false` if the car is not connected and logging an error.”",32.23493245716447,55.319148936170215,40.0,51.06382978723404,78.41262221336365
38,java,"Retrieves a specific, resolvable map `Intent` from a configured list if it matches the system's default map app, otherwise falls back to a generic `Intent` for any map application","Constructs an `Intent` to launch a maps application, prioritizing those specified in `config_homeCardPreferredMapActivities` while falling back to the system default if none are found or valid.”","Constructs an `Intent` to launch a maps application, prioritizing those specified in `config_homeCardPreferredMapActivities` and returning the first valid one, falling back to the system default if none are found or valid.”",6.276332353857551,31.57894736842105,7.272727272727273,17.543859649122805,62.7765417098999
39,java,"Lazily initializes a set of `HomeCardModule`s by reflectively instantiating class names from a configuration array, and then uses a `FragmentTransaction` to add each module's card view to the UI layout","Lazily initializes a set of `HomeCardModule` instances by reflecting on class names from a resource array, creating each module with a `ViewModelProvider`, and then adding them to the fragment manager to be displayed in their respective card views.”","Lazily initializes a set of `HomeCardModule` instances by reflecting on class names from a resource array, creating each module with a `ViewModelProvider`, and then adding them to the fragment manager to be displayed in their respective card views.”",26.815344916029996,60.0,32.35294117647059,45.714285714285715,82.43831396102905
40,java,"Iterates through a list of appeared tasks and uses the `ActivityTaskManager` to remove any task that is in multi-window mode, logging it as a dangling task","Iterates through a list of `TaskAppearedInfo` objects, removes any tasks with a multi-window windowing mode from the `ActivityTaskManager` to clean up dangling tasks.”",Iterates through a list of `TaskAppearedInfo` objects and removes any tasks with a multi-window windowing mode from the `ActivityTaskManager` to clean up dangling tasks.”,26.541610738864318,58.82352941176471,28.571428571428577,39.21568627450981,79.63056564331055
41,java,Parses the mode from the current Intent and sets the title for both the Activity and the CarUi toolbar using the string resource ID defined in that mode,"Parses the application mode from the intent, sets the title of the activity and toolbar to the corresponding title string ID.”",Parses the application mode from the intent and sets the activity and toolbar titles accordingly.”,10.89549167082072,65.3061224489796,29.787234042553195,65.3061224489796,77.94573903083801
42,java,"Lazily initializes and returns a `Chronometer` by finding it in the layout, while also finding and caching its associated separator view on the first call","Lazily initializes and returns a `Chronometer` and its associated separator view from the layout, if they haven't been created yet.”","Lazily initializes and returns a `Chronometer` and its associated separator view from the layout, if they haven't been created yet.”",38.12702924121491,56.52173913043478,40.909090909090914,52.17391304347826,76.5332043170929
43,java,"Lazily inflates a media layout from a `ViewStub`, finds and caches its title and subtitle views, initializes its media playback controls bar via a presenter, and returns the inflated view","Lazily initializes and returns a `View` representing the media layout, inflating it from a `ViewStub`, retrieving its title and subtitle views, and initializing the media control bar with the presenter.”","Lazily initializes and returns a `View` representing the media layout, inflating it from a `ViewStub`, retrieving its title and subtitle views, and initializing the media control bar via the presenter.”",29.815564924567646,70.0,27.586206896551722,50.0,78.39129567146301
44,java,"If a valid `Drawable` and card size are provided, this method scales the image to a square based on the card's largest dimension, blurs it, and sets the resulting bitmap as the animated, visible card background","Updates the card's background image by scaling, blurring, and setting it to the card's background view if a non-null image and card size are available.”","Updates the card's background image by scaling, blurring, and setting it to the card's background view if a non-null image and card size are available, using a blurred background for visual appeal.”",8.135154328314307,49.23076923076923,19.04761904761905,24.615384615384617,68.3955192565918
45,java,Makes the media layout view visible and updates its title and subtitle with the provided text,Sets the visibility of the media layout view to visible and updates the text of the title and subtitle TextViews with the provided CharSequence values.”,Sets the visibility of the media layout view to visible and updates the text of the title and subtitle TextViews with the provided CharSequence values.”,19.665864691817674,68.29268292682927,46.15384615384615,63.41463414634146,78.92792224884033
46,java,"If the content's start time is positive, this method makes a chronometer and a separator visible, sets the chronometer's base time, and starts it; otherwise, it hides both views","Updates the visibility and state of a chronometer and separator based on the start time of a descriptive text view, displaying them if the start time is positive and hiding them otherwise.”","Updates the visibility and state of a chronometer and separator based on the start time of a descriptive text view, displaying them if the start time is positive and hiding them otherwise.”",11.567590598717914,47.61904761904761,19.672131147540984,28.571428571428577,69.74980235099792
47,java,Registers a member callback to the provided `Call` object after verifying it is not null,Registers a callback to a given `Call` object to receive notifications about its state changes.”,Registers a callback to a given `Call` object to receive notifications about its state changes.”,17.12473044894657,40.00000000000001,21.428571428571427,40.00000000000001,72.74185419082642
48,java,"Handles the removal of a call by clearing the current call and card content, notifying the presenter of the model update, and unregistering its callback from the call object for cleanup","Removes the current call, clears associated data, notifies the presenter of the update, and unregisters the callback for the removed call.”","Removes the current call, clears associated data, notifies the presenter of the update, and unregisters the callback for the removed call.”",14.360876833280878,53.84615384615385,24.0,46.15384615384615,77.55424380302429
49,java,"Formats a phone number to create a new `DescriptiveTextWithControlsView` with call details and controls, then notifies the presenter that the model has been updated","Formats a phone number, creates a `DescriptiveTextWithControlsView` using the formatted number and other UI elements, and then notifies the presenter of the model update.”","Formats a phone number, creates a `DescriptiveTextWithControlsView` using the formatted number and other UI elements, and then notifies the presenter of the model update.”",21.631187459215713,54.166666666666664,30.434782608695656,54.166666666666664,84.07424688339233
50,java,"Initializes mute, end call, and dialpad buttons by assigning each an icon and a click listener to toggle mute status, disconnect the current call, and delegate to an onClick handler, respectively","Initializes three `DescriptiveTextWithControlsView.Control` objects representing mute, end call, and dialpad buttons, each configured with an icon and a corresponding action to be performed when clicked.”","Initializes three `DescriptiveTextWithControlsView.Control` objects representing mute, end call, and dialpad buttons, each configured with an icon and a corresponding action to be performed when clicked, using the `InCallService` and `CurrentCall` objects.”",27.174867705970787,45.614035087719294,29.09090909090909,45.614035087719294,66.8175995349884
53,cpp,"When a new listener is added, this callback immediately notifies it with an `AVAILABLE` status if the D-Bus connection is already active",Notifies a listener with an `AvailabilityStatus::AVAILABLE` event if the D-Bus connection is currently connected.”,"Notifies a listener with an `AvailabilityStatus::AVAILABLE` event if the D-Bus connection is currently connected, ignoring the provided subscription.”",21.617263218447196,61.53846153846153,32.43243243243243,56.41025641025642,73.50570559501648
54,cpp,"Atomically registers a given thread to be joined later by adding it to a list, but only if its associated connection is active and the thread is not already present in the list","Registers a thread to be joined upon exit for a given D-Bus connection, ensuring the thread is added to a vector of threads to be joined if it's not already associated with the connection”","Registers a thread to be joined upon exit for a given D-Bus connection, adding it to a vector of threads to be joined if it's not already associated with the connection”",13.61658548186748,55.072463768115945,26.865671641791046,40.57971014492753,69.51655149459839
56,cpp,A callback function that handles the removal of a D-Bus watch by stopping its monitoring and disassociating the high-level wrapper object from the underlying `libdbus` watch,"Removes a D-Bus watch by stopping its associated `DBusWatch` object if it's ready and clearing the watch's data, handling potential null pointers for both the watch and the associated `WatchContext`”","Removes a D-Bus watch by stopping its associated `DBusWatch` object if it's ready and clearing the watch's data, handling potential null pointers for both the watch and the associated `WatchContext`”",15.612734376432705,42.62295081967213,20.338983050847457,36.065573770491795,69.07385587692261
57,cpp,"Handles the toggling of a D-Bus watch by creating a C++ wrapper object for it on first use, and then starting or stopping its monitoring based on its readiness status",Handles D-Bus watch events by either initializing a `DBusWatch` object and starting its monitoring or stopping the watch and removing the associated `DBusWatch` object if the watch is no longer ready to be monitored”,"Handles D-Bus watch events by either initializing a `DBusWatch` object and starting its monitoring or stopping the watch and removing the associated `DBusWatch` object if the watch is no longer ready to be monitored, using a `WatchContext` to manage the watch's state and dependencies”",4.072908828362299,42.42424242424243,12.5,33.33333333333333,64.33724761009216
58,cpp,"Lazily initializes and returns a thread-safe, singleton `DBusObjectManager` instance using a double-checked locking pattern","Lazily creates and returns a `DBusObjectManager` shared pointer, ensuring only one instance exists per `DBusConnection` by using a mutex to protect access to a shared pointer that is initialized only once”","Lazily creates and returns a `DBusObjectManager` shared pointer, ensuring only one instance exists per `DBusConnection` by using a mutex to protect access to a shared pointer that is initialized only once, and associating the manager with the connection.”",7.897685254581032,34.04255319148936,13.333333333333334,34.04255319148936,71.36977314949036
59,cpp,"Decrements a reference count for a given D-Bus service name, releasing it from the bus if the count reaches zero, and returns `true` on success or `false` if the name was not being tracked","Releases a D-Bus service name by decrementing its usage count, and if the count reaches zero, calls `dbus_bus_release_name` to release the name, returning `true` on success and `false` if the name was not found or the release operation failed”","Releases a D-Bus service name by decrementing its usage count; if the count reaches zero, it attempts to release the name using `dbus_bus_release_name` and returns `true` on success, `false` otherwise”",32.16090195140058,61.53846153846154,36.84210526315789,48.717948717948715,73.72472882270813
60,cpp,"Steals the reply from a `DBusPendingCall` handle and wraps it in a new `DBusMessage` object that takes ownership, returning an empty message if the input handle is null","Converts a `DBusPendingCall` (a D-Bus pending call object) into a `DBusMessage` object, extracting the reply from the pending call and returning a new `DBusMessage` instance.”",Converts a `DBusPendingCall` into a `DBusMessage` by extracting the reply from the pending call and returning a new `DBusMessage` instance.”,24.08856270485351,44.44444444444445,23.076923076923077,25.92592592592593,70.58634161949158
61,cpp,Thread-safely deallocates a collection of asynchronous D-Bus message reply handlers by moving them from a protected member list to a local copy before iterating through and deleting each one,"Deletes all pending `DBusMessageReplyAsyncHandler` objects stored in a thread-safe vector by locking a mutex, moving the handlers to a temporary vector, clearing the original vector, and then iterating through the temporary vector to delete each handler.”","Deletes all pending `DBusMessageReplyAsyncHandler` objects stored in a thread-safe vector by locking a mutex, moving the handlers to a temporary vector, clearing the original vector, and then iterating through the temporary vector to delete each handler.”",3.1041505410946155,35.29411764705882,6.06060606060606,23.52941176470588,69.31455135345459
62,cpp,Thread-safely notifies all registered signal handlers of a successful state by invoking their `onSpecificError` callback with a `SUCCESS` status for each associated signal tag,"Iterates through a copy of the signal state handlers, calling the `onSpecificError` method of each handler for each signal tag associated with it, indicating successful signal reception.”","Iterates through a copy of the signal state handlers, calling the `onSpecificError` method of each handler for each signal tag associated with it, indicating successful signal reception and clearing the tag from the handler's set.”",7.434360163166213,50.0,8.0,26.923076923076923,69.8425829410553
63,cpp,"Thread-safely removes a connection, identified by its ID, from an internal collection if it exists","Removes a D-Bus connection from a map of connections, protected by a mutex, given its connection ID.”","Removes a D-Bus connection from a map of connections, protected by a mutex, given its connection ID.”",3.0542786342810864,41.1764705882353,6.25,35.294117647058826,69.02837753295898
64,cpp,"Handles an incoming D-Bus signal by dispatching it to the appropriate handler for either ""InterfacesAdded"" or ""InterfacesRemoved"" events based on the message's member name","Handles D-Bus messages received by a `DBusInstanceAvailabilityStatusChangedEvent` signal handler, dispatching the message to the appropriate event handler method (`onInterfacesAddedSignal` or `onInterfacesRemovedSignal`) based on the presence of the ""InterfacesAdded"" or ""InterfacesRemoved"" member names.”","Handles D-Bus messages received by a `DBusInstanceAvailabilityStatusChangedEvent` signal handler, dispatching the message to the appropriate event handler method (`onInterfacesAddedSignal` or `onInterfacesRemovedSignal`) based on the presence of the ""InterfacesAdded"" or ""InterfacesRemoved"" member names in the message.”",19.0180851167655,61.016949152542374,28.07017543859649,47.457627118644076,75.66919922828674
65,cpp,"Retrieves available service instances from a registry, translates the internal D-Bus representation into a vector of `DBusAddress` objects, and populates the provided output vector and status parameter","Retrieves a list of available D-Bus service instances for a given service and object path, translating the result into a vector of `DBusAddress` objects and setting a success status if the operation completes without errors.”","Retrieves a list of available D-Bus service instances for a given service and object path, translating the result into a vector of `DBusAddress` objects and setting a success status if the operation completes without errors.”",21.628820160963116,56.250000000000014,25.806451612903224,43.75000000000001,76.55825018882751
66,cpp,"Gets the availability status of a service instance by translating its identifier to a D-Bus address and querying a registry, setting the result and a success status in output parameters","Retrieves the availability status of a given D-Bus service instance by translating a CommonAPI address to a D-Bus address and checking if the instance is alive in the D-Bus registry, setting the `AvailabilityStatus` accordingly and returning a `CallStatus` of `SUCCESS`”","Retrieves the availability status of a given D-Bus service instance by translating a CommonAPI address to a D-Bus address and checking if the instance is alive in the D-Bus registry, setting the `AvailabilityStatus` to `AVAILABLE` if found, and returning a `CallStatus` of `SUCCESS`”",25.081189617830603,62.16216216216216,38.88888888888889,56.756756756756765,70.8164393901825
67,cpp,"Handles a D-Bus ""InterfacesRemoved"" signal by parsing the object path and interface names, and for any interface matching the one being observed, notifies listeners that its status has changed to ""NOT_AVAILABLE","Parses a D-Bus message containing an interfaces-removed signal, iterates through the removed interfaces, and if the signal matches the observed interface, removes it from the proxy and notifies the interface status as 'NOT_AVAILABLE'”","Parses a D-Bus message containing an interfaces-removed signal, iterates through the removed interfaces, and if the signal matches the observed interface, removes it from the proxy and notifies the interface status as 'NOT_AVAILABLE' if the proxy still exists.”",3.814335153675412,43.47826086956522,8.955223880597014,34.78260869565217,75.10733604431152
68,cpp,Notifies listeners of an interface's availability change by translating its D-Bus path and name into a generic CommonAPI address,"Translates a D-Bus address (service, object path, and interface name) to a CommonAPI address and then notifies listeners of a change in the availability status of the corresponding interface.”","Translates a D-Bus address (service, object path, and interface name) to a CommonAPI address and then notifies listeners of a change in the availability status of the corresponding interface.”",3.846187513024874,54.90196078431373,20.408163265306122,31.372549019607842,79.87183332443237
69,cpp,"Thread-safely schedules a task on the main event loop to notify a newly added listener, passing along its specific subscription details","Adds a listener to a D-Bus proxy's event notification system by pushing a function call to the main loop to notify the listener when a specific subscription's event occurs, ensuring thread safety with a mutex”","Adds a listener to a D-Bus proxy's event notification system by scheduling a function call to the main loop to notify the listener when a specific subscription's event occurs, ensuring thread safety with a mutex”",5.844941052207698,40.0,13.793103448275861,30.0,67.71733164787292
70,cpp,Thread-safely removes all listeners from an internal collection that match the provided `Subscription` identifier,"Removes a listener from the `listeners_` map, iterating through the map and erasing the entry corresponding to the provided `_subscription` if found, while ensuring thread safety with a `recursive_mutex`.","Removes a listener from the `listeners_` map, iterating through the map and erasing the entry corresponding to the provided `_subscription` if found, while ensuring thread safety with a `recursive_mutex` and ignoring the `_listener` parameter.",3.865880063854098,31.111111111111118,9.30232558139535,22.22222222222222,67.22947955131531
71,cpp,Delegates the registration of a signal state handler for a specific subscription to the underlying connection object,"Adds a given `DBusSignalHandler` to the connection's signal state handler map, associating it with a specific subscription ID.”","Adds a given `DBusSignalHandler` to the connection's signal state handler map, associating it with a specific subscription ID.”",12.062940248564933,55.55555555555555,29.411764705882355,38.88888888888889,68.66487860679626
72,cpp,Handles the result of an asynchronous service instance query by translating the `DBusAddress` list to a string list on success and invoking a final callback with the call status and the translated list,"Handles the asynchronous callback for retrieving available instances of a D-Bus proxy, translating the vector of `DBusAddress` objects to a vector of strings and passing the status and translated instances to the provided callback function”","Handles the asynchronous callback for retrieving available instances of a D-Bus proxy, translating the vector of `DBusAddress` objects to a vector of strings and passing the status and translated instances to the provided callback function”",7.531469947167948,49.27536231884058,11.940298507462687,37.68115942028986,73.2850193977356
73,cpp,"Dispatches an incoming `DBusMessage` to a registered handler based on its object path and interface, or handles it as a standard introspection request, returning `true` if the message was processed","Handles incoming D-Bus messages by first checking for a registered handler for the message's object path and interface, then calling the handler's `onInterfaceDBusMessage` method if found, or handling introspectable interface messages if no handler is registered”","Handles incoming D-Bus messages by first checking for a registered handler for the message's object path and interface, then calling the handler's `onInterfaceDBusMessage` method if found, or handling introspectable interface messages if no handler is registered, returning `true` if the message was handled and `false` otherwise”",13.98918268773484,37.68115942028986,17.910447761194025,28.985507246376812,67.94216632843018
74,cpp,"Registers a D-Bus interface handler for a specific path, returning `false` if the exact handler is already registered, but allowing idempotent registration for standard `ObjectManager` and `Properties` interfaces","Adds a `DBusInterfaceHandler` to a table of registered handlers, returning `true` if the handler was successfully added or already exists (and is a special case for `org.freedesktop.DBus.ObjectManager` or `org.freedesktop.DBus.Properties`), otherwise `false` if the handler already exists and is not one of those special cases”","Adds a `DBusInterfaceHandler` to a table of registered handlers, returning `true` if the handler was successfully added or already exists (and is a special case for `org.freedesktop.DBus.ObjectManager` or `org.freedesktop.DBus.Properties`), otherwise `false` if the handler already exists and is not one of those special cases”",9.043660300998193,37.9746835443038,5.194805194805195,25.31645569620254,60.48274040222168
75,cpp,"Registers a given `DBusInterfaceHandler` to a specific path in a table, returning `true` on success and `false` if the handler is already registered for that path","Adds a `DBusInterfaceHandler` to a table of registered objects, keyed by `DBusInterfaceHandlerPath`, ensuring that the handler is not already registered for that path and updating the associated vector if it is”","Adds a `DBusInterfaceHandler` to a table of registered objects, keyed by `DBusInterfaceHandlerPath`, and returns `true` if the handler was successfully added (i.e., it wasn't already registered for that path)”",24.967920997628458,52.63157894736842,32.727272727272734,45.614035087719294,69.55338716506958
78,c,"Constructs and sends a 2-byte UDS positive response to an ECU Reset request, containing the positive response SID and the echoed reset type, over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","Constructs and sends a 2-byte UDS positive response for an ECU reset request—containing the reset type—over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails”","Constructs and sends a 2-byte UDS positive response for an ECU reset request—containing the reset type—over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails”",44.96751610215547,86.48648648648648,77.77777777777779,86.48648648648648,88.36271166801453
79,c,"Processes a UDS ECU Reset request, validating the 2-byte message length, sending a positive response before triggering a system reboot for a 'hard reset', and sending a negative response for either an incorrect length or an unsupported reset sub-function","Handles an ECU reset request by validating the message length, determining the reset type (hard or soft), sending a corresponding positive or negative response, and initiating a cold reboot if a hard reset is requested”","Handles an ECU reset request by validating the message length, determining the reset type (hard or soft), sending a corresponding positive or negative response, and initiating a cold reboot if a hard reset is requested, logging debug information for hard resets”",8.186955046410974,55.263157894736835,21.62162162162162,42.10526315789473,70.19618153572083
80,c,"Constructs and sends a 4-byte UDS positive response for a ""Request Download"" service, specifying a maximum block length of 0x00D2, over a CAN bus using the ISO-TP protocol and logging an error on failure","Constructs and sends a 4-byte UDS positive response for a Request Download request—containing the positive response code and a block size of 258 bytes—over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails”","Constructs and sends a 4-byte UDS positive response for a Request Download request—containing the positive response code and a block size of 258 bytes—over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails”",39.46672473224036,71.7948717948718,52.63157894736842,69.23076923076924,82.45750665664673
81,c,"Constructs and sends a 2-byte UDS positive response for a Transfer Data request (containing the positive SID and the block sequence counter) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","Constructs and sends a 2-byte UDS positive response for a Transfer Data request—containing the block sequence counter—over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails”","Constructs and sends a 2-byte UDS positive response for a Transfer Data request—containing the block sequence counter—over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails”",57.36333308236724,91.89189189189189,88.88888888888889,91.89189189189189,91.81182384490967
82,c,"Constructs and sends a 5-byte UDS positive response for the Routine Control service (containing the routine control type, routine ID, and a result code) over a CAN bus via ISO-TP, logging an error if the transmission fails","Constructs and sends a 5-byte UDS positive response for a Routine Control request—containing the routine ID and a result code—over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails”","Constructs and sends a 5-byte UDS positive response for a Routine Control request—containing the routine ID and a result code—over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails”",47.34365204683125,90.9090909090909,77.33333333333334,88.31168831168831,90.45096039772034
83,c,"Constructs and sends a 1-byte UDS positive response for a Transfer Exit request (containing the request SID + 0x40) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","Constructs and sends a 1-byte UDS positive response for a Request Transfer Exit request over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails”","Constructs and sends a 1-byte UDS positive response for a Request Transfer Exit request over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails”",59.46232777632856,90.90909090909089,78.125,87.87878787878788,89.51480388641357
85,c,"Searches a predefined `id_mapping` array for a given CAN ID and returns its corresponding index, or `0xff` if the ID is not found","Maps a given CAN ID to an index within the `id_mapping` array, returning the index if found or 0xff if the CAN ID is not recognized”","Maps a given CAN ID to an index within the `id_mapping` array, returning the index if found or 0xff if the CAN ID is not recognized”",30.052834075859,62.7450980392157,44.89795918367348,47.05882352941176,78.3605694770813
86,c,"Disables a specific LIN-to-CAN receive filter by clearing its callback pointer, or disables all filters if a special ID is passed, while ignoring out-of-bounds IDs","Removes a specified CAN filter ID from the `incoming_callbacks` array within a `lin2can_data` structure, effectively disabling the corresponding callback function for that filter, or clears all callbacks if the filter ID is equal to `TRANSLATABLE_ADDRESSES_LEN”","Removes a specified CAN filter ID from the `incoming_callbacks` array within a `lin2can_data` structure, effectively disabling the corresponding callback function for that filter, or clears all callbacks if the filter ID is equal to `TRANSLATABLE_ADDRESSES_LEN`, ensuring no further processing for that filter.",2.6558703990056154,32.35294117647059,3.0303030303030303,26.47058823529412,60.71481108665466
87,c,"A LIN driver callback that retrieves a pending outgoing frame from a message queue, copies its data for transmission, invokes a frame-specific completion callback, and returns a boolean indicating if a frame was successfully prepared","Retrieves a LIN frame from a message queue, copies its contents into a provided `lin_frame` structure, and then calls a user-defined callback function with the device and user data associated with the LIN-to-CAN bridge, logging debug information during the process”","Retrieves a LIN frame from a message queue, copies its contents into a provided `lin_frame` structure, and then calls a user-defined callback function with the device and user data associated with the LIN-to-CAN bridge, logging debug information if the retrieval fails”",17.823406686003743,40.0,20.51282051282051,32.5,66.41599535942078
88,c,"Acts as a LIN-to-CAN gateway callback, translating an incoming LIN frame by using its first data byte's top two bits as an index to find a target CAN ID, constructing a new CAN frame with the translated ID and a payload where those index bits are masked out, and finally invoking a registered handler with the resulting CAN frame","Translates incoming LIN frames to CAN frames by mapping the LIN ID to a corresponding CAN ID, then calls a registered callback function with the translated CAN frame and user data for each mapped LIN ID.”","Translates incoming LIN frames to CAN frames by mapping the LIN ID to a corresponding CAN ID, then calls a registered callback function with the translated CAN frame and user data for each mapped LIN ID.”",5.150730651551275,44.89795918367347,14.583333333333334,28.57142857142857,68.77679228782654
89,c,"Initializes a high-voltage shield by configuring its Output Enable (OE) GPIO, writing a zeroed state to its hardware registers, and then setting the OE pin to enable the device's outputs, logging errors at each step","Initializes the HV shield device by configuring the output enable GPIO pin, initializing the device's internal registers, updating the shield's state, and enabling the output, returning an error code if any of these operations fail”","Initializes the HV shield device by configuring the output enable GPIO pin, initializing the device's internal registers, updating the shield's state, and enabling the output, returning an error code if any of these operations fail or if the output enable pin fails to be set”",4.37319289333598,40.54054054054054,11.11111111111111,29.72972972972973,73.96222352981567
90,c,"Sets the gain for a specified DAC (0 or 1) on a high-voltage shield by updating its value in a cached data structure and then calling an update function to write the new configuration to the hardware, returning an error for an invalid DAC index","Sets the gain value for a specified DAC channel (0 or 1) within the `hv_shield_data_t` structure, then calls the `_hv_shield_update` function to apply the change, returning -EINVAL if the DAC channel is invalid”","Sets the gain value for a specified DAC channel (0 or 1) within the `hv_shield_data_t` structure, then calls the `_hv_shield_update` function to apply the change, returning -EINVAL if the DAC channel is invalid or if the update fails”",16.613701328665847,54.761904761904766,21.951219512195124,47.61904761904761,74.59552884101868
91,c,"Enables or disables a specific GPIO output on a high-voltage shield by validating the pin index (0-31), remapping it via a nibble-swap, modifying a cached register bit, and then calling a helper function to write the update to the hardware","Sets the enable state of a GPIO output pin (0-31) on the HV shield device by manipulating the corresponding bit in the `gpio_output` register, and then updates the device's register values, returning -EINVAL if the index is out of range”","Sets the enable state of a GPIO output pin (0-31) on the HV shield device by manipulating the corresponding bit in the `gpio_output` register, and then updates the device's register values, returning -EINVAL if the index is out of range or if the index is not a valid GPIO pin”",12.218738829460586,39.53488372093023,7.142857142857142,27.906976744186046,67.8024172782898
92,c,"A callback function that forwards a received CAN frame from a source device to a destination device (passed via `user_data`) using a non-blocking send operation, logging a debug message on successful queuing or a warning on failure","Routes incoming CAN frames from one device to another by forwarding them to a specified destination device using the `can_send` function, logging a warning if the transmission fails and a debug message indicating the routing action”","Routes incoming CAN frames from one device to another by forwarding them to a specified destination device using the `can_send` function, logging a warning if the transmission fails and a debug message indicating the routing action.”",8.37200227581891,42.10526315789473,18.918918918918916,34.21052631578947,74.62318539619446
93,c,"Configures a CAN message router by iterating through an array of routing entries, adding a receive filter to a source CAN interface for each entry that uses a callback to forward matching frames to a destination interface, and returns an error if any filter registration fails","Registers a specified number of CAN router entries by adding corresponding receive filters for each entry, associating each filter with a callback function and a destination pointer, returning an error code if any registration fails”","Registers a specified number of CAN router entries by adding corresponding receive filters for each entry, associating each filter with a callback function and a destination pointer, returning 0 on success or an error code if any registration fails”",6.098257405532756,56.790123456790134,17.72151898734177,46.91358024691358,76.65384411811829
94,c,"Initializes the CAN router by iterating through all statically-defined routing tables found in a dedicated linker section and registering their entries, returning an error if any registration fails","Initializes the CAN router by iterating through a predefined table of CAN router entries and registering each entry using the `can_router_register` function, returning an error code if registration fails”","Initializes the CAN router by iterating through a predefined table of CAN router entries and registering each entry using the `can_router_register` function, returning 0 on success or an error code if registration fails”",25.470553981698213,56.66666666666666,34.48275862068965,53.333333333333336,77.81330347061157
95,c,"Iterates through a pre-configured list of low-voltage GPIOs, setting the state of each pin enabled by an input mask to the corresponding bit in a value word, logging and returning an error if any underlying GPIO operation fails","Iterates through a configured list of GPIO pins, setting the specified pins to a given value if their corresponding bit is set in the input mask, and returning an error code if any GPIO setting operation fails”","Iterates through a configured list of GPIO pins, setting the specified pins to a given value if their corresponding bit is set in the input mask, and returning 0 on success or a negative error code if any GPIO setting operation fails”",15.12281512735949,67.53246753246754,32.0,54.545454545454554,79.01482582092285
96,c,"Populates an output parameter with the number of available Abstract LIN callback slots, calculated by subtracting the used count from a configured maximum, returning an error if the parameter is a null pointer","Retrieves the number of free callback slots available in the abstract LIN driver, storing the result in the provided `free_slots` pointer and returning 0 on success or -EINVAL if the pointer is NULL”","Retrieves the number of free callback slots available in the abstract LIN driver, storing the result in the provided `free_slots` pointer and returning 0 on success or -EINVAL if the pointer is NULL”",6.305224310896851,44.776119402985074,15.384615384615385,35.820895522388064,70.39313912391663
97,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","Registers a callback function to be invoked when a specific LIN frame (identified by its ID and size) is received, storing the callback and associated data within a device's abstract LIN data structure, returning an error code if the input parameters are invalid or if the callback cannot be registered”","Registers a callback function to be invoked when a specific LIN frame (identified by its ID and size) is received, storing the callback and associated data within a device's abstract LIN data structure, returning an error code if the input parameters are invalid or if the callback cannot be registered”",14.100013432526401,55.3191489361702,19.565217391304348,42.5531914893617,69.7046160697937
98,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","Registers an outgoing callback function for a specific LIN frame ID and size within a device's abstract LIN data structure, returning an error code if the callback is invalid or the frame ID/size is out of range, or if memory allocation fails”","Registers an outgoing callback function for a specific LIN frame ID and size within a device's abstract LIN data structure, returning an error code if the callback is invalid or the frame ID/size is out of range, or if memory allocation fails”",21.612981985317038,52.87356321839081,23.52941176470588,41.379310344827594,68.57686638832092
99,c,"Sets the active LIN schedule table by index, first validating the index and then using a semaphore to thread-safely update the scheduler's state and reset its entry pointer to the start of the new table","Sets the active table index for a given abstract LIN scheduler, ensuring only one table is active at a time by using a semaphore, and resets the current entry index to 0 when switching tables, returning -ENOENT if the table index is out of bounds”","Sets the active table index for a given abstract LIN scheduler, ensuring only one table is active at a time by using a semaphore, and resets the current entry index to 0 when switching tables, returning -ENOENT if the table index is out of bounds or -EPERM if another table is already active”",6.35149613104183,46.34146341463415,10.0,34.146341463414636,65.57779908180237
100,c,"Disables a LIN scheduler by first checking if it's already stopped, then taking a semaphore to safely wait for the current operation to complete before setting the active schedule table index to -1",Disables a given abstract LIN scheduler by setting its current table index to -1 and blocking until the scheduler is no longer active.,"Disables a given abstract LIN scheduler by setting its current table index to -1 and blocking until the scheduler is no longer active, ensuring exclusive access via a semaphore.",11.473678246489518,45.614035087719294,21.818181818181817,35.08771929824562,70.541912317276
