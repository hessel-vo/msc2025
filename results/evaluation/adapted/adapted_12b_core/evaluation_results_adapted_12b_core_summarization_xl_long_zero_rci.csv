id,language,reference,generated,generated_rci,bleu_score,rouge1,rouge2,rougeL,bertscore_f1
2,python,"Raises an exception if the specified 'datatype' is unsupported, otherwise retrieves that type's validation function and returns the boolean result of calling it with the provided 'value'",This function checks if a given value conforms to a specified datatype by retrieving the corresponding type object and applying it to the value.,This function validates if a given value matches a specified datatype by retrieving the corresponding type object and checking if the value is an instance of that type.,3.848169719653079,46.42857142857143,11.11111111111111,25.0,65.87425470352173
3,python,"Validates that a given value, or each value in a list, is an integer that fits within the numerical range defined by a specified bit-width and signedness",This function checks if a given value or list of values are within the specified range for a signed or unsigned integer of a given bit width.,This function validates whether a given integer or list of integers falls within the specified range for a signed or unsigned integer of a given bit width.,4.693143873694084,50.90909090909091,11.320754716981133,40.0,77.87473201751709
4,python,"Returns the type definition tuple from a class-level list of types that matches the provided 'datatype' name, or returns None if no match is found","This function retrieves a tuple containing the datatype, a callable, and a list of strings from a class's `types` attribute, given a specified datatype string, or returns `None` if the datatype is not found.","This function searches a class's `types` attribute for a tuple matching a given datatype string and returns that tuple (containing the datatype, a callable, and a list of strings) if found, otherwise returning `None`.",2.6048591492696036,42.622950819672134,6.779661016949152,26.229508196721312,66.36711359024048
5,python,Returns a dictionary mapping the short name to the full FQN for all dynamic datatypes that exist in the same namespace as the provided FQN,"This function extracts a dictionary of namespaced datatypes from a list of dynamic datatypes, filtering based on a provided fully qualified name (FQN) prefix.","This function extracts a dictionary of namespaced datatypes from a list of dynamic datatypes, filtering based on a provided fully qualified name (FQN) prefix and returning only the last component of the matching FQN.",3.4466408873005676,33.898305084745765,7.017543859649122,23.728813559322035,65.2941882610321
7,python,"Parses a type string to create an `ApiGearType` object, mapping common primitive types to their ApiGear equivalents, sanitizing custom type names by replacing dots with underscores, and setting an array flag based on a ""[]"" suffix","The function `get_apigear_datatype` converts a string representation of a data type (e.g., ""int32"", ""float"", ""string"", or ""int32[]"") into an `ApiGearType` object, handling basic types, floating-point types, booleans, strings, and arrays.","The function `get_apigear_datatype` converts a string representation of a data type (e.g., ""int32"", ""float"", ""string"", or ""int32[]"") into an `ApiGearType` object, handling basic types, floating-point types, booleans, strings, and array types.",11.057913790145216,31.428571428571427,5.88235294117647,25.71428571428571,61.597877740859985
8,python,"Creates an `ApiGearProperty` by converting the VSS node's datatype to a supported ApiGear type and copying its description, returning `None` and logging a warning if the datatype is not supported","This function generates an `ApiGearProperty` object from a `VSSNode` and a specified datatype, populating its type and description if available.","This function generates an `ApiGearProperty` object from a `VSSNode` and a specified datatype, returning `None` if the datatype is unsupported.",25.021739649521958,47.05882352941176,20.40816326530612,39.21568627450981,76.32290720939636
10,python,"Loads and parses multiple VSpec files from specified paths, using a list of include directories, then merges them into a single composite VSpec object and returns it, raising an exception if no files are successfully loaded","This function loads and merges multiple VSpec files (specified by paths) along with any specified include directories into a single VSpec object, logging the process and raising an exception if no specs are loaded.","This function loads and merges multiple VSpec files (specified by paths) and their included files into a single VSpec object, logging the process and raising an exception if no specs are loaded.",17.798534315285337,64.70588235294117,30.303030303030297,58.82352941176471,81.60361051559448
11,python,"Recursively updates a 'base' dictionary with an 'update' dictionary, merging nested dictionaries for common keys and overwriting or adding all other key-value pairs","Recursively merges a dictionary `update` into a base dictionary `base`, updating nested dictionaries and overwriting non-dictionary values.","Recursively merges a dictionary `update` into a base dictionary `base`, updating nested dictionaries and overwriting non-dictionary values in place.",5.217592866832707,45.45454545454545,19.04761904761905,40.909090909090914,73.54696989059448
12,python,"Asserts that the input value, if not None, is a valid 'constUID' formatted as an 8-digit hexadecimal string prefixed with '0x', returning the value if the check passes","This function validates if a given string `v` is a valid hexadecimal constant UID (e.g., ""0x12345678"") and returns the original string if valid, otherwise returns `None`.","This function validates if a given string `v` conforms to the format ""0x"" followed by eight hexadecimal characters, returning the original string if valid, otherwise raising an assertion error.",5.3976467790265215,37.93103448275862,3.571428571428571,24.137931034482758,72.79494404792786
13,python,"Initializes a VSSRaw model and attempts to resolve it, returning the successfully resolved model or the original unresolved model if resolution fails due to a validation or model error","This function creates a `VSSRaw` object from a dictionary, attempts to resolve it using `resolve_vss_raw`, and returns the resolved object or the original incomplete object if resolution fails.","This function creates a `VSSRaw` object from a dictionary, attempts to resolve it using `resolve_vss_raw`, and returns the resolved object or the original incomplete object if resolution fails, logging a debug message in the latter case.",10.047878571666185,47.76119402985074,24.615384615384617,44.776119402985074,74.72988367080688
14,python,"Asserts that each string in the input list is a valid datatype by checking against a master list, returning the original list if all values are valid","This function validates a list of datatypes against a predefined set of valid datatypes, raising an assertion error if any invalid datatypes are found.","This function checks if a list of datatypes contains only valid datatypes, raising an assertion error if an invalid datatype is encountered.",2.1662164003322313,24.489795918367346,0.0,12.244897959183673,65.30789136886597
15,python,"Traverses a VSSNode tree to generate a formatted string, displaying each node's name followed by the values of any specified attributes found on it","This function recursively traverses a VSSNode tree, formats each node's name and specified attributes into a string representation, and returns a newline-separated string representing the rendered tree.","This function recursively traverses a VSSNode tree, formats each node's name and specified attributes into a string representation, and returns a newline-separated string representing the rendered tree structure.",9.441218922485383,47.27272727272728,26.415094339622648,36.36363636363636,76.24853849411011
16,python,"Recursively traverses up the parent hierarchy to find and return the first non-instance ancestor node and the traversal depth, raising an exception if the starting node is not a branch or if no root is found","Recursively traverses up the VSS tree to find the root instance node, incrementing the depth counter with each level, and raising an exception if no instance root is found.","Recursively traverses up the VSS tree to find the root instance node, incrementing the depth counter with each level, and raising a `NoInstanceRootException` if no instance root is found.",12.597866166504096,57.57575757575758,21.875000000000004,54.545454545454554,73.65322709083557
17,python,Recursively calculates the depth of the first-found branch of children where each node is a `VSSDataBranch` with its `is_instance` flag set,"Recursively counts the depth of instance children within a VSSDataBranch object, returning 0 if no instance children are found.","Recursively counts the depth of instance children within a VSSDataBranch object, returning 0 if no instance children are found or if the object has no children.",6.541868941754435,40.816326530612244,12.76595744680851,32.6530612244898,63.27224373817444
18,python,Returns a list of node IDs from an input list whose expected parent's name matches the provided `name`,This function identifies and returns a list of node IDs whose expected parent is a specified name.,This function identifies and returns a list of node IDs that have a specified name as their expected parent.,19.49624907951976,47.368421052631575,33.33333333333333,42.10526315789473,74.66506958007812
19,python,"Retrieves an attribute from an object, returning a specified default value if the attribute is missing or its value is `None`","This function safely retrieves an attribute from an object, returning a default value if the attribute is not found or is None.","This function safely retrieves an attribute from an object, returning a specified default value if the attribute is not found or is None.",59.98682042754107,81.81818181818183,71.42857142857143,81.81818181818183,86.10325455665588
20,python,Generates a `proto3` file from a VSS tree by first writing import statements for complex data types and then converting each branch in the tree into a corresponding protobuf message,"This function recursively traverses a VSS signal tree, generating a Protobuf definition for each branch node, including necessary imports and optional fields based on specified flags.","This function recursively traverses a VSS signal tree, generating a Protobuf definition for each branch node, including necessary imports and optional fields based on specified flags, and writing the generated code to a file.",3.60737546551436,40.625,6.451612903225808,25.0,68.15834045410156
21,python,"Traverses a VSS tree to find all terminal instance branches, grouping their relative names into a dictionary where each key is the fully qualified name of the original branch they instantiate","This function recursively traverses a VSS tree to identify and collect the fully qualified names of all instance nodes (nodes whose data is a VSSDataBranch and has the `is_instance` attribute set to True) that are direct children of an instance root node, grouping them by their respective instance root node.","This function recursively traverses a VSS tree to identify and collect the fully qualified names of all instance nodes (nodes whose data is a VSSDataBranch and has the `is_instance` attribute set to True) that are direct children of an instance root node, grouping them by their respective instance root node and excluding any instance root nodes that have instance children themselves.",6.197066709195822,36.55913978494624,13.186813186813188,21.50537634408602,62.921494245529175
22,python,Checks if a given VSSNode is a leaf by verifying its 'data' attribute is an instance of VSSDataDatatype,This function checks if a given VSSNode is a leaf node by verifying if its data attribute is an instance of the VSSDataDatatype class.,This function determines if a VSSNode represents a leaf node by checking if its 'data' attribute is a VSSDataDatatype instance.,17.79392574533939,63.1578947368421,33.333333333333336,57.89473684210527,88.79516124725342
23,python,Returns `True` if the given `VSSNode`'s data is a `VSSDataBranch` and its `is_instance` attribute is `False`,This function checks if a given VSS node represents a VSS branch with a non-instance data type.,This function determines if a VSS node's data is a branch and if that branch is not an instance.,5.616499665729685,42.10526315789474,16.666666666666668,42.10526315789474,62.1853768825531
24,python,Returns True if the node's data is a VSSDataBranch and its 'is_instance' attribute is True,This function checks if a given VSSNode represents an instance of a VSSDataBranch by verifying if its data attribute is a VSSDataBranch and if that branch has the `is_instance` flag set to True.,This function determines if a VSSNode represents an instance of a VSSDataBranch by checking if its `data` attribute is a `VSSDataBranch` object and if that object's `is_instance` attribute is True.,5.777867298455205,53.06122448979592,25.531914893617014,44.89795918367347,71.32325768470764
25,python,"Calculates a 32-bit FNV-1 hash for a given byte string by iterating through each byte, multiplying the current hash by the FNV prime, and then performing a bitwise XOR with the byte",This function calculates a 32-bit FNV-1a hash value for a given byte string using a specified prime and bitwise operations.,This function calculates a 32-bit FNV-1a hash value for a given byte string.,11.281284843752745,44.89795918367347,34.04255319148936,44.89795918367347,72.14537262916565
28,java,"Inflates the `card_fragment` layout, finds and assigns the card's title and icon views, and returns the resulting root view","This method inflates a layout resource (`card_fragment`) to create a view, finds the title and icon elements within that layout, and returns the inflated view.","This method inflates a layout resource (`card_fragment`) to create a view, finds the title and icon elements within that layout, and returns the inflated view for use in a fragment.",20.320782187254736,50.0,20.0,46.15384615384615,72.63063788414001
29,java,"Updates an `ImageButton`'s icon and click listener from a content object and makes it visible, or hides the button if the content is null","This method updates the visibility and content of an ImageButton based on the provided DescriptiveTextWithControlsView.Control object, setting its icon and click listener if the control is not null, otherwise hiding the button.","This method updates an ImageButton's visibility, icon, and click listener based on a DescriptiveTextWithControlsView.Control object, displaying the button with the control's properties if it exists, otherwise hiding it.",6.276332353857551,53.57142857142857,25.92592592592593,46.42857142857142,72.24758267402649
30,java,"Lazily inflates a `ViewStub` to create a descriptive text layout, caches references to its child views (title, subtitle, image), and returns the inflated layout","This method lazily initializes and returns a View representing a descriptive text-only layout, inflating it from a ViewStub if it hasn't been created yet and caching it for future use.","This method lazily initializes and returns a View representing a descriptive text-only layout, inflating it from a ViewStub if it hasn't been created yet and caching the inflated view and its child views for future use.",6.849788866850127,45.16129032258065,23.333333333333332,29.03225806451613,71.04123830795288
31,java,Updates the header view on the main UI thread by making its root view visible and setting the card's title and icon from the provided `CardHeader` object,"This method updates the UI elements (visibility, title, and icon) of a card header view within the main thread of the application's activity.","This method updates the UI elements (visibility, title, and icon) of a card header view on the main thread of the activity.",15.877553066997658,56.00000000000001,29.166666666666668,36.00000000000001,72.98198938369751
32,java,"Lazily inflates a `ViewStub` to create and return the text block layout view, while also finding and caching references to its child text views on the first call","This method lazily initializes and returns a `View` representing a text block layout, inflating it from a `ViewStub` if it hasn't been created yet and retrieving its child views.","This method lazily initializes and returns a `View` representing a text block layout, inflating it from a `ViewStub` if it hasn't been created yet and retrieving its child views for later use.",10.72049893226481,39.344262295081975,13.559322033898304,29.50819672131148,73.63957166671753
33,java,"Queries the `PackageManager` for a `MediaBrowserService` within a given package and returns a `ComponentName` for the first one found, or `null` if none exist",This Java code retrieves the default media browsing service component name for a given package name by querying the package manager for services that implement the MediaBrowserService interface.,"This Java code retrieves the default media browsing service component name for a given package name by querying the package manager for services that implement the MediaBrowserService interface, returning null if no such service is found.",5.645847715611223,36.66666666666667,13.793103448275861,30.0,70.91185450553894
34,java,"Determines if a component should be added to a launchable list, returning `false` if its package is explicitly hidden or if it's a custom media component and launchable apps are also being shown, otherwise returning `true` for valid launchable or media service types","This method determines whether a given component should be added to the launchables list based on its package name, app type, and custom media component status, returning false if the package is hidden or if it's a custom media component that shouldn't be launched.","This method determines whether a given component should be added to the launchables list based on its package name, app type, and custom media component status, returning `false` if the package is hidden or if it's a custom media component that shouldn't be launched.",32.69780582627337,55.55555555555556,36.36363636363637,48.888888888888886,71.62054777145386
35,java,"Sets the car's media source to a given component in browse mode and finishes the context if it's an Activity, catching and logging a `CarNotConnectedException` if the car service is unavailable","This method sets the media source of a specified component to browse mode and finishes the activity if the context is an activity, handling potential CarNotConnectedException errors.","This method sets the media source of a specified component to browse mode and finishes the activity if the context is an activity, handling potential CarNotConnectedException errors and logging them.",17.15602506005432,66.66666666666666,32.786885245901644,50.793650793650805,77.36005783081055
36,java,"Safely checks if a given activity is distraction optimized using the `CarPackageManager`, returning `false` and logging an error if the manager is null or a `CarNotConnectedException` is caught","This method checks if a specified activity within a given package is optimized for distraction optimization using a CarPackageManager, handling potential CarNotConnectedException errors.","This method determines if a specified activity within a given package is optimized for distraction optimization using a CarPackageManager, returning `true` if so and handling potential `CarNotConnectedException` errors.",9.768473742203758,50.0,11.11111111111111,35.714285714285715,78.08614373207092
38,java,"Retrieves a specific, resolvable map `Intent` from a configured list if it matches the system's default map app, otherwise falls back to a generic `Intent` for any map application","This method retrieves an `Intent` for launching a maps application, prioritizing user-configured preferred map apps over the system default, while ensuring the selected app is valid and resolves to an activity.","This method retrieves an `Intent` for launching a maps application, prioritizing user-configured preferred map apps over the system default, and returning the default if no preferred app is found or is invalid.",8.375502143604033,38.0952380952381,6.557377049180328,25.396825396825403,63.85766863822937
39,java,"Lazily initializes a set of `HomeCardModule`s by reflectively instantiating class names from a configuration array, and then uses a `FragmentTransaction` to add each module's card view to the UI layout","This method dynamically instantiates and initializes `HomeCardModule` objects based on class names defined in a resource array, adds them to a set, and then replaces fragments in the activity's layout with the corresponding card views from each module.","This method dynamically instantiates and initializes `HomeCardModule` objects based on class names defined in a resource array, adds them to a set, and then replaces fragments in the activity's layout with the corresponding card views from each module, logging the instantiation time for debugging purposes.",6.8622816003992195,46.15384615384615,10.526315789473683,28.20512820512821,75.39950609207153
40,java,"Iterates through a list of appeared tasks and uses the `ActivityTaskManager` to remove any task that is in multi-window mode, logging it as a dangling task","This method iterates through a list of task appearance information, removes any multi-window tasks from the ActivityTaskManager to clean up dangling tasks.",This method iterates through a list of task appearance information and removes multi-window tasks from the ActivityTaskManager to clean up dangling tasks.,10.451748713163802,55.99999999999999,29.166666666666668,40.0,77.2477924823761
41,java,Parses the mode from the current Intent and sets the title for both the Activity and the CarUi toolbar using the string resource ID defined in that mode,"This method updates the application's mode based on the intent data, setting the title of both the activity and the toolbar accordingly.",This method updates the application's mode based on the intent data and sets the title of the activity and toolbar to reflect the new mode.,11.020790523837176,51.85185185185186,19.23076923076923,51.85185185185186,72.2241461277008
42,java,"Lazily initializes and returns a `Chronometer` by finding it in the layout, while also finding and caching its associated separator view on the first call","This method lazily initializes and returns a `Chronometer` view (and its separator) from the layout if it hasn't been initialized yet, ensuring it's only created when needed.","This method lazily initializes and returns a `Chronometer` view (and its separator) from the layout if it hasn't been initialized yet, ensuring it's only created when needed and cached for later use.",18.555209289044107,44.06779661016949,21.05263157894737,33.898305084745765,68.59380602836609
43,java,"Lazily inflates a media layout from a `ViewStub`, finds and caches its title and subtitle views, initializes its media playback controls bar via a presenter, and returns the inflated view","This method lazily initializes and returns a `View` representing the media layout, inflating it from a `ViewStub` if it doesn't already exist, and setting up the title, subtitle, and playback controls within that layout.","This method lazily initializes and returns a `View` representing the media layout, inflating it from a `ViewStub` if it doesn't already exist, and initializing the presenter with the media control bar within that layout.",13.280286244402937,49.230769230769226,12.698412698412701,30.769230769230766,68.98512244224548
44,java,"If a valid `Drawable` and card size are provided, this method scales the image to a square based on the card's largest dimension, blurs it, and sets the resulting bitmap as the animated, visible card background","This method updates the background image of a card view by scaling a provided drawable to a square size, blurring it, and setting it as the card's background image.","This method updates the card's background image by scaling a provided drawable to a square size, blurring it, and setting it as the card's blurred background image.",7.480351196980027,57.57575757575758,21.875000000000004,39.3939393939394,69.86746788024902
45,java,Makes the media layout view visible and updates its title and subtitle with the provided text,This method updates the visibility and text content of a media layout view with a given title and subtitle.,This method updates the visibility and text content of a media layout view to display a given title and subtitle.,12.918025833717252,55.55555555555556,23.52941176470588,38.888888888888886,77.62561440467834
46,java,"If the content's start time is positive, this method makes a chronometer and a separator visible, sets the chronometer's base time, and starts it; otherwise, it hides both views","This method updates the visibility and state of a chronometer and separator based on the start time of a descriptive text view, displaying them if the start time is positive and hiding them otherwise.","This method controls the visibility of a chronometer and separator based on the start time of a descriptive text view, displaying them if the start time is positive and hiding them otherwise.",12.117880855911828,53.96825396825397,22.950819672131146,31.74603174603175,72.35058546066284
47,java,Registers a member callback to the provided `Call` object after verifying it is not null,"Registers a callback to a newly added call object, enabling the receiving of call-related events.",Registers a callback to a newly added call object to receive call-related events.,6.854930724411443,41.379310344827594,22.222222222222225,41.379310344827594,72.54132032394409
48,java,"Handles the removal of a call by clearing the current call and card content, notifying the presenter of the model update, and unregistering its callback from the call object for cleanup","This method handles the removal of a call by clearing related data, notifying the presenter of the update, and unregistering a callback associated with the removed call.","This method handles the removal of a call by clearing associated data, notifying the presenter of the update, and unregistering a callback from the removed call.",42.489014208997496,70.17543859649122,54.54545454545454,70.17543859649122,82.0580005645752
49,java,"Formats a phone number to create a new `DescriptiveTextWithControlsView` with call details and controls, then notifies the presenter that the model has been updated","This method formats a phone number, updates a view with the formatted number and associated call controls, and notifies a presenter of the model update.","This method formats a phone number, updates a view with the formatted number and associated call controls, and notifies a presenter of the model update.",8.688218206838483,57.14285714285714,17.02127659574468,48.97959183673469,75.29146075248718
50,java,"Initializes mute, end call, and dialpad buttons by assigning each an icon and a click listener to toggle mute status, disconnect the current call, and delegate to an onClick handler, respectively","This method initializes the mute, end call, and dialpad buttons for an in-call UI by creating `Control` objects that handle corresponding actions when clicked.","This method initializes the mute, end call, and dialpad buttons for an in-call UI by creating `Control` objects that handle corresponding actions when clicked, using drawable resources and lambda expressions for button functionality.",19.284241191324558,36.92307692307693,15.873015873015872,30.76923076923077,66.92230701446533
53,cpp,"When a new listener is added, this callback immediately notifies it with an `AVAILABLE` status if the D-Bus connection is already active",This function notifies a listener of the availability status (available) if the DBus connection is currently connected.,This function notifies a listener of the availability status (available) if the DBus connection is connected.,4.965501535546057,51.28205128205128,10.81081081081081,35.8974358974359,72.1481204032898
54,cpp,"Atomically registers a given thread to be joined later by adding it to a list, but only if its associated connection is active and the thread is not already present in the list","The function `joinOnExit` associates a thread with a connection and adds the thread to a vector of threads to be joined upon exit, ensuring that the thread is tracked for later joining if it's not already associated with the connection.","The function `joinOnExit` associates a thread with a connection and adds the thread to a vector of threads to be joined upon exit, only if the thread is not already associated with the connection.",16.669883238594206,53.73134328358209,27.69230769230769,38.805970149253724,71.09537720680237
56,cpp,A callback function that handles the removal of a D-Bus watch by stopping its monitoring and disassociating the high-level wrapper object from the underlying `libdbus` watch,This function handles the removal of a DBus watch by stopping its monitoring if it's ready and clearing its associated data.,"This function handles the removal of a DBus watch by stopping its monitoring if it's ready and clearing its associated data, ensuring proper resource cleanup.",26.206773020582933,44.44444444444445,30.769230769230766,44.44444444444445,73.82925152778625
57,cpp,"Handles the toggling of a D-Bus watch by creating a C++ wrapper object for it on first use, and then starting or stopping its monitoring based on its readiness status","This function toggles the DBus watch state (start or stop) based on the provided `libdbusWatch` and associated `WatchContext`, creating a new `DBusWatch` object if one doesn't exist or updating an existing one.","This function toggles the DBus watch state (start or stop) based on the provided `libdbusWatch` and associated `WatchContext`, creating a new `DBusWatch` object if one doesn't exist or updating an existing one, and ensuring the watch is ready before starting.",2.8797952680604375,27.77777777777778,5.714285714285714,19.444444444444446,64.2008125782013
58,cpp,"Lazily initializes and returns a thread-safe, singleton `DBusObjectManager` instance using a double-checked locking pattern","This function lazily initializes and returns a shared pointer to a `DBusObjectManager` object, ensuring thread-safe creation using a mutex.","This function lazily initializes and returns a shared pointer to a `DBusObjectManager` object, ensuring thread-safe creation via a mutex and managing its lifecycle.",13.737279171076757,45.0,26.315789473684205,40.0,75.76016783714294
59,cpp,"Decrements a reference count for a given D-Bus service name, releasing it from the bus if the count reaches zero, and returns `true` on success or `false` if the name was not being tracked","This function releases a service name from the D-Bus connection, decrementing its usage count and calling `dbus_bus_release_name` if the count reaches zero, returning true if the release was successful.","This function releases a service name from the D-Bus connection, decrementing its usage count and calling `dbus_bus_release_name` if the count reaches zero, returning true if the release was successful or if the service name was already released.",16.662810873079202,55.263157894736835,24.324324324324323,44.73684210526316,71.20760083198547
60,cpp,"Steals the reply from a `DBusPendingCall` handle and wraps it in a new `DBusMessage` object that takes ownership, returning an empty message if the input handle is null","This function converts a raw libdbus pending call object into a DBusMessage object, handling null pointers and managing reference counts.","This function converts a raw libdbus pending call object into a DBusMessage object, handling null pointers and transferring ownership of the libdbus message.",1.9449360692904243,35.294117647058826,4.081632653061225,23.52941176470588,65.80554842948914
61,cpp,Thread-safely deallocates a collection of asynchronous D-Bus message reply handlers by moving them from a protected member list to a local copy before iterating through and deleting each one,"This function safely deletes all pending asynchronous message reply handlers by moving them from a temporary storage vector to a vector for deletion, then iterating and deleting each handler.","This function safely deletes all pending asynchronous message reply handlers by moving them from a temporary storage vector to a vector for deletion, then iterating and deleting each handler to prevent memory leaks.",25.42360345218148,50.0,32.25806451612903,50.0,74.27588105201721
62,cpp,Thread-safely notifies all registered signal handlers of a successful state by invoking their `onSpecificError` callback with a `SUCCESS` status for each associated signal tag,"This function iterates through signal handlers and calls their `onSpecificError` method with a success status for each registered error tag, effectively notifying handlers that previously registered for specific error states that the state has been resolved.","This function iterates through signal handlers and calls their `onSpecificError` method with a success status for each registered error tag, effectively notifying handlers that previously registered for specific error states that the state has been resolved, which is used to clear pending error states.",8.71994169040477,37.68115942028986,20.895522388059703,31.884057971014496,70.17306685447693
63,cpp,"Thread-safely removes a connection, identified by its ID, from an internal collection if it exists","This function removes a connection from a map of connections, protected by a mutex, given a connection ID.","This function removes a connection from a map of connections, protected by a mutex, given a connection ID and ensures thread safety.",7.164684238257436,36.84210526315789,11.11111111111111,26.31578947368421,68.50875616073608
64,cpp,"Handles an incoming D-Bus signal by dispatching it to the appropriate handler for either ""InterfacesAdded"" or ""InterfacesRemoved"" events based on the message's member name","This code handles DBus messages related to instance availability status changes, dispatching them to the appropriate handler function based on whether the message indicates interfaces were added or removed.",This code handles DBus messages indicating changes in instance availability status (interfaces added or removed) and forwards them to a corresponding event handler.,1.760414527137107,16.3265306122449,0.0,12.244897959183673,70.4287588596344
65,cpp,"Retrieves available service instances from a registry, translates the internal D-Bus representation into a vector of `DBusAddress` objects, and populates the provided output vector and status parameter","Retrieves available service instances from a DBus proxy and populates a vector with their addresses, returning a success status if successful.","Retrieves available service instances from a DBus proxy, translates them into a vector of DBus addresses, and returns a success status.",25.749045696496637,53.06122448979592,34.04255319148936,53.06122448979592,77.96544432640076
66,cpp,"Gets the availability status of a service instance by translating its identifier to a D-Bus address and querying a registry, setting the result and a success status in output parameters",This function determines the availability status of a DBus service instance by checking if it's alive in the DBus registry and updates the provided call status and availability status accordingly.,"This function determines the availability status of a DBus service instance by translating a CommonAPI address to a DBus address and checking if the service instance is alive in the DBus registry, updating the provided call status and availability status accordingly.",17.83979728612364,52.77777777777778,25.71428571428572,47.22222222222222,73.16033840179443
67,cpp,"Handles a D-Bus ""InterfacesRemoved"" signal by parsing the object path and interface names, and for any interface matching the one being observed, notifies listeners that its status has changed to ""NOT_AVAILABLE","This function processes a DBus signal indicating the removal of interfaces from a DBus object, updating the local availability status of the observed interface if it matches and the removal was successful.","This function processes a DBus signal indicating the removal of interfaces from a DBus object, updating the local availability status of the observed interface if it matches and the removal was successful, and notifying listeners of the status change.",2.7888419657377455,30.555555555555554,0.0,24.999999999999993,67.352694272995
68,cpp,Notifies listeners of an interface's availability change by translating its D-Bus path and name into a generic CommonAPI address,"This function notifies listeners of a change in the availability status of a DBus interface for a given object path and interface name, translating the DBus address to a common API address before notifying.","This function notifies listeners of a change in the availability status of a DBus interface for a given object path and interface name, translating the DBus address to a common API address before notifying listeners.",3.5438244945230784,42.857142857142854,11.111111111111112,32.14285714285714,79.42377924919128
69,cpp,"Thread-safely schedules a task on the main event loop to notify a newly added listener, passing along its specific subscription details",This function registers a listener with a DBus proxy and schedules a function call to notify the listener when a specific DBus message matching the subscription is received.,"This function registers a listener with a DBus proxy and schedules a function call to notify the listener when a specific DBus message matching the subscription is received, ensuring thread-safe access to the listener list.",3.5438244945230784,34.48275862068966,7.142857142857142,24.137931034482758,65.94568490982056
70,cpp,Thread-safely removes all listeners from an internal collection that match the provided `Subscription` identifier,"This function removes a listener from a set of listeners associated with a specific subscription, ensuring thread safety with a mutex.","This function removes a listener from a set of listeners associated with a specific subscription, ensuring thread safety with a mutex and handling potential iterator invalidation during removal.",1.6338984401221652,23.25581395348837,0.0,13.953488372093023,66.33558869361877
71,cpp,Delegates the registration of a signal state handler for a specific subscription to the underlying connection object,This function adds a signal handler to the DBus proxy connection for a specific subscription.,"This function registers a signal handler with the DBus proxy connection, associating it with a specific subscription ID.",10.079037376973918,45.714285714285715,18.18181818181818,34.285714285714285,73.39246869087219
72,cpp,Handles the result of an asynchronous service instance query by translating the `DBusAddress` list to a string list on success and invoking a final callback with the call status and the translated list,"This function handles the asynchronous callback for retrieving available instances of a DBus proxy, translating the DBus addresses to strings and passing the status and instances to the provided callback function.","This function handles the asynchronous callback for retrieving available instances of a DBus proxy, translating the DBus addresses to strings and passing the status and instances to the provided callback function.",4.0143316162180005,43.75,9.67741935483871,34.375,64.88967537879944
73,cpp,"Dispatches an incoming `DBusMessage` to a registered handler based on its object path and interface, or handles it as a standard introspection request, returning `true` if the message was processed","This function handles incoming DBus messages by routing them to the appropriate DBusInterfaceHandler based on the object path and interface name, or by handling introspection requests if no handler is found.","This function handles incoming DBus messages by routing them to the appropriate DBusInterfaceHandler based on the object path and interface name, or by handling introspection requests if no handler is registered.",10.316014940312371,49.18032786885246,13.559322033898304,36.0655737704918,71.51761054992676
74,cpp,"Registers a D-Bus interface handler for a specific path, returning `false` if the exact handler is already registered, but allowing idempotent registration for standard `ObjectManager` and `Properties` interfaces","This function adds a DBus interface handler to a table of registered objects, checking for duplicates and handling special cases for the `org.freedesktop.DBus.ObjectManager` and `org.freedesktop.DBus.Properties` interfaces.","This function adds a DBus interface handler to a table of registered objects, returning true if the handler was successfully added or is a duplicate of a handler already registered for the `org.freedesktop.DBus.ObjectManager` or `org.freedesktop.DBus.Properties` interface.",3.7016293397402915,39.436619718309856,8.695652173913043,39.436619718309856,68.05457472801208
75,cpp,"Registers a given `DBusInterfaceHandler` to a specific path in a table, returning `true` on success and `false` if the handler is already registered for that path","The function adds a DBusInterfaceHandler to a table of registered objects, associating it with a specific interface path, ensuring that the same handler is not added multiple times for the same interface path.","The function adds a DBusInterfaceHandler to a table of registered objects, associating it with a specific interface path and ensuring that the same handler is not added multiple times for the same interface path.",4.951808955390695,53.333333333333336,17.241379310344826,40.00000000000001,67.54280924797058
78,c,"Constructs and sends a 2-byte UDS positive response to an ECU Reset request, containing the positive response SID and the echoed reset type, over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","This function sends a positive response to a reset request received from a diagnostic client via CAN bus using the isotp protocol, including the reset type in the response payload.","This function sends a positive response to a reset request received from a diagnostic client via CAN bus using the isotp protocol, including the reset type in the response payload.",10.606558151202252,51.42857142857144,23.52941176470588,40.0,73.47290515899658
79,c,"Processes a UDS ECU Reset request, validating the 2-byte message length, sending a positive response before triggering a system reboot for a 'hard reset', and sending a negative response for either an incorrect length or an unsupported reset sub-function","This function handles the UDS ECU reset service, validating the message length, processing a hard reset request by rebooting the system, and returning a negative response for unsupported reset types.","This function handles the UDS ECU reset service, validating the message length and processing a hard reset request by rebooting the system, while returning a negative response for unsupported reset types.",10.459505034172983,55.55555555555556,31.428571428571427,44.44444444444444,77.95361280441284
80,c,"Constructs and sends a 4-byte UDS positive response for a ""Request Download"" service, specifying a maximum block length of 0x00D2, over a CAN bus using the ISO-TP protocol and logging an error on failure","This function sends a positive response to a request download message over ISOTP, indicating a successful request and specifying a block size of 258 bytes.","This function sends a positive response to a request download message over ISOTP, indicating a successful request and specifying a block size of 258 bytes to the requesting ECU.",3.8410024718871028,46.15384615384615,15.873015873015875,36.92307692307693,70.57332396507263
81,c,"Constructs and sends a 2-byte UDS positive response for a Transfer Data request (containing the positive SID and the block sequence counter) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","This function sends a positive transfer data response message via ISOTP to a specified CAN ID, including the block sequence counter in the payload.","This function sends a positive transfer data response message via ISOTP to a specified CAN ID, including the block sequence counter in the payload, using a predefined positive SID.",8.536999163672862,50.0,18.181818181818183,29.411764705882355,70.69312930107117
82,c,"Constructs and sends a 5-byte UDS positive response for the Routine Control service (containing the routine control type, routine ID, and a result code) over a CAN bus via ISO-TP, logging an error if the transmission fails","This function sends a routine control result message via ISOTP to a specified CAN ID, encapsulating the routine ID and result code within the message payload.","This function sends a routine control result message via ISOTP to a specified CAN ID, encapsulating the routine ID and result code within the message payload, using a predefined positive SID.",4.397680144282121,45.714285714285715,17.647058823529413,31.428571428571427,67.59218573570251
83,c,"Constructs and sends a 1-byte UDS positive response for a Transfer Exit request (containing the request SID + 0x40) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails",This function sends a positive response to a request transfer exit UDS service by transmitting a specific SID via the isotp protocol.,This function sends a positive response to a request transfer exit UDS service by transmitting a specific SID via the isotp protocol to a specified CAN ID.,3.3558754676132834,45.16129032258064,10.000000000000002,32.25806451612903,66.52299761772156
85,c,"Searches a predefined `id_mapping` array for a given CAN ID and returns its corresponding index, or `0xff` if the ID is not found","This inline function maps a CAN identifier to a corresponding index within a predefined mapping table, returning the index if found or a default value if not.","This inline function maps a CAN identifier to a corresponding index within a predefined mapping table, returning the index if found or 0xff if not.",4.8044090682757705,53.06122448979592,17.02127659574468,32.6530612244898,75.36548376083374
86,c,"Disables a specific LIN-to-CAN receive filter by clearing its callback pointer, or disables all filters if a special ID is passed, while ignoring out-of-bounds IDs","This function removes a callback function associated with a specific filter ID from the incoming callback array within the LIN2CAN device data structure, effectively disabling message reception for that filter.","This function removes a callback function associated with a specific filter ID from the incoming callback array within the LIN2CAN device data structure, effectively disabling message reception for that filter, or clears all incoming callbacks if the filter ID is equal to the number of translatable addresses.",3.003840258259629,31.57894736842105,5.405405405405405,26.31578947368421,63.83354067802429
87,c,"A LIN driver callback that retrieves a pending outgoing frame from a message queue, copies its data for transmission, invokes a frame-specific completion callback, and returns a boolean indicating if a frame was successfully prepared","This function retrieves a LIN frame from a message queue, copies its data into a provided LIN frame structure, and then calls a user-defined callback function to transmit the frame via CAN.","This function retrieves a LIN frame from a message queue, copies its data into a provided LIN frame structure, and then calls a user-defined callback function to transmit the frame via CAN.",25.562450694362237,49.27536231884058,26.865671641791046,43.47826086956522,75.13720393180847
88,c,"Acts as a LIN-to-CAN gateway callback, translating an incoming LIN frame by using its first data byte's top two bits as an index to find a target CAN ID, constructing a new CAN frame with the translated ID and a payload where those index bits are masked out, and finally invoking a registered handler with the resulting CAN frame",This function translates incoming LIN frames to CAN frames based on a mapping table and calls a registered callback function with the translated CAN frame and user data.,"This function translates incoming LIN frames to CAN frames based on a mapping table and calls a registered callback function with the translated CAN frame and user data, handling invalid LIN IDs and skipping callbacks if none are registered.",3.930398635910037,35.64356435643564,12.121212121212121,23.76237623762376,62.925904989242554
89,c,"Initializes a high-voltage shield by configuring its Output Enable (OE) GPIO, writing a zeroed state to its hardware registers, and then setting the OE pin to enable the device's outputs, logging errors at each step","This function initializes the HV shield device by configuring the output enable GPIO pin, initializing the shield's data registers, updating the shield's configuration, and enabling the shield's output.","This function initializes the HV shield device by configuring the output enable GPIO pin, initializing the shield's data registers, updating the shield's configuration, and enabling the shield's output.",3.7967526377509344,41.1764705882353,6.06060606060606,32.35294117647059,70.08066177368164
90,c,"Sets the gain for a specified DAC (0 or 1) on a high-voltage shield by updating its value in a cached data structure and then calling an update function to write the new configuration to the hardware, returning an error for an invalid DAC index","This function sets the digital-to-analog converter (DAC) gain for a specific shield channel (0 or 1) within a device, updating the device's internal registers and triggering a register update function.","This function sets the digital-to-analog converter (DAC) gain for a specific shield channel (0 or 1) within a device, updating the device's internal registers and triggering a register update function to apply the change.",13.620433943007011,48.19277108433735,17.283950617283953,36.14457831325302,67.83590912818909
91,c,"Enables or disables a specific GPIO output on a high-voltage shield by validating the pin index (0-31), remapping it via a nibble-swap, modifying a cached register bit, and then calling a helper function to write the update to the hardware","This function enables or disables a GPIO output pin by manipulating a bitfield within a register, after validating the input index and adjusting it based on its modulo 8 value.","This function enables or disables a GPIO output pin by manipulating a bitfield within a register, after validating the input index and adjusting it based on its modulo 8 value, and then updating the hardware shield's registers.",7.684244343801992,54.32098765432099,17.72151898734177,37.03703703703704,74.64084029197693
92,c,"A callback function that forwards a received CAN frame from a source device to a destination device (passed via `user_data`) using a non-blocking send operation, logging a debug message on successful queuing or a warning on failure","This function routes CAN frames received on a specific device to another specified device using the `can_send` function, logging success or failure.","This function routes CAN frames received on a specific device to another specified device using the `can_send` function, logging the routing action and any errors encountered.",3.1379040161339966,33.333333333333336,3.125,27.272727272727277,72.9266345500946
93,c,"Configures a CAN message router by iterating through an array of routing entries, adding a receive filter to a source CAN interface for each entry that uses a callback to forward matching frames to a destination interface, and returns an error if any filter registration fails","This function registers multiple CAN router entries by iterating through a provided array, adding each entry's filter to the CAN driver, and associating it with a callback function to forward received messages to a specified destination.","This function registers multiple CAN router entries by iterating through a provided array, adding each entry's filter to the CAN driver, and associating it with a callback function to forward received messages to a specified destination.",6.559746344700531,53.01204819277109,17.283950617283953,40.96385542168674,75.56557059288025
94,c,"Initializes the CAN router by iterating through all statically-defined routing tables found in a dedicated linker section and registering their entries, returning an error if any registration fails",This function initializes the CAN router by iterating through a predefined table of CAN router entries and registering each entry with the CAN router subsystem.,This function initializes the CAN router by registering each entry from a predefined table of CAN router entries with the CAN router subsystem.,9.197907595223693,30.76923076923077,16.0,26.923076923076923,70.02180814743042
95,c,"Iterates through a pre-configured list of low-voltage GPIOs, setting the state of each pin enabled by an input mask to the corresponding bit in a value word, logging and returning an error if any underlying GPIO operation fails","This function sets the specified bits of a GPIO mask to a given value on a given port, iterating through the configured low-voltage GPIO pins and calling the underlying GPIO driver to set each pin individually.","This function sets the specified bits of a GPIO mask to a given value on a given port, iterating through the configured low-voltage GPIO pins and calling the underlying GPIO driver to set each pin individually, returning an error code if any pin fails to set.",6.069305815385413,52.87356321839081,16.470588235294116,29.88505747126437,74.82379674911499
96,c,"Populates an output parameter with the number of available Abstract LIN callback slots, calculated by subtracting the used count from a configured maximum, returning an error if the parameter is a null pointer",This function calculates and returns the number of free callback slots available for a given abstract LIN device by subtracting the number of used callbacks from the maximum number of callbacks.,This function determines and returns the number of free callback slots for a given abstract LIN device by subtracting the number of currently used callbacks from the configured maximum.,9.155202435954566,51.61290322580646,23.333333333333332,38.70967741935484,72.97511696815491
97,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","This function registers a callback function to be invoked when a LIN message with a specific frame ID and size is received, storing the callback and associated data within a device's abstract LIN data structure.","This function registers a callback function to be invoked when a LIN message with a specific frame ID and size is received, storing the callback and associated data within a device's abstract LIN data structure, and returning an error code if the input parameters are invalid.",7.525333477952617,51.11111111111111,18.18181818181818,37.77777777777778,69.42724585533142
98,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","This function registers an outgoing callback function for a specific LIN frame ID and size within a device's abstract LIN data structure, handling error conditions and allocating a callback slot.","This function registers an outgoing callback function for a specific LIN frame ID and size within a device's abstract LIN data structure, allocating a callback slot and returning an error code if registration fails.",19.156591943728042,53.84615384615383,31.578947368421055,48.717948717948715,72.26054668426514
99,c,"Sets the active LIN schedule table by index, first validating the index and then using a semaphore to thread-safely update the scheduler's state and reset its entry pointer to the start of the new table","This function sets the active table index for a given abstract LIN scheduler, ensuring only one table is active at a time by using a semaphore and resetting the current entry index to 0.","This function sets the active table index for a given abstract LIN scheduler, ensuring only one table is active at a time by using a semaphore and resetting the current entry index to 0, returning an error if the table index is invalid.",5.051404836575572,45.0,10.256410256410255,35.0,68.60939860343933
100,c,"Disables a LIN scheduler by first checking if it's already stopped, then taking a semaphore to safely wait for the current operation to complete before setting the active schedule table index to -1","This function disables a LIN scheduler by setting its current table index to -1 and releasing a semaphore, ensuring no further messages are processed.","This function disables a LIN scheduler by setting its current table index to -1 and releasing a semaphore, preventing further message processing.",15.238125546095489,46.42857142857142,29.629629629629626,35.714285714285715,73.18714261054993
