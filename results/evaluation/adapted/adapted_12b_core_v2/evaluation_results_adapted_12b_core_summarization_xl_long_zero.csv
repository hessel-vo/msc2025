id,language,reference,generated,generated_rci,bleu_score,rouge1,rouge2,rougeL,bertscore_f1
2,python,"Raises an exception if the specified 'datatype' is unsupported, otherwise retrieves that type's validation function and returns the boolean result of calling it with the provided 'value'",This function checks if a given value conforms to a specified datatype by retrieving the corresponding type object and applying it to the value.,This function validates if a value matches a specified datatype by using a type checker associated with that datatype.,2.172894981473447,38.46153846153846,3.9999999999999996,30.769230769230766,67.43989586830139
3,python,"Validates that a given value, or each value in a list, is an integer that fits within the numerical range defined by a specified bit-width and signedness","This function checks if a given integer or list of integers falls within a specified range, considering whether the integers are signed or unsigned and the number of bits.","This function validates if an integer or a list of integers is within a specified range, accounting for signedness and bit width constraints.",4.464476787351278,38.59649122807017,7.2727272727272725,28.070175438596497,74.47229623794556
4,python,"Returns the type definition tuple from a class-level list of types that matches the provided 'datatype' name, or returns None if no match is found","This function retrieves a tuple containing the datatype name, its corresponding callable, and a list of allowed values from a class's `types` attribute, given a specified datatype string, or returns `None` if the datatype is not found.","This function searches a class's `types` attribute for a matching datatype string and returns its associated callable and allowed values as a tuple, or `None` if no match is found.",5.6531710785114235,53.125,22.580645161290324,37.49999999999999,70.02816796302795
5,python,Returns a dictionary mapping the short name to the full FQN for all dynamic datatypes that exist in the same namespace as the provided FQN,"This function identifies and returns a dictionary of namespaced datatypes from a list, based on whether a given fully qualified name (FQN) starts with a prefix of those datatypes.","This function identifies and returns a dictionary of namespaced datatypes from a list, based on whether a given fully qualified name (FQN) is a prefix of those datatypes.",2.8244460759801417,22.222222222222225,7.692307692307692,22.222222222222225,62.319666147232056
7,python,"Parses a type string to create an `ApiGearType` object, mapping common primitive types to their ApiGear equivalents, sanitizing custom type names by replacing dots with underscores, and setting an array flag based on a ""[]"" suffix","This function maps a string representation of a data type (e.g., ""int32"", ""string"", ""double[]"") to an `ApiGearType` object, handling basic types, floating-point types, booleans, strings, and arrays.","This function maps a string representation of a data type (e.g., ""int32"", ""string"", ""double[]"") to an `ApiGearType` object, handling basic types, floating-point types, booleans, strings, and array types.",13.96334078126047,31.25,6.451612903225808,28.125,63.27149271965027
8,python,"Creates an `ApiGearProperty` by converting the VSS node's datatype to a supported ApiGear type and copying its description, returning `None` and logging a warning if the datatype is not supported","This function generates an `ApiGearProperty` object from a `VSSNode` and a specified datatype, populating its type and description if available.","This function creates an `ApiGearProperty` object from a `VSSNode` and a datatype, setting the property type and description based on the node's data.",10.279788556185165,43.13725490196079,8.16326530612245,27.45098039215686,68.0887758731842
10,python,"Loads and parses multiple VSpec files from specified paths, using a list of include directories, then merges them into a single composite VSpec object and returns it, raising an exception if no files are successfully loaded","This function loads and merges multiple VSpec files (specified by paths) along with any specified include directories into a single VSpec object, logging the process and raising an exception if no specs are loaded.","This function loads and merges multiple VSpec files (specified by paths) and their included files, combining them into a single VSpec object while logging the process and raising an exception if no specs are loaded.",18.489032693507628,65.71428571428571,32.35294117647059,62.85714285714287,81.65375590324402
11,python,"Recursively updates a 'base' dictionary with an 'update' dictionary, merging nested dictionaries for common keys and overwriting or adding all other key-value pairs","The function `deep_update` recursively merges a dictionary `update` into a base dictionary `base`, updating nested dictionaries and overwriting non-dictionary values.","The function `deep_update` recursively merges a dictionary `update` into a base dictionary `base`, updating nested dictionaries and overwriting non-dictionary values in place.",4.175872565419194,43.47826086956522,18.18181818181818,39.13043478260869,69.01875138282776
12,python,"Asserts that the input value, if not None, is a valid 'constUID' formatted as an 8-digit hexadecimal string prefixed with '0x', returning the value if the check passes","This function validates if a given string is a valid hexadecimal constant UID (e.g., ""0x12345678"") and returns the string if valid, otherwise returns None.","This function validates if a given string conforms to the format of a hexadecimal constant UID (e.g., ""0x12345678"") and returns the string if valid, raising an assertion error otherwise.",5.606890040543068,33.33333333333333,7.692307692307692,25.925925925925924,69.72294449806213
13,python,"Initializes a VSSRaw model and attempts to resolve it, returning the successfully resolved model or the original unresolved model if resolution fails due to a validation or model error","This function attempts to create and resolve a `VSSRaw` model from a dictionary of data and an optional fully qualified name, returning the resolved model or an incomplete initialized model if resolution fails.","This function creates a `VSSRaw` model from input data and an optional fully qualified name, attempting to resolve it and returning either the resolved model or an initialized, incomplete model if resolution fails.",13.806793337356849,54.83870967741935,30.000000000000004,41.935483870967744,76.09555721282959
14,python,"Asserts that each string in the input list is a valid datatype by checking against a master list, returning the original list if all values are valid","This function validates a list of datatypes against a predefined set of valid datatypes, raising an assertion error if any invalid datatypes are found.","This function validates a list of datatypes, raising an assertion error if any are not present in a predefined set of valid datatypes.",3.7833770368137887,27.450980392156865,4.081632653061225,19.607843137254903,65.32988548278809
15,python,"Traverses a VSSNode tree to generate a formatted string, displaying each node's name followed by the values of any specified attributes found on it","This function recursively traverses a tree structure (VSSNode) and generates a string representation of the tree, including node names and specified attributes, formatted for readability.","This function recursively traverses a tree structure (VSSNode) and generates a string representation of the tree, including node names and specified attributes, formatted for display.",3.8024666395186095,48.0,8.333333333333332,32.0,77.54742503166199
16,python,"Recursively traverses up the parent hierarchy to find and return the first non-instance ancestor node and the traversal depth, raising an exception if the starting node is not a branch or if no root is found","This function recursively traverses up the VSS tree to find the root instance node, returning the root node and the depth of the traversal.","This function recursively traverses up the VSS tree to find the root instance node, returning the root node and the depth of the traversal, raising an exception if no root is found.",8.243422240939342,52.459016393442624,23.728813559322038,42.62295081967213,73.64577651023865
17,python,Recursively calculates the depth of the first-found branch of children where each node is a `VSSDataBranch` with its `is_instance` flag set,Recursively counts the depth of instance children within a VSSDataBranch structure.,"Recursively counts the depth of instance children within a VSSDataBranch structure, returning 0 if no instance children are found.",4.615303701101561,47.05882352941176,18.749999999999996,41.1764705882353,76.06025338172913
18,python,Returns a list of node IDs from an input list whose expected parent's name matches the provided `name`,The function `find_children_ids` identifies and returns a list of node IDs whose expected parent is a specified name.,The function `find_children_ids` identifies and returns a list of node IDs that have a specified name as their expected parent.,17.729842264695016,56.41025641025641,37.83783783783783,51.28205128205129,71.99259400367737
19,python,"Retrieves an attribute from an object, returning a specified default value if the attribute is missing or its value is `None`","This function safely retrieves an attribute from an object, returning a default value if the attribute is not found or is None.","This function safely retrieves an attribute from an object, returning a specified default value if the attribute is not found or is None.",50.296153790170834,79.06976744186046,63.41463414634146,79.06976744186046,85.42442917823792
20,python,Generates a `proto3` file from a VSS tree by first writing import statements for complex data types and then converting each branch in the tree into a corresponding protobuf message,"This function traverses a VSS signal tree, extracts data types, generates necessary import statements for protobuf messages, and writes the protobuf message definitions to a file, including fields based on signal data and optionality settings.","This function traverses a VSS signal tree, extracts data types, generates necessary import statements for protobuf messages, and writes the protobuf message definitions to a file, including fields based on signal data and optionality settings, to create a .proto file.",6.320326752750678,46.15384615384615,15.873015873015872,30.769230769230766,67.23920106887817
21,python,"Traverses a VSS tree to find all terminal instance branches, grouping their relative names into a dictionary where each key is the fully qualified name of the original branch they instantiate","This function extracts and organizes instance names from a VSS tree structure, grouping them by their root instance to create a dictionary mapping root instance fully qualified names to lists of their child instance names.","This function extracts instance names from a VSS tree, grouping them by their root instance to create a dictionary mapping root instance fully qualified names to lists of their child instance names, excluding instances with further nested instances.",6.854948786792654,39.3939393939394,12.5,30.303030303030297,67.49013066291809
22,python,Checks if a given VSSNode is a leaf by verifying its 'data' attribute is an instance of VSSDataDatatype,This function checks if a given VSS node is a leaf node by verifying if its data attribute is an instance of the VSSDataDatatype class.,This function determines if a VSS node represents a leaf node by checking if its 'data' attribute holds a VSS data datatype.,24.76682488899512,79.06976744186048,58.536585365853654,79.06976744186048,87.32151985168457
23,python,Returns `True` if the given `VSSNode`'s data is a `VSSDataBranch` and its `is_instance` attribute is `False`,This function checks if a given VSS node represents a branch with a non-instance data type within a VSS data structure.,This function determines if a VSS node is a branch node containing non-instance data.,1.7769655303073733,25.0,0.0,20.0,63.02952170372009
24,python,Returns True if the node's data is a VSSDataBranch and its 'is_instance' attribute is True,This function checks if a given VSSNode represents an instance of a VSSDataBranch by verifying if its data is a VSSDataBranch and if that branch is marked as an instance.,This function determines if a VSSNode represents an instance of a VSSDataBranch by checking if its data is a VSSDataBranch and if the branch's `is_instance` attribute is True.,12.627447243144081,38.297872340425535,17.77777777777778,34.04255319148936,64.6590530872345
25,python,"Calculates a 32-bit FNV-1 hash for a given byte string by iterating through each byte, multiplying the current hash by the FNV prime, and then performing a bitwise XOR with the byte",This function calculates a 32-bit FNV-1a hash value for a given byte string using a specific prime number and bitwise operations.,This function computes a 32-bit FNV-1a hash value for a byte string using a prime number and bitwise operations to ensure a uniform distribution of hash values.,16.712323335829016,52.63157894736842,29.09090909090909,49.12280701754386,74.35693144798279
28,java,"Inflates the `card_fragment` layout, finds and assigns the card's title and icon views, and returns the resulting root view","This method inflates a layout (`card_fragment`) to create a view, finds the title and icon elements within that layout, and returns the inflated view.","This method inflates a layout (`card_fragment`) to create a view, retrieves references to the title and icon elements within that layout, and returns the inflated view.",24.19590168768359,56.52173913043478,22.727272727272727,52.17391304347826,77.50517129898071
29,java,"Updates an `ImageButton`'s icon and click listener from a content object and makes it visible, or hides the button if the content is null",This method updates the visibility and properties (icon and click listener) of an `ImageButton` based on the presence and content of a `DescriptiveTextWithControlsView.Control` object.,"This method updates an `ImageButton`'s icon, click listener, and visibility based on the provided `DescriptiveTextWithControlsView.Control` object.",16.17355916490619,52.0,16.666666666666664,28.000000000000004,68.64607334136963
30,java,"Lazily inflates a `ViewStub` to create a descriptive text layout, caches references to its child views (title, subtitle, image), and returns the inflated layout","This method lazily initializes and returns a `View` containing descriptive text elements (title, subtitle, optional image, and ""tap for more"" text) if it hasn't been initialized already, inflating it from a `ViewStub` within the root view.","This method lazily initializes and returns a `View` containing descriptive text elements (title, subtitle, optional image, and ""tap for more"" text) if it hasn't been initialized already, inflating it from a `ViewStub` within the root view and caching the inflated view for subsequent use.",15.386433467615534,39.34426229508197,16.94915254237288,29.50819672131148,70.65399885177612
31,java,Updates the header view on the main UI thread by making its root view visible and setting the card's title and icon from the provided `CardHeader` object,This method updates the visibility of a root view and the text/icon of a card title within the UI thread using `runOnUiThread` to ensure thread safety.,"This method updates the card title and icon in the UI thread using `runOnUiThread` to ensure thread safety, making the card header visible.",4.464476787351278,43.63636363636363,11.320754716981133,32.72727272727273,68.56967806816101
32,java,"Lazily inflates a `ViewStub` to create and return the text block layout view, while also finding and caching references to its child text views on the first call","This method lazily initializes and returns a `View` representing a text block layout, inflating it from a `ViewStub` if it hasn't been created yet and retrieving references to its child views.","This method lazily initializes and returns a `View` representing a text block layout, inflating it from a `ViewStub` if it hasn't been created yet and retrieving references to its child views for later use.",16.587560311800353,46.666666666666664,20.689655172413794,36.66666666666667,74.69501495361328
33,java,"Queries the `PackageManager` for a `MediaBrowserService` within a given package and returns a `ComponentName` for the first one found, or `null` if none exist",This Java code retrieves the default MediaBrowserService component name for a given package by querying the PackageManager for services that respond to the MediaBrowserService interface.,"This Java code retrieves the default MediaBrowserService component name for a given package by querying the PackageManager for services that respond to the MediaBrowserService interface, returning null if no such service is found.",5.983356725582991,36.734693877551024,21.27659574468085,28.57142857142857,68.30663681030273
34,java,"Determines if a component should be added to a launchable list, returning `false` if its package is explicitly hidden or if it's a custom media component and launchable apps are also being shown, otherwise returning `true` for valid launchable or media service types","This method determines whether a given component should be added to the launchables list based on whether its package is hidden, its type (media service or launchable), and whether custom media components are being considered.","This method determines whether a given component should be added to the launchables list based on whether its package is hidden, its type (media service or launchable), and whether custom media components are being considered, returning `false` if it should be excluded.",12.71033290229877,53.16455696202532,20.77922077922078,43.03797468354431,70.68106532096863
35,java,"Sets the car's media source to a given component in browse mode and finishes the context if it's an Activity, catching and logging a `CarNotConnectedException` if the car service is unavailable","This method selects a media source and finishes the current activity, handling potential connection errors with the car media manager.","This method sets the media source to browse mode and finishes the activity, gracefully handling car connection errors.",5.832084852430481,33.9622641509434,15.686274509803921,30.188679245283023,66.153883934021
36,java,"Safely checks if a given activity is distraction optimized using the `CarPackageManager`, returning `false` and logging an error if the manager is null or a `CarNotConnectedException` is caught","This method checks if a specified activity within a given package is optimized for distraction-free operation using a CarPackageManager, handling potential CarNotConnectedExceptions.","This method determines if a specified activity within a given package is optimized for distraction-free operation by querying a CarPackageManager, gracefully handling CarNotConnectedExceptions.",5.671188532748856,43.13725490196078,12.244897959183673,31.372549019607842,72.77594804763794
38,java,"Retrieves a specific, resolvable map `Intent` from a configured list if it matches the system's default map app, otherwise falls back to a generic `Intent` for any map application","This method retrieves the preferred map application intent, prioritizing user-defined preferences from a configuration array while falling back to the system default if no suitable preferred app is found.","This method retrieves the preferred map application intent, prioritizing user-defined preferences from a configuration array, and returning the system default if no preferred app is found or if the preferred app is invalid.",4.249210501355279,43.333333333333336,13.793103448275861,30.0,62.864309549331665
39,java,"Lazily initializes a set of `HomeCardModule`s by reflectively instantiating class names from a configuration array, and then uses a `FragmentTransaction` to add each module's card view to the UI layout","This method dynamically instantiates and initializes `HomeCardModule` objects based on a list of class names defined in a resource array, adds them to a set, and then replaces fragments in the activity's layout with the corresponding card views from each module.","This method dynamically instantiates and initializes `HomeCardModule` objects based on a list of class names defined in a resource array, adds them to a set, and then replaces fragments in the activity's layout with the corresponding card views from each module, logging the instantiation time for debugging purposes.",7.827200599910322,54.05405405405405,11.11111111111111,29.72972972972973,76.58514380455017
40,java,"Iterates through a list of appeared tasks and uses the `ActivityTaskManager` to remove any task that is in multi-window mode, logging it as a dangling task","This code iterates through a list of task appearance information, identifies tasks running in multi-window mode, and removes them from the activity task manager to clean up dangling tasks.","This code iterates through a list of task appearance information, identifies tasks running in multi-window mode, and removes them from the activity task manager to clean up dangling tasks.",16.995165296029043,56.14035087719299,25.454545454545453,38.59649122807017,77.5756299495697
41,java,Parses the mode from the current Intent and sets the title for both the Activity and the CarUi toolbar using the string resource ID defined in that mode,"This method updates the application's mode based on intent data, setting the title of both the activity and the toolbar accordingly.",This method updates the application's mode based on intent data and sets the title of the activity and toolbar to reflect the new mode.,5.079332562277693,44.0,20.833333333333336,44.0,72.22679853439331
42,java,"Lazily initializes and returns a `Chronometer` by finding it in the layout, while also finding and caching its associated separator view on the first call","This method lazily initializes and returns a `Chronometer` view (and its separator) from the layout if it hasn't been initialized already, ensuring it's only created when needed.","This method lazily retrieves a `Chronometer` view and its separator from the layout, initializing them only if they haven't been previously.",21.5039433364294,48.148148148148145,23.076923076923077,37.03703703703704,67.9976224899292
43,java,"Lazily inflates a media layout from a `ViewStub`, finds and caches its title and subtitle views, initializes its media playback controls bar via a presenter, and returns the inflated view","This method lazily initializes and returns a `View` representing the media layout, inflating it from a `ViewStub` if it doesn't already exist, and setting up its title, subtitle, and playback controls.","This method lazily initializes and returns a `View` representing the media layout, inflating it from a `ViewStub` if it doesn't already exist, and initializing the presenter with the media control bar.",15.25550646901549,61.29032258064516,20.0,41.935483870967744,70.90117931365967
44,java,"If a valid `Drawable` and card size are provided, this method scales the image to a square based on the card's largest dimension, blurs it, and sets the resulting bitmap as the animated, visible card background","This method updates the background image of a card view by scaling a provided drawable to a square size, blurring it, and setting it as the card's background image with a visual animation.","This method updates the card's background image by scaling a provided drawable to a square size, blurring it, and setting it as the card's background image.",7.913756344608169,53.521126760563384,20.289855072463766,36.61971830985916,72.53071665763855
45,java,Makes the media layout view visible and updates its title and subtitle with the provided text,This method updates the visibility and text content of a media layout view with a given title and subtitle.,This method updates the visibility and text content of a media layout view to display a given title and subtitle.,13.947196297357515,62.857142857142854,24.24242424242424,40.0,78.92115116119385
46,java,"If the content's start time is positive, this method makes a chronometer and a separator visible, sets the chronometer's base time, and starts it; otherwise, it hides both views","This method updates the visibility and state of a chronometer and separator based on the start time of a descriptive text view, displaying a timer if the start time is positive and hiding them otherwise.","This method controls the visibility of a chronometer and separator based on the start time of a descriptive text view, showing a timer if the start time is positive and hiding them otherwise.",11.092770141728163,51.515151515151516,21.874999999999996,30.303030303030297,72.39289879798889
47,java,Registers a member callback to the provided `Call` object after verifying it is not null,Registers a callback to a newly added `Call` object to receive updates related to its state.,"Registers a callback on a newly added `Call` object to receive updates related to its state, if the `Call` object is not null.",17.12473044894657,38.70967741935484,20.689655172413797,38.70967741935484,73.6564040184021
48,java,"Handles the removal of a call by clearing the current call and card content, notifying the presenter of the model update, and unregistering its callback from the call object for cleanup","This method handles the removal of a call by clearing call-related data, notifying the presenter of the update, and unregistering a callback from the removed call.","This method handles the removal of a call by clearing call-related data, notifying the presenter of the update, and unregistering a callback to prevent further updates.",42.489014208997496,72.41379310344827,53.57142857142857,72.41379310344827,82.21784830093384
49,java,"Formats a phone number to create a new `DescriptiveTextWithControlsView` with call details and controls, then notifies the presenter that the model has been updated","This method formats a phone number and updates the UI with the formatted number, ongoing call subtitle, elapsed time, and call control buttons, then notifies the presenter of the model update.","This method formats a phone number, updates the UI with the formatted number and associated call information (subtitle, elapsed time, and call control buttons), and notifies the presenter of the model update.",15.064058526395474,47.27272727272728,26.415094339622634,47.27272727272728,73.52315187454224
50,java,"Initializes mute, end call, and dialpad buttons by assigning each an icon and a click listener to toggle mute status, disconnect the current call, and delegate to an onClick handler, respectively","Initializes audio control buttons (mute, end call, and dialpad) within a view, assigning icons and associated actions to each button.","Initializes audio control buttons (mute, end call, and dialpad) within a view, assigning icons and associated actions to each button to manage call muting, disconnection, and dialpad access.",18.116265570878042,47.05882352941176,16.3265306122449,35.29411764705882,70.34546732902527
53,cpp,"When a new listener is added, this callback immediately notifies it with an `AVAILABLE` status if the D-Bus connection is already active",This function notifies a listener of the availability status (AVAILABLE) if a DBus connection is established when a new listener is added to a subscription.,This function notifies a listener of the availability status (AVAILABLE) if a DBus connection is active when a listener is added to a subscription.,16.451929399933107,58.333333333333336,26.08695652173913,24.999999999999993,74.20702576637268
54,cpp,"Atomically registers a given thread to be joined later by adding it to a list, but only if its associated connection is active and the thread is not already present in the list","The function `joinOnExit` adds a thread pointer to a vector of threads to be joined upon exit, if a connection already exists for the given connection identifier.","The function `joinOnExit` adds a thread pointer to a vector of threads to be joined upon exit, but only if a corresponding connection already exists.",6.470985253771001,43.33333333333332,10.344827586206897,30.0,62.148648500442505
56,cpp,A callback function that handles the removal of a D-Bus watch by stopping its monitoring and disassociating the high-level wrapper object from the underlying `libdbus` watch,This function handles the removal of a DBus watch by stopping its monitoring if it's ready and clearing its associated data.,"This function handles the removal of a DBus watch, stopping its monitoring if active and clearing its associated data within the DBus connection.",25.76738082134706,47.99999999999999,33.33333333333333,47.99999999999999,75.53243041038513
57,cpp,"Handles the toggling of a D-Bus watch by creating a C++ wrapper object for it on first use, and then starting or stopping its monitoring based on its readiness status","This function manages a DBus watch object, either creating it and starting it if it doesn't exist or stopping it and removing it if it does, based on the watch context's state and readiness.","This function manages a DBus watch object, creating and starting it if it doesn't exist or stopping and removing it if it does, based on the watch context's state and readiness to be watched.",3.854820984876957,38.80597014925373,6.153846153846153,32.83582089552239,69.2857563495636
58,cpp,"Lazily initializes and returns a thread-safe, singleton `DBusObjectManager` instance using a double-checked locking pattern","This code lazily initializes and returns a shared pointer to a `DBusObjectManager` instance, ensuring thread-safe access via a mutex.","This code lazily initializes and returns a shared pointer to a `DBusObjectManager` instance, ensuring thread-safe access via a mutex and memoization.",22.325877055095216,55.55555555555556,35.294117647058826,44.44444444444445,79.37459945678711
59,cpp,"Decrements a reference count for a given D-Bus service name, releasing it from the bus if the count reaches zero, and returns `true` on success or `false` if the name was not being tracked","This function releases a service name from the D-Bus connection, decrementing its usage count and calling `dbus_bus_release_name` if the count reaches zero, returning true if the release was successful.","This function releases a service name from the D-Bus connection, decrementing its usage count and calling `dbus_bus_release_name` if the count reaches zero, returning true if the release was successful or if the service name was already released.",19.39714987131101,58.823529411764696,24.242424242424242,44.11764705882353,72.13531136512756
60,cpp,"Steals the reply from a `DBusPendingCall` handle and wraps it in a new `DBusMessage` object that takes ownership, returning an empty message if the input handle is null","This function converts a raw libdbus pending call reply into a DBusMessage object, handling null input and managing reference counts.","This function converts a raw libdbus pending call reply into a DBusMessage object, returning an empty message on null input and managing reference counts.",1.8145210045208087,33.33333333333333,4.3478260869565215,20.833333333333332,66.52687788009644
61,cpp,Thread-safely deallocates a collection of asynchronous D-Bus message reply handlers by moving them from a protected member list to a local copy before iterating through and deleting each one,This function safely deletes all asynchronous handler objects stored in a vector by atomically moving them to a temporary vector and then iterating through the temporary vector to delete each handler.,"This function safely deletes all asynchronous handler objects stored in a vector by atomically moving them to a temporary vector and then iterating through the temporary vector to delete each handler, ensuring thread safety.",4.675717426596493,38.70967741935484,10.000000000000002,32.25806451612903,72.03903198242188
62,cpp,Thread-safely notifies all registered signal handlers of a successful state by invoking their `onSpecificError` callback with a `SUCCESS` status for each associated signal tag,"This function iterates through registered signal handlers and calls their `onSpecificError` method with a success status for each registered error tag, effectively notifying handlers that previously pending error states have resolved.","This function iterates through registered signal handlers and calls their `onSpecificError` method with a success status for each registered error tag, effectively notifying handlers that previously pending error states have resolved, likely after a timeout or other condition.",13.488716059173196,42.857142857142854,29.629629629629626,42.857142857142854,74.3761956691742
63,cpp,"Thread-safely removes a connection, identified by its ID, from an internal collection if it exists","This function removes a connection from a map of connections, protected by a mutex, given a connection ID.","This function removes a connection from a map of connections, protected by a mutex, given a connection ID, ensuring thread safety.",8.638804535733371,35.294117647058826,12.5,29.411764705882355,68.08578372001648
64,cpp,"Handles an incoming D-Bus signal by dispatching it to the appropriate handler for either ""InterfacesAdded"" or ""InterfacesRemoved"" events based on the message's member name","This code handles DBus messages related to instance availability status changes, dispatching them to a corresponding event handler based on whether the message indicates interfaces were added or removed.","This code handles DBus messages indicating changes in instance availability status, routing ""InterfacesAdded"" messages to an ""onInterfacesAddedSignal"" handler and ""InterfacesRemoved"" messages to an ""onInterfacesRemovedSignal"" handler.",3.2808945250121395,32.72727272727273,7.547169811320756,29.090909090909093,72.10107445716858
65,cpp,"Retrieves available service instances from a registry, translates the internal D-Bus representation into a vector of `DBusAddress` objects, and populates the provided output vector and status parameter","This function retrieves available DBus service instances for a given service and object path, populates a vector with their addresses, and sets the call status to success.","This function retrieves available DBus service instances for a given service and object path, populates a vector with their DBus addresses, and sets the call status to success.",5.04669327513025,43.63636363636363,11.320754716981133,36.36363636363637,74.86004829406738
66,cpp,"Gets the availability status of a service instance by translating its identifier to a D-Bus address and querying a registry, setting the result and a success status in output parameters",This function determines the availability status of a DBus service instance by translating a common API address to a DBus address and checking if the service instance is alive in the DBus registry.,This function determines the availability status of a DBus service instance by translating a common API address to a DBus address and querying the DBus registry to check if the service instance is alive.,21.30931749764531,53.125,29.032258064516125,46.87499999999999,72.29390740394592
67,cpp,"Handles a D-Bus ""InterfacesRemoved"" signal by parsing the object path and interface names, and for any interface matching the one being observed, notifies listeners that its status has changed to ""NOT_AVAILABLE","This function handles the `InterfacesRemoved` signal from the DBus bus, removing specified interfaces from a managed DBus proxy if the removed interface matches the observed interface and notifying listeners of the status change to `NOT_AVAILABLE`.","This function handles the `InterfacesRemoved` signal from the DBus bus, removing a specified interface from a managed DBus proxy if it matches the observed interface and notifying listeners of the status change to `NOT_AVAILABLE`.",4.8210273709472755,46.3768115942029,8.955223880597014,34.78260869565217,76.75071954727173
68,cpp,Notifies listeners of an interface's availability change by translating its D-Bus path and name into a generic CommonAPI address,This function translates a DBus address to a common API address and notifies listeners about a change in the availability status of a specific DBus interface.,"This function translates a DBus address to a common API address and notifies listeners about a change in the availability status of a DBus interface, using the provided object path, interface name, and availability status.",2.2573943092420103,38.297872340425535,4.444444444444445,17.02127659574468,77.8288185596466
69,cpp,"Thread-safely schedules a task on the main event loop to notify a newly added listener, passing along its specific subscription details",This function registers a listener with a DBus proxy and schedules a function to notify that listener whenever a specific DBus message matching the subscription is received.,This function registers a listener with a DBus proxy and schedules a function to notify that listener on the main loop whenever a specific DBus message matching the subscription is received.,4.625799890348224,36.73469387755102,8.51063829787234,28.57142857142857,63.52871060371399
70,cpp,Thread-safely removes all listeners from an internal collection that match the provided `Subscription` identifier,"This function removes a listener from a collection of listeners associated with a specific subscription, ensuring thread safety with a mutex.","This function removes a listener from a collection of listeners associated with a specific subscription, ensuring thread safety with a mutex and handling potential iterator invalidation during removal.",2.328734903585348,33.33333333333333,0.0,22.22222222222222,70.30141949653625
71,cpp,Delegates the registration of a signal state handler for a specific subscription to the underlying connection object,This function registers a signal handler with the DBus connection for a specific subscription.,This function adds a signal handler to the DBus connection's state management for a given subscription.,18.94921484932961,58.06451612903226,27.586206896551722,45.16129032258064,77.78990864753723
72,cpp,Handles the result of an asynchronous service instance query by translating the `DBusAddress` list to a string list on success and invoking a final callback with the call status and the translated list,"This function handles the asynchronous callback for retrieving available instances of a DBus proxy, translating the DBus addresses to strings and passing the status and instances to the provided callback function.","This function handles the asynchronous callback for retrieving available instances of a DBus proxy, translating DBus addresses to strings and invoking the provided callback with the status and instances.",4.0143316162180005,43.75,9.67741935483871,34.375,64.88968133926392
73,cpp,"Dispatches an incoming `DBusMessage` to a registered handler based on its object path and interface, or handles it as a standard introspection request, returning `true` if the message was processed","This function handles incoming DBus messages by routing them to the appropriate registered DBus interface handler based on the object path and interface name, or by handling introspection requests if no handler is found.","This function handles incoming DBus messages by routing them to the appropriate registered DBus interface handler based on the object path and interface name, or by handling introspection requests if no handler is found, returning a boolean indicating whether the message was handled.",11.946956198554656,46.875,16.12903225806452,40.625,71.64134383201599
74,cpp,"Registers a D-Bus interface handler for a specific path, returning `false` if the exact handler is already registered, but allowing idempotent registration for standard `ObjectManager` and `Properties` interfaces","This function adds a DBus interface handler to a table of registered objects, checking for duplicates and handling special cases for standard DBus interfaces.","This function adds a DBus interface handler to a table of registered objects, preventing duplicates and allowing existing handlers for standard DBus interfaces (ObjectManager and Properties) to be ignored.",3.581654795518177,37.735849056603776,7.8431372549019605,30.18867924528302,63.517725467681885
75,cpp,"Registers a given `DBusInterfaceHandler` to a specific path in a table, returning `true` on success and `false` if the handler is already registered for that path","This function adds a DBusInterfaceHandler to a table of registered objects, keyed by interface path, ensuring no duplicates are added and returning true on success or false if the handler already exists.","This function adds a DBusInterfaceHandler to a table of registered objects, keyed by interface path, and returns true if the handler was successfully added (or already present) and false otherwise.",7.735714064829008,58.62068965517242,32.14285714285714,48.275862068965516,76.08845233917236
78,c,"Constructs and sends a 2-byte UDS positive response to an ECU Reset request, containing the positive response SID and the echoed reset type, over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","This function sends a positive response to an ECU reset request via ISOTP, using a predefined SID and the provided reset type, logging any errors encountered during transmission.","This function sends a positive response to an ECU reset request via ISOTP, using a predefined SID and the provided reset type, and logs any errors encountered during transmission.",15.207739433223802,52.94117647058824,30.303030303030305,47.05882352941176,76.04148387908936
79,c,"Processes a UDS ECU Reset request, validating the 2-byte message length, sending a positive response before triggering a system reboot for a 'hard reset', and sending a negative response for either an incorrect length or an unsupported reset sub-function","This function handles an ECU reset request, responding with an error if the message length is incorrect, performing a hard reset (reboot) if the reset type is hard, or returning a negative response if the reset type is unsupported.","This function handles an ECU reset request, responding with an error if the message length is incorrect or the reset type is unsupported, and initiating a hard reset (reboot) if the reset type is hard.",5.709527447595083,50.0,17.94871794871795,32.49999999999999,73.02300333976746
80,c,"Constructs and sends a 4-byte UDS positive response for a ""Request Download"" service, specifying a maximum block length of 0x00D2, over a CAN bus using the ISO-TP protocol and logging an error on failure","This function sends a positive response to a request download request via ISOTP, including a block size of 258 bytes, to a specified CAN ID.","This function sends a positive response to a request download request via ISOTP, including a block size of 258 bytes, to a specified CAN ID using a predefined service ID.",3.23813774602814,39.34426229508197,13.559322033898304,39.34426229508197,71.86471819877625
81,c,"Constructs and sends a 2-byte UDS positive response for a Transfer Data request (containing the positive SID and the block sequence counter) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","This function sends a transfer data response message via ISOTP, using a positive service ID and specified block sequence counter, to a predefined CAN address.","This function sends a transfer data response message via ISOTP, using a positive service ID and specified block sequence counter, to a predefined CAN address, logging any errors encountered during transmission.",4.813961624159691,43.75,16.129032258064516,34.375,70.94371914863586
82,c,"Constructs and sends a 5-byte UDS positive response for the Routine Control service (containing the routine control type, routine ID, and a result code) over a CAN bus via ISO-TP, logging an error if the transmission fails","This function sends a UDS routine control result message via ISOTP to a specified CAN ID, including the routine ID and result code in the payload.","This function sends a UDS routine control result message via ISOTP to a specified CAN ID, including the routine ID and result code in the payload, using a predefined service ID.",3.9697965329484033,46.15384615384615,19.047619047619047,36.92307692307692,70.04537582397461
83,c,"Constructs and sends a 1-byte UDS positive response for a Transfer Exit request (containing the request SID + 0x40) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","This function sends a positive response to a transfer exit request via ISOTP, using a predefined SID and logging any transmission errors.","This function sends a positive response to a transfer exit request via ISOTP, using a predefined SID and logging any transmission errors to indicate successful completion.",3.1980962175052663,49.12280701754386,18.181818181818183,38.59649122807017,74.25791025161743
85,c,"Searches a predefined `id_mapping` array for a given CAN ID and returns its corresponding index, or `0xff` if the ID is not found","This inline function maps a CAN identifier (can_id) to a corresponding index within a predefined mapping table (id_mapping), returning the index if found, otherwise returning 0xff.","This inline function maps a CAN identifier (can_id) to a corresponding index within a predefined mapping table (id_mapping), returning the index if found, otherwise returning 0xff to indicate no match.",6.483010295255652,50.0,15.999999999999998,26.923076923076923,71.8643307685852
86,c,"Disables a specific LIN-to-CAN receive filter by clearing its callback pointer, or disables all filters if a special ID is passed, while ignoring out-of-bounds IDs","This function removes a callback associated with a specific LIN filter ID from a LIN2CAN device's incoming callback array, effectively disabling message reception for that filter.","This function removes a callback associated with a specific LIN filter ID from a LIN2CAN device's incoming callback array, disabling message reception for that filter if the ID is valid.",3.652945772536268,25.0,7.407407407407408,17.857142857142858,62.46156096458435
87,c,"A LIN driver callback that retrieves a pending outgoing frame from a message queue, copies its data for transmission, invokes a frame-specific completion callback, and returns a boolean indicating if a frame was successfully prepared","This function retrieves a LIN frame from a queue, copies it to a provided `lin_frame` structure, and then calls a user-defined callback function to transmit the frame via CAN.","This function retrieves a LIN frame from a queue, copies it to a provided `lin_frame` structure, and then invokes a user-provided callback function to handle the frame's transmission via CAN.",8.449719761571428,41.7910447761194,15.384615384615383,35.82089552238806,72.39664196968079
88,c,"Acts as a LIN-to-CAN gateway callback, translating an incoming LIN frame by using its first data byte's top two bits as an index to find a target CAN ID, constructing a new CAN frame with the translated ID and a payload where those index bits are masked out, and finally invoking a registered handler with the resulting CAN frame",This function translates incoming LIN frames into CAN frames based on a mapping table and then calls a registered callback function with the translated CAN frame and associated user data.,"This function translates incoming LIN frames into CAN frames based on a mapping table and then invokes a registered callback function with the translated CAN frame and associated user data, after verifying the LIN ID.",3.0881870010224675,32.608695652173914,11.111111111111112,23.913043478260867,67.76885986328125
89,c,"Initializes a high-voltage shield by configuring its Output Enable (OE) GPIO, writing a zeroed state to its hardware registers, and then setting the OE pin to enable the device's outputs, logging errors at each step","This function initializes the HV shield device by configuring the output enable GPIO pin, initializing the device's registers, updating the shield state, and enabling the shield output.","This function initializes the HV shield device by configuring the output enable GPIO pin, initializing the device's registers, updating the shield state, and enabling the shield output, returning an error code if any step fails.",4.199234005029583,46.15384615384615,12.698412698412698,33.84615384615385,72.2931981086731
90,c,"Sets the gain for a specified DAC (0 or 1) on a high-voltage shield by updating its value in a cached data structure and then calling an update function to write the new configuration to the hardware, returning an error for an invalid DAC index","This function sets the digital-to-analog converter (DAC) gain for a specific shield channel (0 or 1) within a device, updating the device's internal registers and subsequently triggering an update function to apply the new gain setting.","This function sets the digital-to-analog converter (DAC) gain for a specific shield channel (0 or 1) within a device, updating the device's internal registers and triggering an update to apply the new gain setting.",16.98604582026303,49.411764705882355,21.686746987951807,40.0,70.41958570480347
91,c,"Enables or disables a specific GPIO output on a high-voltage shield by validating the pin index (0-31), remapping it via a nibble-swap, modifying a cached register bit, and then calling a helper function to write the update to the hardware","This function enables or disables a specific GPIO output pin (index 0-31) on an HV shield device by manipulating a bitfield within a register, and then updates the device's configuration.","This function enables or disables a specific GPIO output pin (index 0-31) on an HV shield device by manipulating a bitfield within a register, and then updates the device's configuration, handling index adjustments for the register layout.",19.34418228773439,55.99999999999999,27.397260273972602,45.33333333333333,78.22374701499939
92,c,"A callback function that forwards a received CAN frame from a source device to a destination device (passed via `user_data`) using a non-blocking send operation, logging a debug message on successful queuing or a warning on failure",This function routes CAN frames received on one device to another by forwarding them using `can_send` and logging the routing action and any errors.,"This function routes CAN frames received on one device to another by forwarding them using `can_send`, logging the routing action and any errors, and using a callback for transmission confirmation.",2.4011232474986826,28.125,3.225806451612904,21.875,74.21683073043823
93,c,"Configures a CAN message router by iterating through an array of routing entries, adding a receive filter to a source CAN interface for each entry that uses a callback to forward matching frames to a destination interface, and returns an error if any filter registration fails","This function registers a set of CAN router entries by adding corresponding receive filters to the CAN driver, associating each filter with a callback function and a destination pointer.","This function registers a set of CAN router entries by adding corresponding receive filters to the CAN driver, associating each filter with a callback function and a destination pointer, and returning an error if any registration fails.",2.8551694884591283,45.33333333333333,5.47945205479452,34.666666666666664,72.79217839241028
94,c,"Initializes the CAN router by iterating through all statically-defined routing tables found in a dedicated linker section and registering their entries, returning an error if any registration fails",This function initializes the CAN router by iterating through a predefined table of CAN router entries and registering each entry with the CAN router system.,This function initializes the CAN router by registering each entry from a predefined table of CAN router entries with the CAN router system.,18.85858544194641,40.74074074074074,26.923076923076923,37.03703703703704,73.93949627876282
95,c,"Iterates through a pre-configured list of low-voltage GPIOs, setting the state of each pin enabled by an input mask to the corresponding bit in a value word, logging and returning an error if any underlying GPIO operation fails","This function sets the specified bits of a GPIO mask to a given value on a given port, iterating through a configuration structure to access the relevant GPIO pins and using the `gpio_pin_set` function to perform the actual setting.","This function sets the specified bits of a GPIO mask to a given value on a given port, iterating through a configuration structure to access the relevant GPIO pins and using the `gpio_pin_set` function to perform the actual setting, handling potential errors during the process.",3.0070232851964143,32.098765432098766,5.063291139240507,19.75308641975309,64.84038233757019
96,c,"Populates an output parameter with the number of available Abstract LIN callback slots, calculated by subtracting the used count from a configured maximum, returning an error if the parameter is a null pointer",This function calculates and returns the number of available callback slots for a given abstract LIN device by subtracting the number of currently used callbacks from the maximum allowed number of callbacks.,This function determines and returns the number of free callback slots for a given abstract LIN device by subtracting the number of used callbacks from the configured maximum.,12.119462149205887,49.23076923076923,22.22222222222222,36.92307692307692,72.04347252845764
97,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","This function registers a callback function to handle incoming LIN messages with a specific frame ID and size within a device's abstract LIN data structure, returning an error code if the input parameters are invalid or if memory allocation fails.","This function registers a callback to process incoming LIN messages with a specified frame ID and size for a given device, returning an error if the input is invalid or memory allocation fails.",7.943238369999645,50.0,14.634146341463413,40.476190476190474,69.70545649528503
98,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","This function registers an outgoing callback for a specific LIN frame ID and size within a device's abstract LIN data structure, handling error conditions and allocating a callback slot.","This function registers an outgoing callback function with a device's abstract LIN data structure for a specific frame ID and size, allocating a slot and validating input parameters.",11.392724298109032,54.794520547945204,19.718309859154928,38.35616438356165,68.40633749961853
99,c,"Sets the active LIN schedule table by index, first validating the index and then using a semaphore to thread-safely update the scheduler's state and reset its entry pointer to the start of the new table","This function atomically sets the active table index for a LIN scheduler, ensuring only one table is active at a time by using a semaphore, and resets the current entry within that table to the beginning.","This function atomically sets the active table index for a LIN scheduler, ensuring only one table is active at a time by using a semaphore, and resets the current entry within that table to the beginning, returning an error if the table index is invalid.",6.34525949221907,46.57534246575342,14.084507042253522,35.61643835616438,70.48413157463074
100,c,"Disables a LIN scheduler by first checking if it's already stopped, then taking a semaphore to safely wait for the current operation to complete before setting the active schedule table index to -1",This function disables a LIN scheduler by setting its current table index to -1 and acquiring a semaphore to ensure exclusive access.,This function disables a LIN scheduler by setting its current table index to -1 and releasing a semaphore to prevent further scheduling.,16.3946566762096,50.0,33.33333333333333,35.714285714285715,73.35086464881897
