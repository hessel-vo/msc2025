id,language,reference,generated,generated_rci,bleu_score,rouge1,rouge2,rougeL,bertscore_f1
2,python,"Raises an exception if the specified 'datatype' is unsupported, otherwise retrieves that type's validation function and returns the boolean result of calling it with the provided 'value'","Validates that the provided 'datatype' is supported, then returns true if the 'value' is an instance of the specified 'datatype' using its associated type constructor.","Validates that the provided 'datatype' is supported, then returns true if the 'value' is an instance of the specified 'datatype' using its associated type constructor.",9.200468434138067,52.83018867924528,19.607843137254903,26.41509433962264,70.8507239818573
3,python,"Validates that a given value, or each value in a list, is an integer that fits within the numerical range defined by a specified bit-width and signedness",Checks if a given value or list of values are within the specified range for a signed or unsigned integer of a given bit width.,"Checks if a given value or list of values are within the specified range for a signed or unsigned integer of a given bit width, returning `True` if all values are within the range and `False` otherwise.",5.160174938455064,46.15384615384615,15.873015873015875,36.92307692307692,71.08746767044067
4,python,"Returns the type definition tuple from a class-level list of types that matches the provided 'datatype' name, or returns None if no match is found","Retrieves a tuple containing the datatype name, a callable, and a list of subtypes from a predefined list of datatypes if the provided datatype name matches a known datatype, otherwise returns None.","Retrieves a tuple containing the datatype name, a callable, and a list of subtypes from a predefined list of datatypes if the provided datatype name matches a known datatype, otherwise returns None.",4.987824484125202,48.275862068965516,21.428571428571427,37.93103448275862,67.89451837539673
5,python,Returns a dictionary mapping the short name to the full FQN for all dynamic datatypes that exist in the same namespace as the provided FQN,"Identifies and returns a dictionary of namespaced datatypes from a list of predefined datatypes, where the keys are the last segment of the datatype name and the values are the full qualified names, based on whether the input fully qualified name (fqn) starts with a prefix of any of the predefined datatypes.","Identifies and returns a dictionary of namespaced datatypes from a list of predefined datatypes, where the keys are the last segment of the datatype name and the values are the full qualified names, based on whether the input fully qualified name (fqn) starts with a prefix of any of the predefined datatypes, excluding those that match the input fqn exactly.",1.9498021649134312,30.58823529411765,7.228915662650602,28.235294117647065,60.960400104522705
7,python,"Parses a type string to create an `ApiGearType` object, mapping common primitive types to their ApiGear equivalents, sanitizing custom type names by replacing dots with underscores, and setting an array flag based on a ""[]"" suffix","Converts a string representation of a data type (e.g., 'int32', 'string', 'double[]') into an ApiGearType object, handling basic types, floating-point types, booleans, strings, and arrays.","Converts a string representation of a data type (e.g., 'int32', 'string', 'double[]') into an ApiGearType object, handling basic types, floating-point types, booleans, strings, and array indicators.",3.6269399194517673,31.74603174603175,6.557377049180327,28.57142857142857,64.24328684806824
8,python,"Creates an `ApiGearProperty` by converting the VSS node's datatype to a supported ApiGear type and copying its description, returning `None` and logging a warning if the datatype is not supported","Generates an `ApiGearProperty` object from a `VSSNode` and a specified `datatype`, populating its `apigear_type` and `description` attributes if the `datatype` is supported and the node has a description.","Generates an `ApiGearProperty` object from a `VSSNode` and a specified `datatype`, populating its `apigear_type` and `description` attributes if the `datatype` is supported and the node has a description, returning `None` if the `datatype` is not supported.",17.25301454781518,64.70588235294117,30.303030303030297,44.11764705882353,73.56387376785278
10,python,"Loads and parses multiple VSpec files from specified paths, using a list of include directories, then merges them into a single composite VSpec object and returns it, raising an exception if no files are successfully loaded","Loads and merges multiple VSpec files from a list of paths, optionally including specified include directories, and returns a single combined VSpec object after logging the loaded specs and any errors.","Loads and merges multiple VSpec files from a list of paths, optionally including specified include directories, and returns a single combined VSpec object after logging the loaded specs and raising an exception if no specs are loaded.",25.817063268630054,73.97260273972601,39.436619718309856,63.01369863013699,85.38503050804138
11,python,"Recursively updates a 'base' dictionary with an 'update' dictionary, merging nested dictionaries for common keys and overwriting or adding all other key-value pairs","Recursively updates a base dictionary with values from an update dictionary, merging nested dictionaries and overwriting non-dictionary values.","Recursively updates a base dictionary with values from an update dictionary, merging nested dictionaries and overwriting non-dictionary values in place.",23.95758965148009,62.22222222222222,51.162790697674424,62.22222222222222,77.3481011390686
12,python,"Asserts that the input value, if not None, is a valid 'constUID' formatted as an 8-digit hexadecimal string prefixed with '0x', returning the value if the check passes","Validates that the input string 'v' is a valid 'constUID' by checking if it matches the hexadecimal pattern '0x[0-9A-Fa-f]{8}' and returns the input string if valid, otherwise raises an assertion error.","Validates that the input string 'v' is a valid 'constUID' by checking if it matches the hexadecimal pattern '0x[0-9A-Fa-f]{8}' and returns the input string if valid, otherwise raises an assertion error.",9.870646728504157,49.230769230769226,15.873015873015875,33.84615384615385,72.61343002319336
13,python,"Initializes a VSSRaw model and attempts to resolve it, returning the successfully resolved model or the original unresolved model if resolution fails due to a validation or model error","Creates a VSSRaw object from the provided data and fully resolves it using `resolve_vss_raw`, returning the resolved object or an incomplete version if resolution fails.","Creates a VSSRaw object from the provided data, attempts to fully resolve it using `resolve_vss_raw`, and returns the resolved object or an incomplete version if resolution fails, logging a debug message in the latter case.",5.783214009218945,45.45454545454546,15.625000000000004,39.3939393939394,72.91489839553833
14,python,"Asserts that each string in the input list is a valid datatype by checking against a master list, returning the original list if all values are valid","Validates that all datatypes in the input list 'values' are present in the 'datatypes' list, raising an assertion error if an invalid datatype is found, and returning the original list if all datatypes are valid.","Validates that all datatypes in the input list 'values' are present in the 'datatypes' list, raising an assertion error if an invalid datatype is found, and returning the original list if all datatypes are valid.",21.90665528084726,54.83870967741936,33.333333333333336,45.16129032258064,73.62337112426758
15,python,"Traverses a VSSNode tree to generate a formatted string, displaying each node's name followed by the values of any specified attributes found on it","Recursively traverses a VSSNode tree, extracting specified attributes from each node and formatting them into a string representation suitable for rendering as a tree structure.","Recursively traverses a VSSNode tree, extracting specified attributes from each node and formatting them into a string representation suitable for rendering as a tree structure with attribute values.",6.910549031862163,41.50943396226415,19.607843137254903,26.41509433962264,75.83498358726501
16,python,"Recursively traverses up the parent hierarchy to find and return the first non-instance ancestor node and the traversal depth, raising an exception if the starting node is not a branch or if no root is found","Recursively traverses up the parent chain of a VSSNode until an instance root is found, returning the root node and the depth of the traversal.","Recursively traverses up the parent chain of a VSSNode until an instance root is found, returning the root node and the depth of the traversal, raising an exception if no instance root is found.",28.39479031628535,64.78873239436619,37.68115942028986,50.70422535211269,77.82089114189148
17,python,Recursively calculates the depth of the first-found branch of children where each node is a `VSSDataBranch` with its `is_instance` flag set,"Recursively counts the depth of instance children within a VSSDataBranch object, returning 1 plus the depth of the deepest instance child.","Recursively counts the depth of instance children within a VSSDataBranch object, returning 1 plus the depth of the deepest instance child found.",10.929637020896283,48.888888888888886,18.6046511627907,35.55555555555555,69.40540075302124
18,python,Returns a list of node IDs from an input list whose expected parent's name matches the provided `name`,Returns a list of node IDs whose expected parent is the specified name.,Returns a list of node IDs whose expected parent is the specified name.,27.104761349415757,68.75,46.666666666666664,68.75,82.57342576980591
19,python,"Retrieves an attribute from an object, returning a specified default value if the attribute is missing or its value is `None`","Retrieves an attribute from an object by name, returning a default value if the attribute is not found or is None.","Retrieves an attribute from an object by name, returning a default value if the attribute is not found or is None.",46.342510515962914,80.95238095238095,60.0,80.95238095238095,88.68709802627563
20,python,Generates a `proto3` file from a VSS tree by first writing import statements for complex data types and then converting each branch in the tree into a corresponding protobuf message,"Traverses a VSS signal tree, extracts and writes protobuf imports based on data types, and generates protobuf messages for each branch node, including optional fields if specified.","Traverses a VSS signal tree, extracts and writes protobuf imports based on data types, and generates protobuf messages for each branch node, optionally including optional fields.",4.5713512171827055,39.28571428571428,14.814814814814817,28.571428571428577,69.79190707206726
21,python,"Traverses a VSS tree to find all terminal instance branches, grouping their relative names into a dictionary where each key is the fully qualified name of the original branch they instantiate","Traverses a VSS tree to identify and collect the fully qualified names of all instance nodes (those with the 'is_instance' flag set) that are not themselves part of a larger instance, grouping them by their instance root node.","Traverses a VSS tree to identify and collect the names of all instance nodes (those with the 'is_instance' flag set) that are not themselves part of a larger instance, grouping them by their instance root node.",11.376631525572614,44.11764705882353,12.12121212121212,26.47058823529412,68.08691024780273
22,python,Checks if a given VSSNode is a leaf by verifying its 'data' attribute is an instance of VSSDataDatatype,"Returns true if the provided VSSNode's data attribute is an instance of the VSSDataDatatype class, otherwise returns false.","Returns true if the provided VSSNode's data attribute is a VSSDataDatatype instance, otherwise returns false.",6.749615459846382,47.05882352941176,18.750000000000004,35.294117647058826,76.44155025482178
23,python,Returns `True` if the given `VSSNode`'s data is a `VSSDataBranch` and its `is_instance` attribute is `False`,"Returns true if the given VSSNode's data is a VSSDataBranch and its 'is_instance' attribute is false, otherwise returns false.","Returns true if the given VSSNode's data is a VSSDataBranch and its 'is_instance' attribute is false, otherwise returns false.",10.663001890185773,92.3076923076923,91.89189189189189,92.3076923076923,85.49414277076721
24,python,Returns True if the node's data is a VSSDataBranch and its 'is_instance' attribute is True,Checks if a VSSNode's data is a VSSDataBranch and if that branch is marked as an instance.,Checks if a VSSNode's data is a VSSDataBranch and if that branch's 'is_instance' attribute is set to True.,35.587851490678766,63.15789473684211,44.44444444444445,63.15789473684211,82.60299563407898
25,python,"Calculates a 32-bit FNV-1 hash for a given byte string by iterating through each byte, multiplying the current hash by the FNV prime, and then performing a bitwise XOR with the byte",Calculates a 32-bit FNV-1a hash value for a given byte string using a prime number and XOR operation.,"Calculates a 32-bit FNV-1a hash value for a given byte string by iterating through each byte, XORing it with the hash, and multiplying the hash by a prime number.",45.11090214066903,76.92307692307693,50.793650793650805,64.61538461538461,85.68844199180603
28,java,"Inflates the `card_fragment` layout, finds and assigns the card's title and icon views, and returns the resulting root view","Inflates a layout (`card_fragment`) to create a view, finds the `card_name` and `card_icon` views within it, and returns the inflated view.","Inflates a layout (`card_fragment`) to create a view, finds the `card_name` and `card_icon` views within it, and returns the inflated view as the fragment's root view.",20.06411049401193,66.66666666666666,24.489795918367346,54.90196078431373,75.96650123596191
29,java,"Updates an `ImageButton`'s icon and click listener from a content object and makes it visible, or hides the button if the content is null","Updates the visibility and content of an `ImageButton` to match the provided `DescriptiveTextWithControlsView.Control` object, setting its icon and click listener if the control is not null, otherwise hiding the button.","Updates the visibility and content of an `ImageButton` to match the provided `DescriptiveTextWithControlsView.Control` object, setting its icon and click listener if the control is not null, otherwise hiding the button.",15.754161260335207,57.14285714285714,22.222222222222225,39.28571428571428,73.80764484405518
30,java,"Lazily inflates a `ViewStub` to create a descriptive text layout, caches references to its child views (title, subtitle, image), and returns the inflated layout","Lazily initializes and returns a `View` representing a descriptive text-only layout, inflating it from a `ViewStub` and retrieving references to its title, subtitle, optional image, and tap-for-more text elements.","Lazily initializes and returns a `View` representing a descriptive text-only layout, inflating it from a `ViewStub` and retrieving references to its title, subtitle, optional image, and tap-for-more text elements.",19.42053406068837,53.57142857142857,29.629629629629626,46.42857142857142,76.00961327552795
31,java,Updates the header view on the main UI thread by making its root view visible and setting the card's title and icon from the provided `CardHeader` object,"Updates the header view of a card by setting its visibility, title, and icon within the main thread of the activity.","Updates the header view of a card by setting its visibility, title, and icon within the main thread of the activity, ensuring UI updates are performed safely.",11.871704290088221,58.18181818181818,22.641509433962266,36.36363636363637,75.0630795955658
32,java,"Lazily inflates a `ViewStub` to create and return the text block layout view, while also finding and caching references to its child text views on the first call","Lazily initializes and returns a `View` representing a text block layout, inflating it from a `ViewStub` and retrieving references to its `text_block` and `tap_for_more_text` child views.","Lazily initializes and returns a `View` representing a text block layout, inflating it from a `ViewStub` and retrieving references to its `text_block` and `tap_for_more_text` child views.",10.994188234916312,51.724137931034484,17.857142857142858,37.93103448275862,76.27290487289429
33,java,"Queries the `PackageManager` for a `MediaBrowserService` within a given package and returns a `ComponentName` for the first one found, or `null` if none exist",Retrieves the default `ComponentName` of a media browsing service within a specified package by querying the `PackageManager` for services that implement `MediaBrowserService.SERVICE_INTERFACE`.,Retrieves the default `ComponentName` of a media browsing service within a specified package by querying the `PackageManager` for services that implement `MediaBrowserService.SERVICE_INTERFACE` and returns `null` if no such service is found.,19.760904849332015,52.63157894736842,18.181818181818183,31.57894736842105,76.66171789169312
34,java,"Determines if a component should be added to a launchable list, returning `false` if its package is explicitly hidden or if it's a custom media component and launchable apps are also being shown, otherwise returning `true` for valid launchable or media service types","Determines whether a given component should be added to the launchables list based on whether its package is hidden, its type is a media service and not a custom media component, or its type is a launchable.","Determines whether a given component should be added to the launchables list based on whether its package is hidden, its type is a media service and not a custom media component, or its type is a launchable.",17.227623415597947,54.32098765432099,27.848101265822784,41.9753086419753,71.40617966651917
35,java,"Sets the car's media source to a given component in browse mode and finishes the context if it's an Activity, catching and logging a `CarNotConnectedException` if the car service is unavailable","Sets the media source of a `CarMediaManager` to browse mode and finishes the activity if the context is an activity, handling `CarNotConnectedException` by logging an error.","Sets the media source of a `CarMediaManager` to browse mode and finishes the activity if the context is an activity, handling `CarNotConnectedException` by logging an error.",20.2080475635647,64.40677966101696,31.57894736842105,47.457627118644076,77.1916389465332
36,java,"Safely checks if a given activity is distraction optimized using the `CarPackageManager`, returning `false` and logging an error if the manager is null or a `CarNotConnectedException` is caught","Checks if a given activity within a specified package is distraction optimized by querying the `CarPackageManager`, handling potential `CarNotConnectedException` errors.","Checks if a given activity within a specified package is distraction optimized by querying the `CarPackageManager`, returning `false` if a `CarNotConnectedException` occurs.",39.834553348177344,60.0,41.66666666666667,60.0,83.18918347358704
38,java,"Retrieves a specific, resolvable map `Intent` from a configured list if it matches the system's default map app, otherwise falls back to a generic `Intent` for any map application","Retrieves a preferred `Intent` for launching maps, prioritizing those specified in `config_homeCardPreferredMapActivities` and falling back to the default maps activity if no preferred activity is found or is invalid.","Retrieves a preferred `Intent` for launching maps, prioritizing those specified in `config_homeCardPreferredMapActivities` and falling back to the default maps activity if no preferred activity is found or is invalid, while also ensuring the preferred activity is not the default.",7.528274645343134,25.71428571428572,8.823529411764707,17.142857142857142,60.64305901527405
39,java,"Lazily initializes a set of `HomeCardModule`s by reflectively instantiating class names from a configuration array, and then uses a `FragmentTransaction` to add each module's card view to the UI layout","Dynamically instantiates and adds `HomeCardModule` instances to a set, using reflection to create them from class names defined in a resource array, then replaces fragments in the activity's layout with the card views provided by these modules.","Dynamically instantiates and adds `HomeCardModule` instances to a set, using reflection to create them from class names defined in a resource array, then replaces fragments in the activity's layout with the card views provided by these modules, logging the reflection time for each module.",5.484236895303142,49.35064935064935,8.0,25.974025974025977,74.89433288574219
40,java,"Iterates through a list of appeared tasks and uses the `ActivityTaskManager` to remove any task that is in multi-window mode, logging it as a dangling task",Removes dangling multi-window tasks from the ActivityTaskManager by iterating through a list of `TaskAppearedInfo` objects and removing any tasks with a `WINDOWING_MODE_MULTI_WINDOW` mode.,"Removes dangling multi-window tasks from the ActivityTaskManager by iterating through a list of `TaskAppearedInfo` objects and removing any tasks with a `WINDOWING_MODE_MULTI_WINDOW` mode, logging a debug message if a task is found.",9.671028100780742,53.96825396825397,22.950819672131146,38.0952380952381,70.53019404411316
41,java,Parses the mode from the current Intent and sets the title for both the Activity and the CarUi toolbar using the string resource ID defined in that mode,"Parses the mode from the intent, sets the title of the activity and toolbar to the corresponding string ID from the parsed mode.",Parses the mode from the intent and sets the title of the activity and toolbar to the corresponding string ID from the parsed mode.,24.559457847340898,73.07692307692307,40.0,69.23076923076924,82.81803727149963
42,java,"Lazily initializes and returns a `Chronometer` by finding it in the layout, while also finding and caching its associated separator view on the first call","Lazily initializes and returns a `Chronometer` view and its separator from the layout, if not already initialized.","Lazily initializes and returns a `Chronometer` view and its separator from the layout, if not already initialized.",30.51523907239015,57.14285714285713,30.0,47.61904761904762,77.28442549705505
43,java,"Lazily inflates a media layout from a `ViewStub`, finds and caches its title and subtitle views, initializes its media playback controls bar via a presenter, and returns the inflated view","Lazily initializes and returns a `View` representing the media layout, inflating it from a `ViewStub`, setting up the title and subtitle text views, and initializing the media playback controls action bar with the presenter.","Lazily initializes and returns a `View` representing the media layout, inflating it from a `ViewStub`, setting up the title and subtitle text views, and initializing the media playback controls action bar using the presenter.",21.815132994451233,68.75,25.80645161290323,50.0,79.36185598373413
44,java,"If a valid `Drawable` and card size are provided, this method scales the image to a square based on the card's largest dimension, blurs it, and sets the resulting bitmap as the animated, visible card background","Scales a provided `Drawable` to a square size, blurs it, and sets it as the background image of a card with a visibility change.","Scales a provided `Drawable` to a square size, blurs it, and sets it as the background image of a card, showing an animation during the change.",19.04140716423323,57.14285714285714,19.672131147540984,38.095238095238095,73.16125631332397
45,java,Makes the media layout view visible and updates its title and subtitle with the provided text,Sets the visibility of the media layout view to visible and updates the text of the title and subtitle views with the provided title and subtitle strings.,Sets the visibility of the media layout view to visible and updates the title and subtitle text views with the provided title and subtitle strings.,20.470197308611493,68.29268292682927,46.15384615384615,63.41463414634146,80.97644448280334
46,java,"If the content's start time is positive, this method makes a chronometer and a separator visible, sets the chronometer's base time, and starts it; otherwise, it hides both views","Conditionally displays a chronometer and separator based on the `startTime` of a `DescriptiveTextWithControlsView`, starting the chronometer if the start time is positive.","Conditionally displays a chronometer and separator based on the `startTime` of a `DescriptiveTextWithControlsView`, starting the chronometer if the start time is positive and hiding it otherwise.",11.936980741968917,56.14035087719298,29.09090909090909,35.08771929824561,68.39864253997803
47,java,Registers a member callback to the provided `Call` object after verifying it is not null,Registers a callback to a newly added `Call` object to receive updates about its state.,Registers a callback to a newly added `Call` object to receive updates about its state.,18.16725573641283,40.00000000000001,21.428571428571427,40.00000000000001,75.52205324172974
48,java,"Handles the removal of a call by clearing the current call and card content, notifying the presenter of the model update, and unregistering its callback from the call object for cleanup","Removes the current call, clears associated data, updates the presenter, and unregisters the callback from the call object if it exists.","Removes the current call, clears associated data, updates the presenter, and unregisters the callback from the call object if it exists.",16.92494735161272,46.15384615384615,28.000000000000004,42.30769230769231,77.63981223106384
49,java,"Formats a phone number to create a new `DescriptiveTextWithControlsView` with call details and controls, then notifies the presenter that the model has been updated","Formats a phone number, creates a `DescriptiveTextWithControlsView` with the formatted number and other call-related UI elements, and then notifies the presenter that the model has been updated.","Formats a phone number, creates a `DescriptiveTextWithControlsView` with the formatted number and other call-related UI elements, and then notifies the presenter that the model has been updated.",44.558016104772264,73.07692307692307,52.0,73.07692307692307,86.96524500846863
50,java,"Initializes mute, end call, and dialpad buttons by assigning each an icon and a click listener to toggle mute status, disconnect the current call, and delegate to an onClick handler, respectively","Initializes the mute, end call, and dialpad buttons for an audio control view, setting their icons and actions to toggle mute status, disconnect the call, and open the dialpad respectively.","Initializes the mute, end call, and dialpad buttons for an audio control view, setting their icons and actions to toggle mute status, disconnect the call, and open the dialpad respectively.",40.29209619482757,59.01639344262295,37.28813559322034,59.01639344262295,78.1186580657959
53,cpp,"When a new listener is added, this callback immediately notifies it with an `AVAILABLE` status if the D-Bus connection is already active","Notifies a listener of an available status if the D-Bus connection is connected, ignoring the subscription information.",Notifies a listener of an available status if the D-Bus connection is connected.,17.64841597243509,64.86486486486486,45.714285714285715,59.45945945945946,72.64585494995117
54,cpp,"Atomically registers a given thread to be joined later by adding it to a list, but only if its associated connection is active and the thread is not already present in the list","Associates a given thread with a D-Bus connection, adding the thread to a list of threads to be joined upon program exit if the connection is already registered.","Associates a given thread with a D-Bus connection, adding the thread to a list of threads to be joined upon program exit if the connection is already registered.",12.133479911659037,54.83870967741935,30.000000000000004,35.48387096774193,68.92181634902954
56,cpp,A callback function that handles the removal of a D-Bus watch by stopping its monitoring and disassociating the high-level wrapper object from the underlying `libdbus` watch,"Removes a D-Bus watch by stopping its associated `DBusWatch` object if it's ready and clearing the watch's data, handling null pointers to prevent errors.","Removes a D-Bus watch by stopping its associated `DBusWatch` object if it's ready and clearing the watch's data, handling null pointers to prevent errors and ensuring proper cleanup.",16.62946405375344,37.28813559322034,21.05263157894737,33.89830508474576,70.51184177398682
57,cpp,"Handles the toggling of a D-Bus watch by creating a C++ wrapper object for it on first use, and then starting or stopping its monitoring based on its readiness status","Manages the state of a D-Bus watch by either starting or stopping its monitoring based on whether it is ready to be watched, and updates the associated `DBusWatch` object and dispatch source accordingly.","Manages the state of a D-Bus watch by either starting or stopping its monitoring based on whether it is ready to be watched, and updates the associated `DBusWatch` object and dispatch source accordingly, or creates a new `DBusWatch` if one doesn't exist.",20.792339374889604,48.00000000000001,30.136986301369856,37.33333333333333,69.5352852344513
58,cpp,"Lazily initializes and returns a thread-safe, singleton `DBusObjectManager` instance using a double-checked locking pattern","Returns a shared pointer to a `DBusObjectManager` instance, lazily initializing it if it doesn't already exist, to manage D-Bus objects associated with the connection.","Returns a shared pointer to a `DBusObjectManager` instance, lazily initializing it if it doesn't already exist, to manage D-Bus objects associated with the connection and ensure thread-safe access.",8.611161279613844,38.297872340425535,13.333333333333334,17.02127659574468,66.84632897377014
59,cpp,"Decrements a reference count for a given D-Bus service name, releasing it from the bus if the count reaches zero, and returns `true` on success or `false` if the name was not being tracked","Releases a D-Bus service name by decrementing its reference count, and if the count reaches zero, calls `dbus_bus_release_name` to unregister the name, returning `true` on success and `false` if the name was not found or the release operation failed.","Releases a D-Bus service name by decrementing its reference count, and if the count reaches zero, calls `dbus_bus_release_name` to unregister the name, returning `true` if the name was successfully released and `false` otherwise.",26.045380867231437,58.33333333333333,31.428571428571434,41.66666666666667,74.47835206985474
60,cpp,"Steals the reply from a `DBusPendingCall` handle and wraps it in a new `DBusMessage` object that takes ownership, returning an empty message if the input handle is null","Converts a `DBusPendingCall` to a `DBusMessage` by extracting the reply from the pending call and creating a `DBusMessage` object from it, returning an empty `DBusMessage` if the input is null.","Converts a `DBusPendingCall` to a `DBusMessage` by extracting the reply from the pending call and creating a `DBusMessage` object from it, returning an empty `DBusMessage` if the input is null or the extraction fails.",22.06877406856142,58.06451612903226,30.0,48.38709677419355,79.00216579437256
61,cpp,Thread-safely deallocates a collection of asynchronous D-Bus message reply handlers by moving them from a protected member list to a local copy before iterating through and deleting each one,"Deletes all `DBusMessageReplyAsyncHandler` objects stored in a thread-safe queue, ensuring proper cleanup of asynchronous handlers.","Deletes all `DBusMessageReplyAsyncHandler` objects stored in a thread-safe queue, ensuring proper cleanup of asynchronous handlers.",2.8445770736995537,21.27659574468085,4.444444444444444,17.02127659574468,65.036541223526
62,cpp,Thread-safely notifies all registered signal handlers of a successful state by invoking their `onSpecificError` callback with a `SUCCESS` status for each associated signal tag,"Iterates through registered signal handlers and calls their `onSpecificError` method with a `SUCCESS` status for each registered signal tag, ensuring all handlers are notified of successful signal reception.","Iterates through registered signal handlers and calls their `onSpecificError` method with a `SUCCESS` status for each registered signal tag, notifying all handlers of successful signal reception.",36.381467802469125,62.745098039215684,40.81632653061225,50.98039215686274,81.3366174697876
63,cpp,"Thread-safely removes a connection, identified by its ID, from an internal collection if it exists","Removes a `DBusConnection` from the `connections_` map using the provided `ConnectionId_t` as a key, ensuring thread safety with a `recursive_mutex`.","Removes a `DBusConnection` from the `connections_` map using the provided `ConnectionId_t` as a key, ensuring thread safety with a `recursive_mutex`.",1.389736936231864,21.05263157894737,5.555555555555555,15.789473684210526,62.69152760505676
64,cpp,"Handles an incoming D-Bus signal by dispatching it to the appropriate handler for either ""InterfacesAdded"" or ""InterfacesRemoved"" events based on the message's member name","Handles D-Bus messages received for instance availability status changes, dispatching the appropriate signal to the event handler based on whether the message indicates interfaces were added or removed.","Handles D-Bus messages received for instance availability status changes, dispatching the appropriate signal to the event handler based on whether the message indicates interfaces were added or removed.",5.217751516558981,54.54545454545454,18.86792452830189,40.0,74.37366843223572
65,cpp,"Retrieves available service instances from a registry, translates the internal D-Bus representation into a vector of `DBusAddress` objects, and populates the provided output vector and status parameter","Retrieves a list of available service instances for a given D-Bus service and object path, populating the provided `_availableServiceInstances` vector and setting the `_status` to `SUCCESS` if successful.","Retrieves a list of available service instances for a given D-Bus service and object path, populating the provided `_availableServiceInstances` vector and setting the `_status` to `SUCCESS` if successful, or `FAILURE` otherwise.",5.843961274168978,53.333333333333336,17.241379310344826,43.33333333333333,67.77209043502808
66,cpp,"Gets the availability status of a service instance by translating its identifier to a D-Bus address and querying a registry, setting the result and a success status in output parameters","Retrieves the availability status of a specified service instance by translating a CommonAPI address to a DBus address and checking if the instance is alive in the DBus registry, setting the `AvailabilityStatus` and `CallStatus` accordingly.","Retrieves the availability status of a specified service instance by translating a CommonAPI address to a DBus address and checking if the instance is alive in the DBus registry, setting the `AvailabilityStatus` and `CallStatus` accordingly.",22.930805220097056,57.57575757575757,34.375,51.515151515151516,74.90468621253967
67,cpp,"Handles a D-Bus ""InterfacesRemoved"" signal by parsing the object path and interface names, and for any interface matching the one being observed, notifies listeners that its status has changed to ""NOT_AVAILABLE","Parses a `DBusMessage` containing an object path and a list of interface names, then iterates through the interfaces to remove them from the proxy and notify the interface status changed event if the interface name matches the observed interface and the removal succeeds.","Parses a `DBusMessage` containing an object path and a list of interface names, then removes the matching interface from the proxy and notifies the interface status changed event if the interface name matches the observed interface and the removal succeeds.",6.6574271638345,41.0958904109589,8.450704225352112,30.136986301369863,67.13055372238159
68,cpp,Notifies listeners of an interface's availability change by translating its D-Bus path and name into a generic CommonAPI address,Translates a D-Bus address to a CommonAPI address and notifies listeners of an interface status change for a given object path and interface name.,"Translates a D-Bus address to a CommonAPI address and notifies listeners of an interface status change for a given object path and interface name, using the provided availability status.",7.508325052934221,58.823529411764696,28.57142857142857,35.29411764705882,81.20376467704773
69,cpp,"Thread-safely schedules a task on the main event loop to notify a newly added listener, passing along its specific subscription details",Registers a listener with a subscription to receive specific DBus proxy status notifications by pushing a function to the main loop to be called when the status changes.,Registers a listener with a subscription to receive specific DBus proxy status notifications by pushing a function to the main loop to be called when the status changes.,4.457304913937111,36.00000000000001,8.333333333333332,20.0,67.17346906661987
70,cpp,Thread-safely removes all listeners from an internal collection that match the provided `Subscription` identifier,"Removes a listener from the `listeners_` map associated with a given subscription, ensuring thread safety via a recursive mutex.","Removes a listener from the `listeners_` map associated with a given subscription, ensuring thread safety via a recursive mutex and iterating through the map to find and erase the matching subscription.",1.533227700920213,26.086956521739136,0.0,17.391304347826086,64.24120664596558
71,cpp,Delegates the registration of a signal state handler for a specific subscription to the underlying connection object,"Adds a signal handler to the connection for a specific subscription, allowing the handler to receive and process signals from the D-Bus proxy.","Adds a signal handler to the connection for a specific subscription, allowing the handler to receive and process signals from the D-Bus proxy.",13.796620851017114,53.658536585365844,25.64102564102564,43.90243902439025,72.1380352973938
72,cpp,Handles the result of an asynchronous service instance query by translating the `DBusAddress` list to a string list on success and invoking a final callback with the call status and the translated list,"Handles the asynchronous callback for retrieving available instances of a D-Bus proxy, translating the D-Bus addresses to strings and passing the status and instances to the provided callback function.","Handles the asynchronous callback for retrieving available instances of a D-Bus proxy, translating the D-Bus addresses to strings and passing the status and instances to the provided callback function.",4.513277985227166,43.75,9.67741935483871,34.375,67.62992143630981
73,cpp,"Dispatches an incoming `DBusMessage` to a registered handler based on its object path and interface, or handles it as a standard introspection request, returning `true` if the message was processed","Handles incoming D-Bus messages by looking up the corresponding interface handler in a table, calling the handler's `onInterfaceDBusMessage` method if found, or handling introspectable interface messages if no specific handler is registered.","Handles incoming D-Bus messages by looking up the corresponding interface handler in a table, calling the handler's `onInterfaceDBusMessage` method if found, or handling introspectable interface messages if no specific handler is registered, returning `true` if the message was handled and `false` otherwise.",18.23376902793421,37.83783783783784,13.88888888888889,27.027027027027025,72.1530020236969
74,cpp,"Registers a D-Bus interface handler for a specific path, returning `false` if the exact handler is already registered, but allowing idempotent registration for standard `ObjectManager` and `Properties` interfaces","Adds a `DBusInterfaceHandler` to the `dbusRegisteredObjectsTable_` for a given `DBusInterfaceHandlerPath`, returning `true` if successful or if the handler is already registered for a specific interface, and `false` otherwise.","Adds a `DBusInterfaceHandler` to the `dbusRegisteredObjectsTable_` for a given `DBusInterfaceHandlerPath`, returning `true` if successful or if the handler is already registered for the `org.freedesktop.DBus.ObjectManager` or `org.freedesktop.DBus.Properties` interfaces, and `false` otherwise.",10.945882771578296,49.230769230769226,19.047619047619047,43.07692307692307,66.25660061836243
75,cpp,"Registers a given `DBusInterfaceHandler` to a specific path in a table, returning `true` on success and `false` if the handler is already registered for that path","Adds a `DBusInterfaceHandler` to the `dbusRegisteredObjectsTable_` for a given `DBusInterfaceHandlerPath`, ensuring no duplicates and returning `true` on success or `false` if the handler already exists.","Adds a `DBusInterfaceHandler` to the `dbusRegisteredObjectsTable_` for a given `DBusInterfaceHandlerPath`, adding it to a vector of handlers for that path if it doesn't already exist, and returning `true` on success or `false` if the handler already exists.",28.453579585485034,59.374999999999986,35.48387096774193,43.75,77.07673907279968
78,c,"Constructs and sends a 2-byte UDS positive response to an ECU Reset request, containing the positive response SID and the echoed reset type, over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","Constructs and sends a 2-byte UDS positive reset response message (containing a positive SID and the reset type) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails”","Constructs and sends a 2-byte UDS positive reset response message (containing a positive SID and the reset type) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails”",56.352406809301876,88.0,71.23287671232877,85.33333333333333,86.45387887954712
79,c,"Processes a UDS ECU Reset request, validating the 2-byte message length, sending a positive response before triggering a system reboot for a 'hard reset', and sending a negative response for either an incorrect length or an unsupported reset sub-function","Handles a UDS ECU reset request by validating the message length, determining the reset type (hard or soft), sending a positive or negative response accordingly, and initiating a hard reset (reboot) if the request is for a hard reset.","Handles a UDS ECU reset request by validating the message length, determining the reset type (hard or soft), sending a positive or negative response accordingly, and initiating a hard reset (reboot) if the request is for a hard reset, otherwise logging a debug message.",11.071618970406313,56.47058823529411,28.915662650602407,47.05882352941176,70.63325643539429
80,c,"Constructs and sends a 4-byte UDS positive response for a ""Request Download"" service, specifying a maximum block length of 0x00D2, over a CAN bus using the ISO-TP protocol and logging an error on failure","Constructs and sends a 4-byte UDS positive response message (containing a positive response code and a block size of 258) over a CAN bus using the ISO-TP protocol, in response to a request download request.","Constructs and sends a 4-byte UDS positive response message (containing a positive response code and a block size of 258) over a CAN bus using the ISO-TP protocol, in response to a request download request.",40.363341616661266,68.4931506849315,50.70422535211267,60.273972602739725,80.09857535362244
81,c,"Constructs and sends a 2-byte UDS positive response for a Transfer Data request (containing the positive SID and the block sequence counter) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","Constructs and sends a 2-byte UDS positive response message (containing a transfer data SID and a block sequence counter) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails”","Constructs and sends a 2-byte UDS positive response message (containing a transfer data SID and a block sequence counter) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails”",67.78612606357261,90.66666666666667,79.45205479452055,87.99999999999999,90.68121314048767
82,c,"Constructs and sends a 5-byte UDS positive response for the Routine Control service (containing the routine control type, routine ID, and a result code) over a CAN bus via ISO-TP, logging an error if the transmission fails","Constructs and sends a 5-byte UDS routine control result message (containing a positive SID, a sub-function code, the routine ID, and the result) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails.","Constructs and sends a 5-byte UDS routine control result message (containing a positive SID, a sub-function code, the routine ID, and the result) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails.",46.27230031122132,80.0,51.28205128205129,70.0,85.77888607978821
83,c,"Constructs and sends a 1-byte UDS positive response for a Transfer Exit request (containing the request SID + 0x40) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","Sends a 1-byte UDS positive response message (indicating successful transfer exit) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails.","Sends a 1-byte UDS positive response message (indicating successful transfer exit) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails.",55.610480610078845,79.36507936507937,72.1311475409836,79.36507936507937,82.95312523841858
85,c,"Searches a predefined `id_mapping` array for a given CAN ID and returns its corresponding index, or `0xff` if the ID is not found","Maps a CAN identifier to a corresponding index within a predefined lookup table (id_mapping) and returns the index if found, otherwise returns 0xff.","Maps a CAN identifier to a corresponding index within a predefined lookup table (id_mapping) and returns the index if found, otherwise returns 0xff to indicate that the ID was not found.",7.940033610293232,57.14285714285715,22.22222222222222,42.857142857142854,76.68303847312927
86,c,"Disables a specific LIN-to-CAN receive filter by clearing its callback pointer, or disables all filters if a special ID is passed, while ignoring out-of-bounds IDs","Removes a specified incoming message filter from the `incoming_callbacks` array of a `lin2can_data` structure, either clearing all filters or only the one matching the provided `filter_id`.","Removes a specified incoming message filter from the `incoming_callbacks` array of a `lin2can_data` structure, clearing either all filters or only the one matching the provided `filter_id`.",2.5984987978515033,31.03448275862069,3.571428571428571,20.689655172413794,62.5432014465332
87,c,"A LIN driver callback that retrieves a pending outgoing frame from a message queue, copies its data for transmission, invokes a frame-specific completion callback, and returns a boolean indicating if a frame was successfully prepared","Retrieves a LIN frame from a message queue, copies its contents into a provided frame structure, and then calls a user-defined callback function to transmit the frame over CAN, logging debug information during the process.","Retrieves a LIN frame from a message queue, copies its contents into a provided frame structure, and then calls a user-defined callback function to transmit the frame over CAN.",21.41138987630128,48.48484848484848,25.0,42.42424242424242,74.51579570770264
88,c,"Acts as a LIN-to-CAN gateway callback, translating an incoming LIN frame by using its first data byte's top two bits as an index to find a target CAN ID, constructing a new CAN frame with the translated ID and a payload where those index bits are masked out, and finally invoking a registered handler with the resulting CAN frame","Translates incoming LIN frames into CAN frames by mapping the LIN ID to a CAN ID, extracting the payload, and invoking a registered callback function with the translated CAN frame and user data.","Translates incoming LIN frames into CAN frames by mapping the LIN ID to a CAN ID, extracting the payload, and invoking a registered callback function with the translated CAN frame and user data.",6.036990159834966,50.5263157894737,15.053763440860216,35.78947368421053,71.87964916229248
89,c,"Initializes a high-voltage shield by configuring its Output Enable (OE) GPIO, writing a zeroed state to its hardware registers, and then setting the OE pin to enable the device's outputs, logging errors at each step","Initializes the HV shield device by configuring the output enable GPIO pin, clearing the register data, updating the registers, and enabling the output, logging errors if any step fails.","Initializes the HV shield device by configuring the output enable GPIO pin, clearing the register data, updating the registers, and enabling the output, logging errors if any step fails.",7.835891185759159,48.484848484848484,12.5,39.3939393939394,76.21691226959229
90,c,"Sets the gain for a specified DAC (0 or 1) on a high-voltage shield by updating its value in a cached data structure and then calling an update function to write the new configuration to the hardware, returning an error for an invalid DAC index","Sets the gain value of a specified DAC (0 or 1) within the HV shield device's registers and then updates the shield's configuration, returning an error if the DAC number is invalid.","Sets the gain value of a specified DAC (0 or 1) within the HV shield device's registers and then updates the shield's configuration, returning an error if the DAC number is invalid or if the update fails.",24.57527740890185,51.764705882352935,24.096385542168676,42.35294117647059,76.69110298156738
91,c,"Enables or disables a specific GPIO output on a high-voltage shield by validating the pin index (0-31), remapping it via a nibble-swap, modifying a cached register bit, and then calling a helper function to write the update to the hardware","Enables or disables a GPIO output pin on an HV shield device by manipulating a bitfield within a register, after validating the index and adjusting it based on the pin's position within the 8-pin groups.","Enables or disables a GPIO output pin on an HV shield device by manipulating a bitfield within a register, after validating the index and adjusting it based on the pin's position within the 8-pin groups, and then updating the device's registers.",10.421820296215579,48.275862068965516,16.470588235294116,36.7816091954023,75.76936483383179
92,c,"A callback function that forwards a received CAN frame from a source device to a destination device (passed via `user_data`) using a non-blocking send operation, logging a debug message on successful queuing or a warning on failure","Routes incoming CAN frames from one device to another by forwarding them using the `can_send` function, logging a warning if the forwarding fails and a debug message if successful.","Routes incoming CAN frames from one device to another by forwarding them using the `can_send` function, logging a warning if the forwarding fails and a debug message if successful.",7.445219309831007,40.579710144927546,14.92537313432836,31.884057971014496,76.72128081321716
93,c,"Configures a CAN message router by iterating through an array of routing entries, adding a receive filter to a source CAN interface for each entry that uses a callback to forward matching frames to a destination interface, and returns an error if any filter registration fails","Registers a set of CAN router entries by adding corresponding receive filters to the CAN driver, associating each filter with a callback function and a destination address, and logging errors if any registration fails.","Registers a set of CAN router entries by adding corresponding receive filters to the CAN driver, associating each filter with a callback function and a destination address, and returning an error if any registration fails.",9.11255207315008,56.790123456790134,15.18987341772152,49.382716049382715,79.53489422798157
94,c,"Initializes the CAN router by iterating through all statically-defined routing tables found in a dedicated linker section and registering their entries, returning an error if any registration fails","Initializes the CAN router by iterating through a predefined table of CAN router entries and registering each entry, returning an error if any registration fails.","Initializes the CAN router by registering each entry from a predefined table, returning an error if any registration fails.",35.43576047024438,58.333333333333336,43.47826086956522,54.166666666666664,85.50821542739868
95,c,"Iterates through a pre-configured list of low-voltage GPIOs, setting the state of each pin enabled by an input mask to the corresponding bit in a value word, logging and returning an error if any underlying GPIO operation fails","Iterates through a configuration of GPIO pins, setting the specified pins to a given value if their corresponding bit is set in the mask, and returning an error if any individual pin setting fails.","Iterates through a configuration of GPIO pins, setting the specified pins to a given value if their corresponding bit is set in the mask, and returning an error if any individual pin setting fails.",21.28517699115181,62.16216216216216,24.999999999999993,45.945945945945944,76.61815285682678
96,c,"Populates an output parameter with the number of available Abstract LIN callback slots, calculated by subtracting the used count from a configured maximum, returning an error if the parameter is a null pointer","Retrieves the number of free callback slots available for a given abstract LIN device, storing the result in the provided pointer, and returning an error if the pointer is null.","Calculates and returns the number of free callback slots for a given abstract LIN device, storing the result in the provided pointer, and returning an error if the pointer is null.",16.844791262090105,53.125,25.80645161290323,40.625,75.89789032936096
97,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","Registers a callback function to be invoked when a LIN message with a specific frame ID and size is received, storing the callback and associated data in a lookup table for later execution.","Registers a callback function to be invoked when a LIN message with a specific frame ID and size is received, storing the callback and associated data in a lookup table for later execution, and returning an error if the input parameters are invalid.",7.886334122942658,55.81395348837209,19.047619047619047,39.53488372093023,70.51815986633301
98,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","Registers a callback function to be invoked when a specific outgoing LIN frame with a given ID and size is transmitted, storing the callback and associated data in a lookup table, and returning an error if the input parameters are invalid or the table is full.","Registers a callback function to be invoked when a specific outgoing LIN frame with a given ID and size is transmitted, storing the callback and associated data in a lookup table, and returning an error if the input parameters are invalid or the table is full.",7.9068665183447235,53.93258426966292,18.39080459770115,42.69662921348315,70.63151001930237
99,c,"Sets the active LIN schedule table by index, first validating the index and then using a semaphore to thread-safely update the scheduler's state and reset its entry pointer to the start of the new table","Sets the active table index for a given abstract LIN scheduler, resetting the current entry index to 0 and acquiring/releasing a semaphore to ensure exclusive access to the active table.","Sets the active table index for a given abstract LIN scheduler, resetting the current entry index to 0 and acquiring/releasing a semaphore to ensure exclusive access to the active table, returning an error if the table index is out of range.",7.0179138388543345,48.101265822784804,12.987012987012989,37.9746835443038,70.1916754245758
100,c,"Disables a LIN scheduler by first checking if it's already stopped, then taking a semaphore to safely wait for the current operation to complete before setting the active schedule table index to -1","Disables a LIN scheduler by setting its current table index to -1 and decrementing its active semaphore, ensuring the scheduler is no longer processing messages.","Disables a LIN scheduler by setting its current table index to -1 and decrementing its active semaphore, ensuring the scheduler is no longer processing messages.",19.08109014238827,47.45762711864407,24.56140350877193,33.898305084745765,71.5985894203186
