id,language,reference,generated,generated_rci,bleu_score,rouge1,rouge2,rougeL,bertscore_f1
2,python,"Raises an exception if the specified 'datatype' is unsupported, otherwise retrieves that type's validation function and returns the boolean result of calling it with the provided 'value'",This function checks if a given value conforms to a specified datatype by retrieving the corresponding type object and applying it to the value.,This function validates if a value matches a specified datatype by retrieving the corresponding type object and checking if the value is an instance of that type.,3.9936381761886635,47.27272727272727,11.320754716981133,25.454545454545453,65.60074090957642
3,python,"Validates that a given value, or each value in a list, is an integer that fits within the numerical range defined by a specified bit-width and signedness",This function checks if a given value or list of values are within the specified range for a signed or unsigned integer of a given bit width.,This function validates if a given value or list of values falls within the inclusive range of a signed or unsigned integer with a specified bit width.,8.066469669770399,54.54545454545454,26.41509433962264,47.27272727272727,79.44944500923157
4,python,"Returns the type definition tuple from a class-level list of types that matches the provided 'datatype' name, or returns None if no match is found","This function retrieves a tuple containing the datatype, a callable, and a list of strings from a class's `types` attribute, given a specified datatype string, or returns `None` if no match is found.","This function searches a class's `types` attribute for a tuple matching a given datatype string and returns that tuple (containing the datatype, a callable, and a list of strings) or `None` if no match is found.",10.763774116412968,53.968253968253975,22.950819672131146,41.26984126984127,71.8887209892273
5,python,Returns a dictionary mapping the short name to the full FQN for all dynamic datatypes that exist in the same namespace as the provided FQN,"This function identifies and returns a dictionary of namespaced datatypes from a list of dynamic datatypes, based on whether the provided fully qualified name (FQN) starts with a prefix of any of the datatypes, excluding the FQN itself.","This function identifies and returns a dictionary of namespaced datatypes from a list of dynamic datatypes, based on whether the provided fully qualified name (FQN) starts with a prefix of any of the datatypes, excluding the FQN itself and its immediate parent.",3.1331109054407613,35.82089552238806,12.307692307692307,26.865671641791046,62.10431456565857
7,python,"Parses a type string to create an `ApiGearType` object, mapping common primitive types to their ApiGear equivalents, sanitizing custom type names by replacing dots with underscores, and setting an array flag based on a ""[]"" suffix","The function `get_apigear_datatype` converts a string representation of a data type (e.g., ""int32"", ""string"", ""double[]"") into an `ApiGearType` object, handling basic types, floating-point types, booleans, strings, and arrays.","The function `get_apigear_datatype` converts a string representation of a data type (e.g., ""int32"", ""string"", ""double[]"") into an `ApiGearType` object, mapping common types to their corresponding `ApiGearBasicType` values and handling arrays.",17.559229207751578,41.1764705882353,18.18181818181818,35.29411764705882,66.48716926574707
8,python,"Creates an `ApiGearProperty` by converting the VSS node's datatype to a supported ApiGear type and copying its description, returning `None` and logging a warning if the datatype is not supported","This function generates an `ApiGearProperty` object from a `VSSNode` and a specified datatype, populating its type and description if available.","This function generates an `ApiGearProperty` object from a `VSSNode` and a specified datatype, returning `None` if the datatype is unsupported.",25.021739649521958,47.05882352941176,20.40816326530612,39.21568627450981,76.32290720939636
10,python,"Loads and parses multiple VSpec files from specified paths, using a list of include directories, then merges them into a single composite VSpec object and returns it, raising an exception if no files are successfully loaded","This function loads and merges multiple VSpec files (specified by paths) along with any specified include directories, logging the process and raising an exception if no specs are loaded.","This function loads and merges multiple VSpec files (specified by paths) and include directories, logging the process and raising an exception if no specs are loaded.",16.024777804768874,58.06451612903226,26.666666666666668,54.83870967741936,78.77213954925537
11,python,"Recursively updates a 'base' dictionary with an 'update' dictionary, merging nested dictionaries for common keys and overwriting or adding all other key-value pairs","Recursively merges a dictionary `update` into a base dictionary `base`, updating nested dictionaries and overwriting non-dictionary values.","Recursively merges a dictionary `update` into a base dictionary `base`, updating nested dictionaries and overwriting non-dictionary values in place.",5.217592866832707,45.45454545454545,19.04761904761905,40.909090909090914,73.54697585105896
12,python,"Asserts that the input value, if not None, is a valid 'constUID' formatted as an 8-digit hexadecimal string prefixed with '0x', returning the value if the check passes","This function validates if a given string is a valid hexadecimal constant UID (e.g., ""0x12345678"") and returns the original string if valid, otherwise returns None.","This function validates if a given string is a valid hexadecimal constant UID (e.g., ""0x12345678"") and returns the original string if valid, otherwise raises an assertion error.",5.132575833120712,31.578947368421055,7.2727272727272725,24.561403508771928,69.16491985321045
13,python,"Initializes a VSSRaw model and attempts to resolve it, returning the successfully resolved model or the original unresolved model if resolution fails due to a validation or model error","This function creates a `VSSRaw` object from input data, attempts to resolve it using `resolve_vss_raw`, and returns the resolved object or the original if resolution fails, logging a debug message in case of failure.","This function creates a `VSSRaw` object from input data, attempts to resolve it using `resolve_vss_raw`, and returns the resolved object or the original if resolution fails, logging a debug message in case of failure and returning the initialized `VSSRaw` object.",9.333506485067504,47.88732394366197,26.08695652173913,42.25352112676057,67.58795976638794
14,python,"Asserts that each string in the input list is a valid datatype by checking against a master list, returning the original list if all values are valid","This function validates a list of datatypes against a predefined set of valid datatypes, raising an assertion error if any invalid datatypes are found.","This function validates a list of datatypes, raising an assertion error if any are not present in the predefined set of valid datatypes.",3.7784112039641315,27.999999999999996,4.166666666666667,20.0,64.41311240196228
15,python,"Traverses a VSSNode tree to generate a formatted string, displaying each node's name followed by the values of any specified attributes found on it","This function recursively traverses a VSSNode tree, rendering each node's name and specified attributes (if present) as a formatted string suitable for display or logging.","This function recursively traverses a VSSNode tree, rendering each node's name and specified attributes (if present) as a formatted string.",14.300518019070676,56.52173913043478,40.909090909090914,43.47826086956522,84.23213362693787
16,python,"Recursively traverses up the parent hierarchy to find and return the first non-instance ancestor node and the traversal depth, raising an exception if the starting node is not a branch or if no root is found","Recursively traverses up the VSS tree to find the root instance node, incrementing the depth counter with each level, and raising an exception if no instance root is found.","Recursively traverses up the VSS tree to find the root instance node, incrementing the depth counter with each level, and raising a `NoInstanceRootException` if no instance root is found.",12.597866166504096,57.57575757575758,21.875000000000004,54.545454545454554,73.65322709083557
17,python,Recursively calculates the depth of the first-found branch of children where each node is a `VSSDataBranch` with its `is_instance` flag set,Recursively counts the depth of instance children within a VSSDataBranch hierarchy.,"Recursively counts the depth of instance children within a VSSDataBranch hierarchy, starting from the current node.",6.551935177206074,51.28205128205128,16.216216216216214,35.8974358974359,74.91921782493591
18,python,Returns a list of node IDs from an input list whose expected parent's name matches the provided `name`,The function `find_children_ids` identifies and returns a list of node IDs whose expected parent is a specified name.,The function `find_children_ids` identifies and returns a list of node IDs that have a specified name as their expected parent.,15.04843536148922,48.78048780487805,30.769230769230766,39.02439024390244,70.51496505737305
19,python,"Retrieves an attribute from an object, returning a specified default value if the attribute is missing or its value is `None`","Safely retrieves an attribute from an object, returning a default value if the attribute is not found or is None.","Safely retrieves an attribute from an object, returning a specified default value if the attribute is not found or is None.",62.79122620909558,85.71428571428571,75.0,85.71428571428571,87.98313736915588
20,python,Generates a `proto3` file from a VSS tree by first writing import statements for complex data types and then converting each branch in the tree into a corresponding protobuf message,"This function recursively traverses a VSS signal tree, generating and writing a .proto file containing message definitions for each branch node, including optional fields and static UIDs if specified, and adding necessary import statements for referenced data types.","This function recursively traverses a VSS signal tree, generating a .proto file containing message definitions for each branch node, including optional fields and static UIDs if specified, and adding import statements for referenced data types.",6.320326752750678,43.07692307692308,15.873015873015872,24.615384615384613,69.50456500053406
21,python,"Traverses a VSS tree to find all terminal instance branches, grouping their relative names into a dictionary where each key is the fully qualified name of the original branch they instantiate","This function recursively traverses a VSS tree to identify and collect the fully qualified names of all instance nodes (i.e., data branches marked as instances) that are not themselves children of other instance nodes, grouping them by their instance root node.","This function recursively traverses a VSS tree to identify and collect the fully qualified names of all instance nodes (i.e., data branches marked as instances) that are not themselves children of other instance nodes, grouping them by their instance root node's fully qualified name.",9.112438336339672,41.55844155844156,18.666666666666668,33.76623376623377,67.89280772209167
22,python,Checks if a given VSSNode is a leaf by verifying its 'data' attribute is an instance of VSSDataDatatype,The function `is_VSS_leaf` checks if a given `VSSNode` represents a leaf node in a VSS tree by verifying if its `data` attribute is an instance of `VSSDataDatatype`.,The function `is_VSS_leaf` determines if a `VSSNode` is a leaf node by checking if its `data` attribute is of type `VSSDataDatatype`.,6.814385179012219,63.41463414634146,35.8974358974359,63.41463414634146,80.68820238113403
23,python,Returns `True` if the given `VSSNode`'s data is a `VSSDataBranch` and its `is_instance` attribute is `False`,The function `is_VSS_branch` checks if a given `VSSNode` represents a branch in a VSS data structure and is not an instance.,The function `is_VSS_branch` checks if a given `VSSNode` represents a branch in a VSS data structure and is not an instance of a VSSDataBranch.,12.30294019351272,50.0,9.523809523809526,31.818181818181817,67.0101523399353
24,python,Returns True if the node's data is a VSSDataBranch and its 'is_instance' attribute is True,This function checks if a given VSSNode represents an instance of a VSSDataBranch.,This function determines if a VSSNode's data is an instance of a VSSDataBranch.,6.854930724411443,45.16129032258064,20.689655172413794,38.70967741935484,72.92217016220093
25,python,"Calculates a 32-bit FNV-1 hash for a given byte string by iterating through each byte, multiplying the current hash by the FNV prime, and then performing a bitwise XOR with the byte",This function calculates a 32-bit FNV-1a hash value for a given byte string identifier.,This function computes a 32-bit FNV-1a hash value for a given byte string identifier.,12.042379926960814,40.0,29.166666666666664,40.0,72.93345332145691
28,java,"Inflates the `card_fragment` layout, finds and assigns the card's title and icon views, and returns the resulting root view","This method inflates a layout (`card_fragment`) to create a view, finds the title and icon elements within that layout, and returns the inflated view.","This method inflates a layout (`card_fragment`) to create a view, finds the title and icon elements within that layout, and returns the inflated view for use in a fragment.",20.878032123137636,50.98039215686274,20.408163265306122,47.05882352941176,72.52704501152039
29,java,"Updates an `ImageButton`'s icon and click listener from a content object and makes it visible, or hides the button if the content is null","This method updates the visibility and content of an `ImageButton` based on the presence and properties of a `DescriptiveTextWithControlsView.Control` object, setting its icon and click listener if present, otherwise hiding it.","This method updates the visibility and content of an `ImageButton` based on the presence and properties of a `DescriptiveTextWithControlsView.Control` object, setting its icon and click listener if present, otherwise hiding it.",13.88817115201102,52.63157894736842,14.545454545454547,28.07017543859649,69.29685473442078
30,java,"Lazily inflates a `ViewStub` to create a descriptive text layout, caches references to its child views (title, subtitle, image), and returns the inflated layout","This method lazily initializes and returns a `View` representing a descriptive text-only layout, inflating it from a `ViewStub` if it hasn't been initialized yet and caching it for subsequent use.","This method lazily initializes and returns a `View` representing a descriptive text-only layout, inflating it from a `ViewStub` if it hasn't been initialized yet and caching the inflated view and its child views for subsequent use.",11.080881727607863,45.16129032258065,23.333333333333332,29.03225806451613,70.69599032402039
31,java,Updates the header view on the main UI thread by making its root view visible and setting the card's title and icon from the provided `CardHeader` object,This method updates the visual elements of a card header view (title and icon) within the main thread of the application's activity.,"This method updates the card header view's title and icon within the main thread of the activity, making the root view visible.",10.450840740671664,70.58823529411765,36.73469387755102,43.13725490196078,77.86821722984314
32,java,"Lazily inflates a `ViewStub` to create and return the text block layout view, while also finding and caching references to its child text views on the first call","This method lazily initializes and returns a `View` representing a text block layout, inflating it from a `ViewStub` if it hasn't been created yet and retrieving references to its child views.","This method lazily initializes and returns a `View` representing a text block layout, inflating it from a `ViewStub` if it hasn't been created yet and retrieving references to its child views for later use.",15.293885404881333,44.44444444444445,19.672131147540984,34.920634920634924,74.30843114852905
33,java,"Queries the `PackageManager` for a `MediaBrowserService` within a given package and returns a `ComponentName` for the first one found, or `null` if none exist",This Java code retrieves the default media browsing service component name for a given package by querying the package manager for services that implement the MediaBrowserService interface.,"This Java code retrieves the default media browsing service component name for a given package by querying the package manager for services that implement the MediaBrowserService interface, returning null if no such service is found.",5.805041511766121,37.28813559322034,14.035087719298241,30.508474576271183,71.41966819763184
34,java,"Determines if a component should be added to a launchable list, returning `false` if its package is explicitly hidden or if it's a custom media component and launchable apps are also being shown, otherwise returning `true` for valid launchable or media service types","This method determines whether a given component should be added to a list of launchables based on whether its package is hidden, its type is a custom media component, and the desired app types to show.","This method determines whether a given component should be added to a list of launchables based on whether its package is hidden, its type is a custom media component, and the desired app types to show.",17.858761613947554,47.5,28.205128205128204,47.5,71.9096302986145
35,java,"Sets the car's media source to a given component in browse mode and finishes the context if it's an Activity, catching and logging a `CarNotConnectedException` if the car service is unavailable","This method sets the media source of a specified component to browse mode and finishes the activity if the context is an activity, handling potential CarNotConnectedException.","This method sets the media source of a specified component to browse mode and finishes the activity if the context is an activity, while logging any CarNotConnectedException.",16.279800500010865,66.66666666666666,31.03448275862069,53.333333333333336,76.15078687667847
36,java,"Safely checks if a given activity is distraction optimized using the `CarPackageManager`, returning `false` and logging an error if the manager is null or a `CarNotConnectedException` is caught","This method checks if a specified activity within a given package is optimized for distraction-free operation on a connected car, returning `true` if it is and logging an error if the car is not connected.","This method determines whether a specified activity within a given package is optimized for distraction-free operation on a connected car, returning `true` if it is and logging an error if the car is not connected.",18.435104536885888,53.125,19.35483870967742,37.5,70.69790959358215
38,java,"Retrieves a specific, resolvable map `Intent` from a configured list if it matches the system's default map app, otherwise falls back to a generic `Intent` for any map application","This method retrieves the preferred map application intent from a configuration array, prioritizing user-specified apps over the default system map app if they are valid and resolve to an activity.","This method retrieves the preferred map application intent, prioritizing user-specified apps over the default system map app if they are valid and resolve to an activity.",3.602576576934816,38.59649122807017,7.272727272727273,28.070175438596497,63.065922260284424
39,java,"Lazily initializes a set of `HomeCardModule`s by reflectively instantiating class names from a configuration array, and then uses a `FragmentTransaction` to add each module's card view to the UI layout","This method dynamically instantiates and initializes `HomeCardModule` objects based on a list of class names defined in a resource array, adds them to a set, and then replaces fragments in the activity's layout with the corresponding card views from each module.","This method dynamically instantiates and initializes `HomeCardModule` objects based on class names defined in a resource array, adds them to a set, and then replaces fragments in the activity's layout with the corresponding card views from each module, logging the instantiation time for debugging purposes.",6.8622816003992195,46.15384615384615,10.526315789473683,28.20512820512821,75.39951205253601
40,java,"Iterates through a list of appeared tasks and uses the `ActivityTaskManager` to remove any task that is in multi-window mode, logging it as a dangling task","This method iterates through a list of task appeared information, removes any tasks that were launched in multi-window mode, and logs a debug message if a task is removed.",This method iterates through a list of task appeared information and removes any tasks launched in multi-window mode to clean up dangling tasks.,13.754079912303155,62.7450980392157,28.571428571428577,50.98039215686274,77.56847739219666
41,java,Parses the mode from the current Intent and sets the title for both the Activity and the CarUi toolbar using the string resource ID defined in that mode,"This method updates the application's mode based on intent data, setting the title of both the activity and the toolbar accordingly.",This method updates the application's mode based on intent data and sets the title of the activity and toolbar to reflect the new mode.,10.769491659386492,49.056603773584904,19.607843137254903,49.056603773584904,71.98212742805481
42,java,"Lazily initializes and returns a `Chronometer` by finding it in the layout, while also finding and caching its associated separator view on the first call","This method lazily initializes and returns a `Chronometer` view (and its separator) from the layout if it hasn't been initialized yet, ensuring it's only created when needed.","This method lazily initializes and returns a `Chronometer` view (and its separator) from the layout if it hasn't been initialized yet, ensuring it's only created when needed and cached for later use.",18.555209289044107,44.06779661016949,21.05263157894737,33.898305084745765,68.59381198883057
43,java,"Lazily inflates a media layout from a `ViewStub`, finds and caches its title and subtitle views, initializes its media playback controls bar via a presenter, and returns the inflated view","This method lazily initializes and returns a `View` representing the media layout, inflating it from a `ViewStub` if it doesn't already exist, and setting up its title, subtitle, and playback controls.","This method lazily initializes and returns a `View` representing the media layout, inflating it from a `ViewStub` if it doesn't already exist, and initializing the presenter with the media control bar.",14.3728033123722,51.61290322580646,13.333333333333334,32.25806451612903,69.13298964500427
44,java,"If a valid `Drawable` and card size are provided, this method scales the image to a square based on the card's largest dimension, blurs it, and sets the resulting bitmap as the animated, visible card background","This method updates the background image of a card view by scaling a provided drawable to a square size, blurring it, and setting it as the card's background image with a visual transition.","This method updates the card's background image by scaling a provided drawable to a square size, blurring it, and setting it as the card's background image.",7.387423971647636,58.461538461538474,22.22222222222222,40.0,71.34765386581421
45,java,Makes the media layout view visible and updates its title and subtitle with the provided text,This method updates the visibility and text content of a media layout view with a given title and subtitle.,This method updates the visibility and text content of a media layout view to display a given title and subtitle.,12.918025833717252,55.55555555555556,23.52941176470588,38.888888888888886,77.62560248374939
46,java,"If the content's start time is positive, this method makes a chronometer and a separator visible, sets the chronometer's base time, and starts it; otherwise, it hides both views","This method updates the visibility and state of a chronometer and separator based on the start time of an audio content, displaying them if the start time is positive and hiding them otherwise.","This method controls the visibility of a chronometer and separator based on the start time of an audio content, showing them when the start time is positive and hiding them otherwise.",11.935715928626076,51.61290322580645,20.000000000000004,32.25806451612903,71.94830179214478
47,java,Registers a member callback to the provided `Call` object after verifying it is not null,Registers a callback to a newly added `Call` object if it is not null.,Registers a callback on a non-null `Call` object to receive updates related to it.,18.842393723950345,53.333333333333336,14.285714285714285,40.00000000000001,77.02951431274414
48,java,"Handles the removal of a call by clearing the current call and card content, notifying the presenter of the model update, and unregistering its callback from the call object for cleanup","This method handles the removal of a call by setting related variables to null, notifying the presenter of the model update, and unregistering the callback from the removed call.","This method handles the removal of a call by clearing associated data, notifying the presenter of a model update, and unregistering the callback from the removed call.",43.07881654443836,72.41379310344827,53.57142857142857,68.9655172413793,83.03030133247375
49,java,"Formats a phone number to create a new `DescriptiveTextWithControlsView` with call details and controls, then notifies the presenter that the model has been updated","This method formats a phone number, updates a view with the formatted number and associated call controls, and notifies the presenter of the model update.","This method formats a phone number, updates a view with the formatted number and call controls, and notifies the presenter of the model update.",11.88359194952101,58.333333333333336,26.08695652173913,54.166666666666664,76.40284299850464
50,java,"Initializes mute, end call, and dialpad buttons by assigning each an icon and a click listener to toggle mute status, disconnect the current call, and delegate to an onClick handler, respectively","Initializes the mute, end call, and dialpad buttons for an in-call UI, assigning icons and actions to each button.","Initializes the mute, end call, and dialpad buttons for an in-call UI, assigning icons and actions to each button to control call muting, disconnection, and dialpad access.",24.439347178157934,54.23728813559322,17.543859649122805,40.67796610169491,73.66769313812256
53,cpp,"When a new listener is added, this callback immediately notifies it with an `AVAILABLE` status if the D-Bus connection is already active",This function notifies a listener of the availability status (AVAILABLE) if a new listener is added and the DBus connection is currently connected.,"This function notifies a listener of the availability status (AVAILABLE) if a new listener is added and the DBus connection is currently connected, ignoring the subscription.",15.604716742003296,53.06122448979592,21.276595744680854,32.6530612244898,73.8840103149414
54,cpp,"Atomically registers a given thread to be joined later by adding it to a list, but only if its associated connection is active and the thread is not already present in the list",The function `joinOnExit` adds a thread to a vector of threads to be joined upon program exit if a connection is associated with it.,"The function `joinOnExit` adds a thread to a vector of threads to be joined upon program exit if a connection is associated with it, ensuring all threads are joined before termination.",7.131290370839495,40.625,16.129032258064516,25.0,61.004531383514404
56,cpp,A callback function that handles the removal of a D-Bus watch by stopping its monitoring and disassociating the high-level wrapper object from the underlying `libdbus` watch,This function handles the removal of a DBus watch by stopping its monitoring if it's ready and clearing its associated data.,"This function handles the removal of a DBus watch, stopping its monitoring if it's ready and clearing its associated data to prevent further notifications.",18.13585789583184,41.50943396226415,23.52941176470588,41.50943396226415,73.63690137863159
57,cpp,"Handles the toggling of a D-Bus watch by creating a C++ wrapper object for it on first use, and then starting or stopping its monitoring based on its readiness status","This function manages a DBus watch object, either initializing it to start watching a DBus connection or stopping it if it's already watching, based on the provided `libdbusWatch` and associated context.","This function manages a DBus watch object, initializing it to start watching a DBus connection or stopping it if it's already watching, based on the provided `libdbusWatch` and associated context, ensuring proper dispatch source dependency.",3.3331687445989306,32.83582089552239,6.153846153846153,23.88059701492537,66.48571491241455
58,cpp,"Lazily initializes and returns a thread-safe, singleton `DBusObjectManager` instance using a double-checked locking pattern","This function lazily initializes and returns a shared pointer to a `DBusObjectManager` object, ensuring thread-safe creation via a mutex lock.","This function lazily initializes and returns a shared pointer to a `DBusObjectManager` object, ensuring thread-safe creation via a mutex lock and memoization.",14.299133016633656,46.15384615384615,27.027027027027025,41.02564102564102,78.66458892822266
59,cpp,"Decrements a reference count for a given D-Bus service name, releasing it from the bus if the count reaches zero, and returns `true` on success or `false` if the name was not being tracked","This function releases a service name from the D-Bus connection, decrementing its usage count and calling `dbus_bus_release_name` if the count reaches zero, returning true if the release was successful.","This function releases a service name from the D-Bus connection, decrementing its usage count and calling `dbus_bus_release_name` if the count reaches zero, returning true if the release was successful or if the count was already zero.",16.586548867747933,56.00000000000001,21.91780821917808,42.666666666666664,70.98304629325867
60,cpp,"Steals the reply from a `DBusPendingCall` handle and wraps it in a new `DBusMessage` object that takes ownership, returning an empty message if the input handle is null","This function converts a libdbus pending call reply to a DBusMessage object, handling null input and managing reference counts.","This function converts a libdbus pending call reply to a DBusMessage object, handling null input and optionally increasing the libdbus message's reference count.",1.9449360692904243,38.46153846153846,3.9999999999999996,19.23076923076923,68.49620342254639
61,cpp,Thread-safely deallocates a collection of asynchronous D-Bus message reply handlers by moving them from a protected member list to a local copy before iterating through and deleting each one,"This function safely deletes all pending asynchronous message reply handlers by moving them from a temporary vector to a vector for deletion, then iterating and deleting each handler.","This function safely deletes all pending asynchronous message reply handlers by moving them from a temporary vector to a vector for deletion, then iterating and deleting each handler to prevent memory leaks.",26.206781850907316,50.79365079365079,32.78688524590164,50.79365079365079,73.99270534515381
62,cpp,Thread-safely notifies all registered signal handlers of a successful state by invoking their `onSpecificError` callback with a `SUCCESS` status for each associated signal tag,"This function iterates through registered signal handlers and calls their `onSpecificError` method with a success status for each registered error tag, effectively notifying handlers that previously pending error states have resolved.","This function iterates through registered signal handlers and calls their `onSpecificError` method with a success status for each registered error tag, notifying handlers that previously pending error states have resolved.",13.904238235797779,43.63636363636364,30.18867924528302,43.63636363636364,74.55705404281616
63,cpp,"Thread-safely removes a connection, identified by its ID, from an internal collection if it exists","The `releaseConnection` function removes a connection from a map of connections, protected by a mutex, to ensure thread-safe access and deletion.","The `releaseConnection` function removes a connection from a map of connections, protected by a mutex, to ensure thread-safe access and deletion of connections.",6.143498010483918,30.0,10.526315789473685,20.0,63.62757086753845
64,cpp,"Handles an incoming D-Bus signal by dispatching it to the appropriate handler for either ""InterfacesAdded"" or ""InterfacesRemoved"" events based on the message's member name","This code handles DBus messages related to instance availability status changes, dispatching the appropriate signal (either `onInterfacesAddedSignal` or `onInterfacesRemovedSignal`) to the `instanceAvblStatusEvent_` object based on the message content.","This code handles DBus messages indicating changes in instance availability status, routing them to the corresponding signal handler (`onInterfacesAddedSignal` or `onInterfacesRemovedSignal`) within the `instanceAvblStatusEvent_` object.",2.6988233895132607,27.450980392156865,4.081632653061225,23.52941176470588,69.39415335655212
65,cpp,"Retrieves available service instances from a registry, translates the internal D-Bus representation into a vector of `DBusAddress` objects, and populates the provided output vector and status parameter","Retrieves available DBus service instances for a given service and object path, populating a vector of DBus addresses and setting a success status.","Retrieves available DBus service instances for a given service and object path, translating the result into a vector of DBus addresses and setting a success status.",11.671902988689208,48.14814814814815,19.23076923076923,44.44444444444445,75.59643387794495
66,cpp,"Gets the availability status of a service instance by translating its identifier to a D-Bus address and querying a registry, setting the result and a success status in output parameters",This function determines the availability status of a DBus service instance by translating a CommonAPI address to a DBus address and checking if the corresponding service instance is alive in the DBus registry.,"This function determines the availability status of a DBus service instance by translating a CommonAPI address to a DBus address and checking if the corresponding service instance is alive in the DBus registry, setting the availability status and call status accordingly.",22.09272285481984,55.55555555555556,31.428571428571427,50.0,73.88233542442322
67,cpp,"Handles a D-Bus ""InterfacesRemoved"" signal by parsing the object path and interface names, and for any interface matching the one being observed, notifies listeners that its status has changed to ""NOT_AVAILABLE","This function handles the `InterfacesRemoved` signal from the DBus bus, removing specified interfaces from the local proxy and notifying listeners if the removed interface was being observed.","This function handles the `InterfacesRemoved` signal from the DBus bus, removing specified interfaces from the local proxy and notifying listeners if the removed interface was being observed and the removal was successful.",2.970690126673372,36.92307692307692,6.349206349206349,24.615384615384617,67.97863841056824
68,cpp,Notifies listeners of an interface's availability change by translating its D-Bus path and name into a generic CommonAPI address,This function translates a DBus address to a common API address and notifies listeners of an interface's availability status change.,This function translates a DBus address to a common API address and notifies listeners of an interface's availability status change.,19.69221590285716,52.38095238095239,30.0,38.095238095238095,82.95897245407104
69,cpp,"Thread-safely schedules a task on the main event loop to notify a newly added listener, passing along its specific subscription details","This function registers a listener and its subscription with a DBus proxy, scheduling a function call to notify the listener when specific events occur via the main loop.","This function registers a listener and its subscription with a DBus proxy, scheduling a function call to notify the listener when specific events occur via the main loop.",4.62136266712202,44.0,8.333333333333332,20.0,70.20648121833801
70,cpp,Thread-safely removes all listeners from an internal collection that match the provided `Subscription` identifier,"This function removes a listener from a collection of listeners associated with a specific subscription, ensuring thread safety with a mutex.","This function removes a listener from a collection of listeners associated with a specific subscription, ensuring thread safety with a mutex and handling potential iterator invalidation during removal.",1.7557381354086663,27.906976744186046,0.0,18.6046511627907,67.03287363052368
71,cpp,Delegates the registration of a signal state handler for a specific subscription to the underlying connection object,This function adds a signal handler to the DBus proxy connection for a specific subscription.,"This function registers a signal handler with the DBus proxy connection, associating it with a specific subscription ID.",10.079037376973918,45.714285714285715,18.18181818181818,34.285714285714285,73.39246273040771
72,cpp,Handles the result of an asynchronous service instance query by translating the `DBusAddress` list to a string list on success and invoking a final callback with the call status and the translated list,"This function handles the asynchronous callback for retrieving available instances of a DBus proxy, translating the DBus addresses to strings and passing the status and instances to the provided callback function.","This function handles the asynchronous callback for retrieving available instances of a DBus proxy, translating DBus addresses to strings and passing the status and instances to the provided callback function.",3.3059781271893054,41.269841269841265,6.557377049180328,31.746031746031743,64.48550820350647
73,cpp,"Dispatches an incoming `DBusMessage` to a registered handler based on its object path and interface, or handles it as a standard introspection request, returning `true` if the message was processed","This function handles incoming DBus messages by routing them to the appropriate registered interface handler based on the object path and interface name, or by handling introspectable interface messages directly.","This function handles incoming DBus messages by routing them to the appropriate registered interface handler based on the object path and interface name, or by handling introspectable interface messages directly if no handler is found.",11.424261736422787,43.07692307692308,15.873015873015872,36.92307692307693,70.27620673179626
74,cpp,"Registers a D-Bus interface handler for a specific path, returning `false` if the exact handler is already registered, but allowing idempotent registration for standard `ObjectManager` and `Properties` interfaces","This function adds a `DBusInterfaceHandler` to a table of registered handlers for a given `DBusInterfaceHandlerPath`, checking for duplicates and handling special cases for `org.freedesktop.DBus.ObjectManager` and `org.freedesktop.DBus.Properties` interfaces.","This function adds a `DBusInterfaceHandler` to a table of registered handlers for a given `DBusInterfaceHandlerPath`, preventing duplicates and allowing special handling for `org.freedesktop.DBus.ObjectManager` and `org.freedesktop.DBus.Properties` interfaces.",8.997109299115706,32.786885245901644,10.169491525423728,29.50819672131148,65.20103216171265
75,cpp,"Registers a given `DBusInterfaceHandler` to a specific path in a table, returning `true` on success and `false` if the handler is already registered for that path","The function adds a DBusInterfaceHandler to a table of registered objects, keyed by interface path, ensuring no duplicates are added.","The function adds a DBusInterfaceHandler to a table of registered objects, keyed by interface path, and returns false if the handler already exists.",7.180438416640439,53.06122448979592,25.53191489361702,44.89795918367348,74.11473393440247
78,c,"Constructs and sends a 2-byte UDS positive response to an ECU Reset request, containing the positive response SID and the echoed reset type, over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","This function sends a positive response to an ECU reset request via ISOTP, using a predefined SID and the provided reset type.","This function sends a positive response to an ECU reset request via ISOTP, using a predefined SID and the provided reset type, logging any errors encountered during transmission.",15.207739433223802,52.94117647058824,30.303030303030305,47.05882352941176,76.04147791862488
79,c,"Processes a UDS ECU Reset request, validating the 2-byte message length, sending a positive response before triggering a system reboot for a 'hard reset', and sending a negative response for either an incorrect length or an unsupported reset sub-function","This function handles the ECU reset diagnostic service request, responding with an error if the message length is incorrect, performing a hard reset if requested, or returning a negative response if the reset type is unsupported.","This function handles the ECU reset diagnostic service request, responding with an error if the message length is incorrect or the reset type is unsupported, and performing a hard reset if requested.",3.495919165058702,43.83561643835617,11.267605633802818,27.397260273972602,73.21327924728394
80,c,"Constructs and sends a 4-byte UDS positive response for a ""Request Download"" service, specifying a maximum block length of 0x00D2, over a CAN bus using the ISO-TP protocol and logging an error on failure","This function sends a positive response to a download request via ISOTP, including a block size of 258 bytes, to a specified CAN ID.","This function sends a positive response to a download request via ISOTP, including a block size of 258 bytes, to a specified CAN ID, logging an error if the transmission fails.",6.158042839726997,47.76119402985074,12.307692307692307,41.7910447761194,74.82557892799377
81,c,"Constructs and sends a 2-byte UDS positive response for a Transfer Data request (containing the positive SID and the block sequence counter) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","This function sends a positive transfer data response message via ISOTP to a specified CAN ID, including the block sequence counter in the payload.","This function sends a positive transfer data response message via ISOTP to a specified CAN ID, including the block sequence counter in the payload to acknowledge receipt of a transfer data request.",7.915738460334575,42.25352112676056,20.289855072463766,28.169014084507044,72.14386463165283
82,c,"Constructs and sends a 5-byte UDS positive response for the Routine Control service (containing the routine control type, routine ID, and a result code) over a CAN bus via ISO-TP, logging an error if the transmission fails","This function sends a UDS routine control result message to a specified CAN ID using the isotp protocol, logging an error if the transmission fails.","This function sends a UDS routine control result message to a specified CAN ID using the isotp protocol, logging an error if the transmission fails.",17.461932411416605,53.125,25.80645161290323,46.875,74.2245614528656
83,c,"Constructs and sends a 1-byte UDS positive response for a Transfer Exit request (containing the request SID + 0x40) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","This function sends a positive response to a transfer exit request via ISOTP, using a predefined SID and logging any errors encountered during transmission.","This function sends a positive response to a transfer exit request via ISOTP, using a predefined SID and logging any errors encountered during transmission.",3.3274419738794894,47.45762711864407,17.54385964912281,37.28813559322034,73.49587082862854
85,c,"Searches a predefined `id_mapping` array for a given CAN ID and returns its corresponding index, or `0xff` if the ID is not found","This inline function maps a CAN identifier to a corresponding index within a predefined mapping table, returning the index or a default value if the identifier is not found.","This inline function maps a CAN identifier to a corresponding index within a predefined mapping table, returning the index or 0xff if the identifier is not found.",8.700793466646614,54.90196078431373,32.6530612244898,43.13725490196078,79.87160086631775
86,c,"Disables a specific LIN-to-CAN receive filter by clearing its callback pointer, or disables all filters if a special ID is passed, while ignoring out-of-bounds IDs","This function removes a specified incoming callback for a given filter ID from the `incoming_callbacks` array within the `lin2can_data` structure, effectively disabling the callback for that filter.",This function disables a specified incoming callback for a given filter ID by setting its callback function pointer to NULL within the `incoming_callbacks` array of the `lin2can_data` structure.,2.9025207558830606,37.28813559322034,7.017543859649124,27.11864406779661,62.17010021209717
87,c,"A LIN driver callback that retrieves a pending outgoing frame from a message queue, copies its data for transmission, invokes a frame-specific completion callback, and returns a boolean indicating if a frame was successfully prepared","This function retrieves a LIN frame from a queue, copies it to a provided frame structure, and then calls a user-defined callback function to transmit the frame via CAN.","This function retrieves a LIN frame from a queue, copies it to a provided frame structure, and then calls a user-defined callback function to transmit the frame via CAN.",8.377659033334108,42.42424242424242,15.625,36.36363636363636,74.00947213172913
88,c,"Acts as a LIN-to-CAN gateway callback, translating an incoming LIN frame by using its first data byte's top two bits as an index to find a target CAN ID, constructing a new CAN frame with the translated ID and a payload where those index bits are masked out, and finally invoking a registered handler with the resulting CAN frame",This function translates incoming LIN frames to CAN frames based on a mapping table and invokes a registered callback function with the translated CAN frame and user data.,"This function translates incoming LIN frames to CAN frames based on a mapping table and invokes a registered callback function with the translated CAN frame and user data, after logging the CAN ID.",3.843332168454696,40.0,15.053763440860216,25.26315789473685,68.73536705970764
89,c,"Initializes a high-voltage shield by configuring its Output Enable (OE) GPIO, writing a zeroed state to its hardware registers, and then setting the OE pin to enable the device's outputs, logging errors at each step","This function initializes the HV shield device by configuring the output enable GPIO pin, initializing the register data structure, updating the registers, and enabling the output.","This function initializes the HV shield device by configuring the output enable GPIO pin, initializing the register data structure, updating the registers, and enabling the output enable pin.",5.3694190732831935,43.07692307692308,9.523809523809526,33.84615384615385,70.98276615142822
90,c,"Sets the gain for a specified DAC (0 or 1) on a high-voltage shield by updating its value in a cached data structure and then calling an update function to write the new configuration to the hardware, returning an error for an invalid DAC index","This function sets the digital-to-analog converter (DAC) gain for a specific shield channel (0 or 1) within a device, updating the device's internal registers and triggering an update function.","This function sets the digital-to-analog converter (DAC) gain for a specific shield channel (0 or 1) within a device, updating the device's internal registers and triggering an update function to apply the change.",16.176094175985373,48.78048780487805,20.0,39.02439024390244,69.56777572631836
91,c,"Enables or disables a specific GPIO output on a high-voltage shield by validating the pin index (0-31), remapping it via a nibble-swap, modifying a cached register bit, and then calling a helper function to write the update to the hardware",This function enables or disables a specific GPIO output pin on an HV shield device by manipulating a bit in the `gpio_output` register and updating the device's internal state.,"This function enables or disables a specific GPIO output pin on an HV shield device by manipulating a bit in the `gpio_output` register and updating the device's internal state, after adjusting the index to account for a specific hardware layout.",13.406200732055037,54.117647058823536,14.457831325301207,37.64705882352941,73.63664507865906
92,c,"A callback function that forwards a received CAN frame from a source device to a destination device (passed via `user_data`) using a non-blocking send operation, logging a debug message on successful queuing or a warning on failure","This function routes CAN frames received on a specific device to another device using the `can_send` function, logging debug and warning messages for successful routing or transmission failures.","This function routes CAN frames received on a specific device to another device using the `can_send` function, logging debug messages for successful routing and warning messages for transmission failures.",3.3637575428390023,40.579710144927546,2.9850746268656714,34.78260869565217,78.1279444694519
93,c,"Configures a CAN message router by iterating through an array of routing entries, adding a receive filter to a source CAN interface for each entry that uses a callback to forward matching frames to a destination interface, and returns an error if any filter registration fails","This function registers multiple CAN router entries by adding corresponding receive filters to the CAN driver, associating each filter with a callback function and a destination pointer.","This function registers multiple CAN router entries by adding receive filters to the CAN driver, each associated with a callback function and a destination pointer.",2.5095804891933358,39.43661971830986,5.797101449275363,33.80281690140844,71.34395837783813
94,c,"Initializes the CAN router by iterating through all statically-defined routing tables found in a dedicated linker section and registering their entries, returning an error if any registration fails",This function initializes the CAN router by iterating through a predefined table of CAN router entries and registering each entry with the CAN router subsystem.,This function initializes the CAN router by registering each entry from a predefined table with the CAN router subsystem.,8.45798386962503,29.166666666666668,17.391304347826086,25.0,72.03705906867981
95,c,"Iterates through a pre-configured list of low-voltage GPIOs, setting the state of each pin enabled by an input mask to the corresponding bit in a value word, logging and returning an error if any underlying GPIO operation fails","This function sets the specified bits of a GPIO mask to a given value on a given port, iterating through the configured low-voltage GPIO pins and calling the `gpio_pin_set` function for each matching pin.","This function sets the specified bits of a GPIO mask to a given value on a given port, iterating through the configured low-voltage GPIO pins and calling the `gpio_pin_set` function for each matching pin.",2.89041952091582,41.55844155844156,5.333333333333333,20.77922077922078,69.05953884124756
96,c,"Populates an output parameter with the number of available Abstract LIN callback slots, calculated by subtracting the used count from a configured maximum, returning an error if the parameter is a null pointer",This function calculates and returns the number of free callback slots available for a given abstract LIN device by subtracting the number of used callbacks from the maximum allowed number of callbacks.,This function determines and returns the number of free callback slots for a given abstract LIN device by subtracting the number of currently used callbacks from the configured maximum number of callbacks.,9.20879983187038,49.23076923076923,22.22222222222222,36.92307692307692,71.37361764907837
97,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","This function registers a callback function to be invoked when a LIN bus message with a specific frame ID and size is received, storing the callback and associated data for later execution.","This function registers a callback function to be invoked when a LIN bus message with a specific frame ID and size is received, storing the callback and associated data for later execution.",4.83648399821631,48.0,16.43835616438356,34.66666666666667,66.20177626609802
98,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","This function registers an outgoing callback for a specific LIN frame ID and size, storing the callback function and user data within a device's abstract LIN data structure.",This function registers an outgoing callback function and associated user data for a specific LIN frame ID and size within a device's abstract LIN data structure.,9.092922779869136,45.714285714285715,17.647058823529413,34.285714285714285,64.48946595191956
99,c,"Sets the active LIN schedule table by index, first validating the index and then using a semaphore to thread-safely update the scheduler's state and reset its entry pointer to the start of the new table","This function sets the active table index for a LIN scheduler, ensuring only one table is active at a time by using a semaphore and resetting the entry index to the beginning of the selected table.","This function sets the active table index for a LIN scheduler, ensuring only one table is active at a time by using a semaphore and resetting the entry index to the beginning of the selected table, while also handling the case where a table was previously active.",5.484236895303142,50.0,14.634146341463413,38.095238095238095,70.27503252029419
100,c,"Disables a LIN scheduler by first checking if it's already stopped, then taking a semaphore to safely wait for the current operation to complete before setting the active schedule table index to -1","This function disables a LIN scheduler by setting its current table index to -1 and releasing a semaphore, ensuring no further messages are processed.","This function disables a LIN scheduler by setting its current table index to -1 and releasing a semaphore, preventing further message processing.",15.238125546095489,46.42857142857142,29.629629629629626,35.714285714285715,73.18714261054993
