id,language,reference,generated,generated_rci,bleu_score,rouge1,rouge2,rougeL,bertscore_f1
2,python,"Raises an exception if the specified 'datatype' is unsupported, otherwise retrieves that type's validation function and returns the boolean result of calling it with the provided 'value'",Checks if a given value conforms to a specified datatype by retrieving the corresponding type object and applying it to the value.”,Validates if a value matches a specified datatype by retrieving the type object and checking if the value is an instance of that type.”,3.896437856720855,46.15384615384615,12.0,26.923076923076923,64.89185690879822
3,python,"Validates that a given value, or each value in a list, is an integer that fits within the numerical range defined by a specified bit-width and signedness",Checks if a given value or list of values are within the specified range for a signed or unsigned integer of a given bit size.”,Checks if a given value or list of values are within the specified range for a signed or unsigned integer of a given bit size.”,7.508031292307835,49.056603773584904,15.686274509803924,37.73584905660378,78.3974826335907
4,python,"Returns the type definition tuple from a class-level list of types that matches the provided 'datatype' name, or returns None if no match is found","Retrieves a type definition (name, conversion function, and validation list) from a class's `types` attribute based on a given datatype string.”","Retrieves a type definition (name, conversion function, and validation list) from a class's `types` attribute based on a given datatype string, or returns `None` if no match is found.”",15.138597421779316,60.71428571428571,37.03703703703704,53.57142857142857,74.61429834365845
5,python,Returns a dictionary mapping the short name to the full FQN for all dynamic datatypes that exist in the same namespace as the provided FQN,"Identifies and returns a dictionary of namespaced datatypes that match a given fully qualified name (FQN) prefix, excluding the FQN itself.”","Identifies and returns a dictionary of namespaced datatypes that match a given fully qualified name (FQN) prefix, excluding the FQN itself and any datatypes that start with the FQN.”",3.770678435743331,37.03703703703704,11.538461538461538,37.03703703703704,63.62670063972473
7,python,"Parses a type string to create an `ApiGearType` object, mapping common primitive types to their ApiGear equivalents, sanitizing custom type names by replacing dots with underscores, and setting an array flag based on a ""[]"" suffix","Converts a string representation of a data type to an `ApiGearType` object, handling basic types, floating-point types, booleans, strings, and arrays.”","Converts a string representation of a data type to an `ApiGearType` object, handling basic types, floating-point types, booleans, strings, and arrays, while also determining if the type is an array.”",14.661588285355233,39.3939393939394,9.375000000000002,30.303030303030297,66.15641117095947
8,python,"Creates an `ApiGearProperty` by converting the VSS node's datatype to a supported ApiGear type and copying its description, returning `None` and logging a warning if the datatype is not supported","Creates an `ApiGearProperty` object from a `VSSNode`'s data and a specified datatype, setting the property's type and description if available.”","Creates an `ApiGearProperty` object from a `VSSNode`'s data and a specified datatype, setting the property's type and description if available.”",13.978485989897402,49.05660377358491,11.76470588235294,33.9622641509434,68.1725025177002
10,python,"Loads and parses multiple VSpec files from specified paths, using a list of include directories, then merges them into a single composite VSpec object and returns it, raising an exception if no files are successfully loaded","Loads and merges multiple VSpec files, including specified include directories, into a single VSpec object, logging the process and raising an exception if no specs are loaded.”","Loads and merges multiple VSpec files, including specified include directories, into a single VSpec object, logging the process and raising an exception if no specs are loaded or if there are any issues during the process.”",19.617904328906068,61.111111111111114,31.428571428571427,58.333333333333336,79.14862632751465
11,python,"Recursively updates a 'base' dictionary with an 'update' dictionary, merging nested dictionaries for common keys and overwriting or adding all other key-value pairs","Recursively updates a dictionary `base` with the contents of another dictionary `update`, merging nested dictionaries while overwriting non-dictionary values.”","Recursively updates a dictionary `base` with the contents of another dictionary `update`, merging nested dictionaries and overwriting non-dictionary values.”",15.663915411954296,59.09090909090908,23.809523809523807,50.0,76.34090781211853
12,python,"Asserts that the input value, if not None, is a valid 'constUID' formatted as an 8-digit hexadecimal string prefixed with '0x', returning the value if the check passes","Validates if a given string `v` matches the format of a constant UID (hexadecimal string starting with '0x' and containing 8 hexadecimal characters) and returns the original string if valid, otherwise raises an assertion error.”","Validates if a given string `v` matches the format of a constant UID (hexadecimal string starting with '0x' and containing 8 hexadecimal characters) and returns the original string if valid, otherwise raises an assertion error.”",3.316510708273502,37.5,6.451612903225808,25.0,72.38003611564636
13,python,"Initializes a VSSRaw model and attempts to resolve it, returning the successfully resolved model or the original unresolved model if resolution fails due to a validation or model error","Creates a `VSSRaw` model from a dictionary, attempts to resolve it, and returns the model (or the initialized incomplete model if resolution fails) after logging a debug message.”","Creates a `VSSRaw` model from a dictionary, attempts to resolve it, and returns the model (or the initialized incomplete model if resolution fails) after logging a debug message.”",19.770724632573593,59.64912280701754,36.36363636363637,56.14035087719299,75.98354816436768
14,python,"Asserts that each string in the input list is a valid datatype by checking against a master list, returning the original list if all values are valid","Validates a list of datatypes against a predefined set of allowed datatypes, raising an assertion error if an invalid datatype is found.”","Validates a list of datatypes against a predefined set of allowed datatypes, raising an assertion error if an invalid datatype is encountered.”",3.7784112039641315,28.57142857142857,4.25531914893617,16.3265306122449,64.35303092002869
15,python,"Traverses a VSSNode tree to generate a formatted string, displaying each node's name followed by the values of any specified attributes found on it","Generates a string representation of a VSSNode tree, including specified attributes, by traversing the tree and formatting each node's name and attribute values into a readable string.”","Generates a string representation of a VSSNode tree, including specified attributes, by traversing the tree and formatting each node's name and attribute values into a readable string.”",9.982873580487333,56.60377358490566,23.52941176470588,30.188679245283023,78.69176864624023
16,python,"Recursively traverses up the parent hierarchy to find and return the first non-instance ancestor node and the traversal depth, raising an exception if the starting node is not a branch or if no root is found","Recursively traverses up the tree to find the root node of an instance, raising an exception if no instance root is found.”","Recursively traverses up the tree to find the root node of an instance, returning the root node and its depth, or raising an exception if no instance root is found.”",20.204808943094505,65.67164179104478,33.84615384615385,56.716417910447745,76.62402391433716
17,python,Recursively calculates the depth of the first-found branch of children where each node is a `VSSDataBranch` with its `is_instance` flag set,Recursively counts the depth of instance children within a VSSDataBranch tree structure.”,"Recursively counts the depth of instance children within a VSSDataBranch tree structure, starting from the root node.”",6.786106569581161,50.0,15.789473684210526,35.0,73.0889081954956
18,python,Returns a list of node IDs from an input list whose expected parent's name matches the provided `name`,Identifies child node IDs within a list by filtering for those whose expected parent matches a specified name.”,Identifies child node IDs within a list by filtering for those whose expected parent matches a specified name.”,7.12695567709093,48.64864864864865,22.857142857142858,43.24324324324324,72.25156426429749
19,python,"Retrieves an attribute from an object, returning a specified default value if the attribute is missing or its value is `None`","Retrieves an attribute from an object, returning a default value if the attribute is not found or is None.”","Retrieves an attribute from an object, returning a default value if the attribute is not found or is None.”",55.03323637808925,85.00000000000001,68.42105263157895,85.00000000000001,87.7367615699768
20,python,Generates a `proto3` file from a VSS tree by first writing import statements for complex data types and then converting each branch in the tree into a corresponding protobuf message,"Generates a Protocol Buffer definition from a VSS signal tree by recursively traversing the tree and writing message definitions to a file, including optional fields and handling data types.”","Generates a Protocol Buffer definition from a VSS signal tree by recursively traversing the tree and writing message definitions to a file, handling data types and optional fields.”",10.685264125217193,55.17241379310344,25.0,37.93103448275862,69.94840502738953
21,python,"Traverses a VSS tree to find all terminal instance branches, grouping their relative names into a dictionary where each key is the fully qualified name of the original branch they instantiate",Extracts a dictionary mapping instance root fully qualified names to a list of their child instance names by traversing the VSS tree and filtering for instance data branches.”,"Extracts a dictionary mapping instance root fully qualified names to a list of their child instance names by traversing the VSS tree and filtering for instance data branches, excluding any instance branches with further instance children.”",4.668256514995882,41.7910447761194,12.307692307692307,17.91044776119403,65.77345132827759
22,python,Checks if a given VSSNode is a leaf by verifying its 'data' attribute is an instance of VSSDataDatatype,Checks if a given node in a VSS tree is a leaf node by verifying if its data attribute is an instance of the VSSDataDatatype class.”,Determines if a given node in a VSS tree is a leaf node by checking if its data attribute is an instance of the VSSDataDatatype class.”,21.84971203531727,68.18181818181817,47.61904761904762,68.18181818181817,83.51939916610718
23,python,Returns `True` if the given `VSSNode`'s data is a `VSSDataBranch` and its `is_instance` attribute is `False`,Checks if a VSS node represents a branch with non-instance data.”,Determines if a VSS node represents a branch with non-instance data.”,1.1873799573689774,26.666666666666668,0.0,20.0,61.824166774749756
24,python,Returns True if the node's data is a VSSDataBranch and its 'is_instance' attribute is True,Checks if a VSSNode represents an instance of a VSSDataBranch by verifying if the node's data is a VSSDataBranch and if that branch is marked as an instance.”,Determines if a VSSNode represents an instance of a VSSDataBranch by checking if its data is a VSSDataBranch and if that branch's `is_instance` attribute is True.”,15.727176091057258,57.77777777777777,37.2093023255814,48.88888888888888,72.61286973953247
25,python,"Calculates a 32-bit FNV-1 hash for a given byte string by iterating through each byte, multiplying the current hash by the FNV prime, and then performing a bitwise XOR with the byte",Calculates a 32-bit FNV-1a hash value for a given byte string by iteratively multiplying the hash by a prime number and XORing it with each byte of the input.”,"Calculates a 32-bit FNV-1a hash value for a given byte string by iteratively multiplying the hash by a prime number and XORing it with each byte of the input, ensuring the result remains within 32 bits.",26.303881842623145,66.66666666666667,34.285714285714285,55.55555555555555,79.33286428451538
28,java,"Inflates the `card_fragment` layout, finds and assigns the card's title and icon views, and returns the resulting root view","Inflates a layout for a card-like view, finds the title and icon elements within the layout, and returns the inflated view.”","Inflates a layout for a card-like view, finds the title and icon elements within the layout, and returns the inflated view for use in a fragment.”",14.793378747473625,58.333333333333336,17.391304347826086,45.83333333333333,71.15881443023682
29,java,"Updates an `ImageButton`'s icon and click listener from a content object and makes it visible, or hides the button if the content is null","Updates the visibility and content of an ImageButton based on the provided DescriptiveTextWithControlsView.Control object, setting its icon and click listener if the control is not null.”","Updates the visibility and content of an ImageButton based on the provided DescriptiveTextWithControlsView.Control object, setting its icon and click listener if the control is not null, or hiding the button if the control is null.”",14.755030339831421,55.73770491803278,27.11864406779661,45.90163934426229,72.41262793540955
30,java,"Lazily inflates a `ViewStub` to create a descriptive text layout, caches references to its child views (title, subtitle, image), and returns the inflated layout","Lazily inflates and caches a descriptive text-only layout view, retrieving its title, subtitle, optional image, and tap-for-more text elements for later use.”","Lazily inflates and caches a descriptive text-only layout view, retrieving its title, subtitle, optional image, and tap-for-more text elements for later use.”",12.187775623997348,48.97959183673469,21.27659574468085,44.89795918367347,71.17153406143188
31,java,Updates the header view on the main UI thread by making its root view visible and setting the card's title and icon from the provided `CardHeader` object,Updates the header view of a card by setting the card title and icon on the main thread using `runOnUiThread`.,Updates the card header view's title and icon on the main thread using `runOnUiThread`.,8.887506925317911,60.46511627906976,39.02439024390244,41.860465116279066,76.14033222198486
32,java,"Lazily inflates a `ViewStub` to create and return the text block layout view, while also finding and caching references to its child text views on the first call","Retrieves a `View` representing a text block layout, inflating it from a `ViewStub` if it doesn't already exist and caching it for later use.”","Retrieves or inflates a `View` representing a text block layout from a `ViewStub`, caching it for later use and obtaining references to its child views.”",21.15330363637516,52.83018867924528,27.450980392156865,41.50943396226415,74.95050430297852
33,java,"Queries the `PackageManager` for a `MediaBrowserService` within a given package and returns a `ComponentName` for the first one found, or `null` if none exist",Retrieves the default media browsing service component name for a given package by querying the package manager for services that implement the MediaBrowserService interface.”,Retrieves the default media browsing service component name for a given package by querying the package manager for services that implement the MediaBrowserService interface and returning null if none are found.”,7.173095622076889,47.27272727272728,18.867924528301884,36.36363636363636,73.00896644592285
34,java,"Determines if a component should be added to a launchable list, returning `false` if its package is explicitly hidden or if it's a custom media component and launchable apps are also being shown, otherwise returning `true` for valid launchable or media service types","Determines whether a component should be added to the launchables list based on its package name, app type, and custom media component settings.”","Determines whether a component should be added to the launchables list based on its package name, app type, and custom media component settings.”",11.503596465619122,41.791044776119406,24.615384615384617,38.80597014925373,68.91352534294128
35,java,"Sets the car's media source to a given component in browse mode and finishes the context if it's an Activity, catching and logging a `CarNotConnectedException` if the car service is unavailable","Sets the media source of a car media manager to browse mode and finishes the current activity if it is an activity, handling potential connection errors.”","Sets the media source of a car media manager to browse mode and finishes the current activity if it is an activity, handling potential connection errors.",14.934260742382541,57.6271186440678,28.07017543859649,47.457627118644076,71.64645791053772
36,java,"Safely checks if a given activity is distraction optimized using the `CarPackageManager`, returning `false` and logging an error if the manager is null or a `CarNotConnectedException` is caught","Checks if a specified activity within a given package is optimized for distraction mitigation by querying the car package manager, handling potential connection errors.”","Determines if a specified activity within a given package is optimized for distraction mitigation by querying the car package manager, handling potential connection errors.”",3.7586443711383937,38.46153846153846,7.999999999999999,26.923076923076923,65.57474136352539
38,java,"Retrieves a specific, resolvable map `Intent` from a configured list if it matches the system's default map app, otherwise falls back to a generic `Intent` for any map application","Retrieves the preferred map application intent from a configuration array, prioritizing those matching the default map activity or specified in the configuration, and falling back to the default map activity if no preferred intent is found.”","Retrieves the preferred map application intent from a configuration array, prioritizing those matching the default map activity or specified in the configuration, and returning the default map activity if no preferred intent is found.”",3.9922172052552733,37.50000000000001,12.903225806451616,28.125,63.92865180969238
39,java,"Lazily initializes a set of `HomeCardModule`s by reflectively instantiating class names from a configuration array, and then uses a `FragmentTransaction` to add each module's card view to the UI layout","Dynamically instantiates and adds HomeCardModule instances, obtained from a resource array, to a set, then replaces fragments in the UI with their corresponding card views using a FragmentTransaction.”","Dynamically instantiates and adds HomeCardModule instances, obtained from a resource array, to a set, then replaces fragments in the UI with their corresponding card views using a FragmentTransaction.”",4.800066815012274,46.666666666666664,13.793103448275861,23.333333333333332,73.00556302070618
40,java,"Iterates through a list of appeared tasks and uses the `ActivityTaskManager` to remove any task that is in multi-window mode, logging it as a dangling task",Removes multi-window tasks from the ActivityTaskManager if they are found in a list of task appeared information.”,Removes dangling multi-window tasks from the ActivityTaskManager by iterating through a list of task appeared information.”,9.397246812242447,54.545454545454554,23.80952380952381,22.727272727272727,73.02659749984741
41,java,Parses the mode from the current Intent and sets the title for both the Activity and the CarUi toolbar using the string resource ID defined in that mode,"Updates the application's mode based on intent data, setting the title of the activity and toolbar accordingly.”","Updates the application's mode based on intent data, setting the title of the activity and toolbar accordingly.”",3.510815157658705,39.130434782608695,13.636363636363638,39.130434782608695,70.48826217651367
42,java,"Lazily initializes and returns a `Chronometer` by finding it in the layout, while also finding and caching its associated separator view on the first call","Retrieves a Chronometer view from the layout, creating it if it doesn't already exist, and also retrieves a separator view associated with the Chronometer.”","Retrieves a Chronometer view from the layout, creating it if it doesn't already exist, and also retrieves a separator view associated with the Chronometer.”",7.779637090949696,44.0,12.5,32.0,67.12464690208435
43,java,"Lazily inflates a media layout from a `ViewStub`, finds and caches its title and subtitle views, initializes its media playback controls bar via a presenter, and returns the inflated view","Retrieves or inflates a `View` representing the media layout, initializes its title and subtitle views, and initializes the media playback controls action bar.”","Retrieves or inflates a `View` representing the media layout, initializes its title and subtitle views, and initializes the media playback controls action bar.”",24.47564509677221,64.15094339622641,35.294117647058826,52.83018867924527,77.05444097518921
44,java,"If a valid `Drawable` and card size are provided, this method scales the image to a square based on the card's largest dimension, blurs it, and sets the resulting bitmap as the animated, visible card background","Updates the card's background image by scaling a provided drawable to a maximum dimension, blurring it, and setting it as the card's background image with a visual transition.”","Updates the card's background image by scaling a provided drawable to a maximum dimension, blurring it, and setting it as the card's background image.”",5.933310816574455,50.79365079365079,16.393442622950822,34.920634920634924,68.38617324829102
45,java,Makes the media layout view visible and updates its title and subtitle with the provided text,Updates the visibility and text content of a media layout view with a given title and subtitle.”,Updates the visibility and text content of a media layout view with a given title and subtitle.”,14.400124446705304,66.66666666666667,25.80645161290323,42.42424242424242,79.01059985160828
46,java,"If the content's start time is positive, this method makes a chronometer and a separator visible, sets the chronometer's base time, and starts it; otherwise, it hides both views","Updates the visibility and state of a chronometer and separator based on the start time of an audio content, displaying it if the start time is positive.”","Updates the visibility and state of a chronometer and separator based on the start time of an audio content, showing the chronometer if the start time is positive.”",11.507219839446469,50.84745762711865,24.56140350877193,27.11864406779661,67.71153211593628
47,java,Registers a member callback to the provided `Call` object after verifying it is not null,"Registers a callback to a newly added `Call` object, enabling asynchronous notification of call state changes.”",Registers a callback to a newly added `Call` object to receive asynchronous notifications of call state changes.”,15.362208233245513,37.50000000000001,20.0,37.50000000000001,70.7742691040039
48,java,"Handles the removal of a call by clearing the current call and card content, notifying the presenter of the model update, and unregistering its callback from the call object for cleanup","Removes a call from the view model, clears associated data, updates the presenter, and unregisters the callback to prevent further updates from the removed call.”","Removes a call from the view model, clears associated data, updates the presenter, and unregisters the callback to prevent further updates from the removed call.”",5.168146307192696,42.857142857142854,11.111111111111112,35.71428571428571,72.29923605918884
49,java,"Formats a phone number to create a new `DescriptiveTextWithControlsView` with call details and controls, then notifies the presenter that the model has been updated","Formats a phone number and updates a descriptive text view with the formatted number, call duration, and call control buttons, then notifies the presenter of the model update.”","Formats a phone number, updates a descriptive text view with the formatted number, call duration, and call control buttons, and notifies the presenter of the model update.”",12.656494026948833,50.98039215686274,24.489795918367346,50.98039215686274,77.78578996658325
50,java,"Initializes mute, end call, and dialpad buttons by assigning each an icon and a click listener to toggle mute status, disconnect the current call, and delegate to an onClick handler, respectively","Initializes the mute, end call, and dialpad buttons for an in-call UI by setting their icons and associated actions to control call muting, disconnection, and dialpad access respectively.”","Initializes the mute, end call, and dialpad buttons for an in-call UI by setting their icons and associated actions to control call muting, disconnection, and dialpad access.”",23.515428856092967,47.45762711864406,17.543859649122805,40.67796610169491,71.00135087966919
53,cpp,"When a new listener is added, this callback immediately notifies it with an `AVAILABLE` status if the D-Bus connection is already active",Notifies a listener of the availability status (AVAILABLE) if a new subscription is added and the DBus connection is currently connected.”,Notifies a listener of the availability status (AVAILABLE) if a new subscription is added and the DBus connection is currently connected.”,6.07128396953431,54.54545454545454,14.285714285714283,31.818181818181824,73.31634163856506
54,cpp,"Atomically registers a given thread to be joined later by adding it to a list, but only if its associated connection is active and the thread is not already present in the list",Registers a thread to be joined upon program exit if it is associated with a given connection.”,Registers a thread to be joined upon program exit if it is associated with a given connection.”,8.1386990779208,51.99999999999999,20.833333333333336,36.0,66.96301698684692
56,cpp,A callback function that handles the removal of a D-Bus watch by stopping its monitoring and disassociating the high-level wrapper object from the underlying `libdbus` watch,Removes a DBus watch by stopping its monitoring if it's ready and clearing its associated data from the libdbus watch object.”,Removes a DBus watch by stopping its monitoring if it's ready and clearing its associated data from the libdbus watch object.”,16.32352051921941,47.99999999999999,25.0,44.0,76.1158287525177
57,cpp,"Handles the toggling of a D-Bus watch by creating a C++ wrapper object for it on first use, and then starting or stopping its monitoring based on its readiness status","Toggles the DBus watch state (start or stop) based on the provided `libdbusWatch` and associated `WatchContext` data, managing the `DBusWatch` object and its dispatch source accordingly.”","Toggles the DBus watch state (start or stop) based on the provided `libdbusWatch` and associated `WatchContext` data, managing the `DBusWatch` object and its dispatch source accordingly.”",2.9025207558830606,28.07017543859649,3.6363636363636362,21.052631578947366,64.72665071487427
58,cpp,"Lazily initializes and returns a thread-safe, singleton `DBusObjectManager` instance using a double-checked locking pattern","Lazily creates and returns a shared pointer to a `DBusObjectManager` instance, ensuring thread-safe initialization using a mutex.”","Lazily creates and returns a shared pointer to a `DBusObjectManager` instance, ensuring thread-safe initialization with a mutex and a double-checked locking pattern.”",22.708184547335378,65.0,42.10526315789474,54.99999999999999,84.30917263031006
59,cpp,"Decrements a reference count for a given D-Bus service name, releasing it from the bus if the count reaches zero, and returns `true` on success or `false` if the name was not being tracked","Releases a service name from the D-Bus connection, decrementing its count or removing it if the count reaches zero, and returning a boolean indicating successful release.”","Releases a service name from the D-Bus connection by decrementing its count or removing it if the count reaches zero, and returns true if the release was successful.”",22.606841955623764,65.625,35.48387096774193,53.125,73.77994060516357
60,cpp,"Steals the reply from a `DBusPendingCall` handle and wraps it in a new `DBusMessage` object that takes ownership, returning an empty message if the input handle is null","Converts a libdbus pending call reply to a DBusMessage object, handling null pointers and reference counting.”","Converts a libdbus pending call reply to a DBusMessage object, handling null pointers and optionally increasing the libdbus message reference count.”",1.9228672934462534,36.734693877551024,4.25531914893617,20.408163265306122,66.44986271858215
61,cpp,Thread-safely deallocates a collection of asynchronous D-Bus message reply handlers by moving them from a protected member list to a local copy before iterating through and deleting each one,Deletes all pending asynchronous message reply handlers by moving them from a deletion queue to a vector and then iterating through the vector to delete each handler.”,Deletes all pending asynchronous message reply handlers by moving them from a deletion queue to a vector and then iterating through the vector to delete each handler.”,29.03290349151234,51.724137931034484,32.142857142857146,48.275862068965516,73.56430888175964
62,cpp,Thread-safely notifies all registered signal handlers of a successful state by invoking their `onSpecificError` callback with a `SUCCESS` status for each associated signal tag,"Iterates through signal handlers and their associated error tags, calling the onSpecificError method for each handler to signal successful completion of a specific error state.","Iterates through signal handlers and their associated error tags, calling the onSpecificError method for each handler to signal successful completion of a specific error state.",5.509295372093987,48.0,12.5,28.000000000000004,68.53123307228088
63,cpp,"Thread-safely removes a connection, identified by its ID, from an internal collection if it exists","Removes a connection from a map of connections by its ID, ensuring thread safety with a recursive mutex.","Removes a connection from a map of connections by its ID, ensuring thread safety with a recursive mutex lock.",14.051676978912429,45.714285714285715,24.24242424242424,34.285714285714285,70.40989995002747
64,cpp,"Handles an incoming D-Bus signal by dispatching it to the appropriate handler for either ""InterfacesAdded"" or ""InterfacesRemoved"" events based on the message's member name",Handles DBus messages related to instance availability status changes by dispatching the appropriate signal to the event handler based on the message content (InterfacesAdded or InterfacesRemoved).,Handles DBus messages indicating changes in instance availability status by dispatching the corresponding signal (InterfacesAdded or InterfacesRemoved) to the event handler.,4.850712070834481,46.80851063829788,17.77777777777778,34.04255319148936,77.21132636070251
65,cpp,"Retrieves available service instances from a registry, translates the internal D-Bus representation into a vector of `DBusAddress` objects, and populates the provided output vector and status parameter","Retrieves a list of available service instances from a DBus proxy and populates a vector with their addresses, returning a success status if the operation completes successfully.”","Retrieves a list of available service instances from a DBus proxy and populates a vector with their addresses, returning a success status if the operation completes successfully.”",16.092402604798348,47.27272727272727,22.641509433962266,36.36363636363637,72.58636951446533
66,cpp,"Gets the availability status of a service instance by translating its identifier to a D-Bus address and querying a registry, setting the result and a success status in output parameters",Retrieves the availability status of a DBus service instance by translating a CommonAPI address to a DBus address and checking if the service instance is alive in the DBus registry.”,Retrieves the availability status of a DBus service instance by translating a CommonAPI address to a DBus address and querying the DBus registry to determine if the service instance is alive.”,23.62618715634458,54.83870967741935,33.33333333333333,51.61290322580645,73.6862063407898
67,cpp,"Handles a D-Bus ""InterfacesRemoved"" signal by parsing the object path and interface names, and for any interface matching the one being observed, notifies listeners that its status has changed to ""NOT_AVAILABLE",Handles the removal of DBus interfaces from a DBus object by updating the availability status of observed interfaces and notifying subscribers.”,Handles the removal of DBus interfaces from a DBus object by updating the availability status of observed interfaces and notifying subscribers if the removed interface was being observed.”,2.9124169548934984,36.065573770491795,3.389830508474576,26.229508196721312,66.03652834892273
68,cpp,Notifies listeners of an interface's availability change by translating its D-Bus path and name into a generic CommonAPI address,Notifies listeners of a change in the availability status of a DBus interface by translating the DBus address to a CommonAPI address and then invoking the listener notification function.”,Notifies listeners of a change in the availability status of a DBus interface by translating the DBus address to a CommonAPI address and then invoking the listener notification function.”,7.346761234551784,48.00000000000001,16.666666666666664,36.00000000000001,78.0450701713562
69,cpp,"Thread-safely schedules a task on the main event loop to notify a newly added listener, passing along its specific subscription details",Registers a listener with a DBus proxy to receive notifications for a specific subscription by pushing a function to the main loop to handle those notifications.”,Registers a listener with a DBus proxy to receive notifications for a specific subscription by pushing a function to the main loop to handle those notifications.”,5.119289102800111,37.50000000000001,13.043478260869565,20.833333333333332,67.44627356529236
70,cpp,Thread-safely removes all listeners from an internal collection that match the provided `Subscription` identifier,Removes a listener from the `listeners_` map when it is no longer subscribed to a particular subscription.”,"Removes a listener from the `listeners_` map when it is no longer subscribed to a particular subscription, ensuring thread safety with a mutex.”",1.9240848598265397,31.578947368421055,0.0,21.05263157894737,65.62147736549377
71,cpp,Delegates the registration of a signal state handler for a specific subscription to the underlying connection object,Adds a signal handler to the DBus proxy connection for a specific subscription.,Registers a signal handler with the DBus proxy connection for a given subscription.,7.709621655307144,53.333333333333336,14.285714285714288,40.00000000000001,78.69365811347961
72,cpp,Handles the result of an asynchronous service instance query by translating the `DBusAddress` list to a string list on success and invoking a final callback with the call status and the translated list,"Handles the asynchronous callback for retrieving available service instances, translating the DBus addresses to strings and passing the status and instances to the provided callback function.”","Handles the asynchronous callback for retrieving available service instances, translating the DBus addresses to strings and passing the status and instances to the provided callback function.”",4.397099963109678,44.06779661016949,10.526315789473683,40.67796610169492,69.18281316757202
73,cpp,"Dispatches an incoming `DBusMessage` to a registered handler based on its object path and interface, or handles it as a standard introspection request, returning `true` if the message was processed","Handles incoming DBus messages by looking up the corresponding interface handler, calling its message handling function, or handling the 'org.freedesktop.DBus.Introspectable' interface if no handler is found.”","Handles incoming DBus messages by looking up the corresponding interface handler, calling its message handling function, or handling the 'org.freedesktop.DBus.Introspectable' interface if no handler is found, returning whether the message was handled.”",5.335343825807726,33.84615384615384,6.349206349206351,24.615384615384613,68.92954111099243
74,cpp,"Registers a D-Bus interface handler for a specific path, returning `false` if the exact handler is already registered, but allowing idempotent registration for standard `ObjectManager` and `Properties` interfaces","Adds a DBus interface handler to a table of registered objects, checking for duplicates and handling special cases for the ObjectManager and Properties interfaces.”","Adds a DBus interface handler to a table of registered objects, preventing duplicates and handling special cases for the ObjectManager and Properties interfaces.”",3.078033675632241,42.30769230769231,16.0,38.46153846153847,66.6293740272522
75,cpp,"Registers a given `DBusInterfaceHandler` to a specific path in a table, returning `true` on success and `false` if the handler is already registered for that path","Adds a DBusInterfaceHandler to a table of registered objects, keyed by interface path, ensuring no duplicates are added.”","Adds a DBusInterfaceHandler to a table of registered objects, keyed by interface path, and prevents duplicate handlers from being added.”",3.745759895390642,34.78260869565217,13.636363636363635,30.43478260869565,64.16628360748291
78,c,"Constructs and sends a 2-byte UDS positive response to an ECU Reset request, containing the positive response SID and the echoed reset type, over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails",Sends a positive response to an ECU reset request by transmitting a specific UDS SID and reset type via the ISO-TP protocol.”,Sends a positive response to an ECU reset request by transmitting a specific UDS SID and reset type via the ISO-TP protocol to a specified CAN ID.”,12.898064174382437,58.823529411764696,36.36363636363637,50.0,75.38987994194031
79,c,"Processes a UDS ECU Reset request, validating the 2-byte message length, sending a positive response before triggering a system reboot for a 'hard reset', and sending a negative response for either an incorrect length or an unsupported reset sub-function","Handles an ECU reset request by validating the message length, determining the reset type, sending a response, and performing a hard reset if requested.”","Handles an ECU reset request by validating the message length, determining the reset type, sending a response, and performing a hard reset if requested or returning a negative response if the reset type is unsupported.”",9.367920732225658,55.263157894736835,24.324324324324323,44.73684210526316,74.35234189033508
80,c,"Constructs and sends a 4-byte UDS positive response for a ""Request Download"" service, specifying a maximum block length of 0x00D2, over a CAN bus using the ISO-TP protocol and logging an error on failure","Sends a positive response to a download request via ISOTP by constructing a message with a specific SID, response code, and block size, and then transmitting it to a specified CAN ID.”","Sends a positive response to a download request via ISOTP by constructing a message with a specific SID, response code, and block size, and then transmitting it to a specified CAN ID.”",2.876053444553946,38.23529411764706,6.060606060606061,29.411764705882355,66.97501540184021
81,c,"Constructs and sends a 2-byte UDS positive response for a Transfer Data request (containing the positive SID and the block sequence counter) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","Sends a transfer data response message to a specified CAN ID using the isotp library, including a positive service ID and block sequence counter.”","Sends a transfer data response message to a specified CAN ID using the isotp library, including a positive service ID and block sequence counter, and logs an error if the transmission fails.”",17.182230715990176,61.9718309859155,31.884057971014496,45.07042253521127,77.76814699172974
82,c,"Constructs and sends a 5-byte UDS positive response for the Routine Control service (containing the routine control type, routine ID, and a result code) over a CAN bus via ISO-TP, logging an error if the transmission fails","Sends a routine control result message to a specified CAN ID using the ISO TP protocol, encapsulating the routine ID and result within the message payload.","Sends a routine control result message to a specified CAN ID using the ISO TP protocol, encapsulating the routine ID and result within the message payload.",3.1693236512719536,46.15384615384615,19.047619047619047,30.76923076923077,68.53075623512268
83,c,"Constructs and sends a 1-byte UDS positive response for a Transfer Exit request (containing the request SID + 0x40) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails",Sends a positive response to a request transfer exit request by transmitting a specific SID via the isotp protocol.,Sends a positive response to a request transfer exit request by transmitting a specific SID via the isotp protocol.,2.214478609732548,48.14814814814815,15.384615384615383,40.74074074074075,71.05653882026672
85,c,"Searches a predefined `id_mapping` array for a given CAN ID and returns its corresponding index, or `0xff` if the ID is not found","Maps a CAN identifier to a corresponding index within a predefined mapping table, returning the index or a default value if the identifier is not found.”","Maps a CAN identifier to a corresponding index within a predefined mapping table, returning the index or 0xff if the identifier is not found.”",8.69222148294712,58.333333333333336,34.78260869565217,45.83333333333333,77.19885110855103
86,c,"Disables a specific LIN-to-CAN receive filter by clearing its callback pointer, or disables all filters if a special ID is passed, while ignoring out-of-bounds IDs","Removes a callback function associated with a specific filter ID from the incoming callback array of a LIN2CAN device, or clears all callbacks if the filter ID is set to the length of the array.","Removes a callback function associated with a specific filter ID from the incoming callback array of a LIN2CAN device, or clears all callbacks if the filter ID is set to the length of the array.",4.016457646237016,37.5,6.451612903225808,31.25,66.21260046958923
87,c,"A LIN driver callback that retrieves a pending outgoing frame from a message queue, copies its data for transmission, invokes a frame-specific completion callback, and returns a boolean indicating if a frame was successfully prepared","Retrieves a LIN frame from a queue, copies it into a CAN frame, and calls a user-defined callback function to transmit the frame over CAN.”","Retrieves a LIN frame from a queue, copies it into a CAN frame, and invokes a user-defined callback function to transmit the frame over CAN.”",8.218759949292243,48.387096774193544,20.0,38.70967741935484,70.37104964256287
88,c,"Acts as a LIN-to-CAN gateway callback, translating an incoming LIN frame by using its first data byte's top two bits as an index to find a target CAN ID, constructing a new CAN frame with the translated ID and a payload where those index bits are masked out, and finally invoking a registered handler with the resulting CAN frame",Translates incoming LIN frames to CAN frames and invokes a registered callback function with the translated CAN frame and user data for each mapped LIN ID.”,Translates incoming LIN frames to CAN frames and invokes a registered callback function with the translated CAN frame and user data for each mapped LIN ID.”,2.820321542078213,38.63636363636363,13.953488372093023,25.0,67.14630722999573
89,c,"Initializes a high-voltage shield by configuring its Output Enable (OE) GPIO, writing a zeroed state to its hardware registers, and then setting the OE pin to enable the device's outputs, logging errors at each step","Initializes the HV shield device by configuring the output enable pin, clearing the register data, updating the registers, and enabling the output.”","Initializes the HV shield device by configuring the output enable pin, clearing the register data, updating the registers, and enabling the output enable pin.”",5.233629536972999,42.62295081967213,10.169491525423728,32.786885245901644,70.65215110778809
90,c,"Sets the gain for a specified DAC (0 or 1) on a high-voltage shield by updating its value in a cached data structure and then calling an update function to write the new configuration to the hardware, returning an error for an invalid DAC index",Sets the digital-to-analog converter (DAC) gain for a given device by updating the corresponding register value and triggering an update function.”,"Sets the digital-to-analog converter (DAC) gain for a given device by updating the corresponding register value and triggering an update function, while validating the DAC input.”",6.40552865456183,45.945945945945944,16.666666666666668,37.83783783783784,68.11784505844116
91,c,"Enables or disables a specific GPIO output on a high-voltage shield by validating the pin index (0-31), remapping it via a nibble-swap, modifying a cached register bit, and then calling a helper function to write the update to the hardware","Enables or disables a GPIO output pin by setting or clearing the corresponding bit in the `gpio_output` register of the device's data structure, and then updates the device's hardware.”","Enables or disables a GPIO output pin by setting or clearing the corresponding bit in the `gpio_output` register of the device's data structure, and then updates the device's hardware via a helper function.”",11.43803535933118,50.63291139240506,20.77922077922078,35.44303797468354,74.29231405258179
92,c,"A callback function that forwards a received CAN frame from a source device to a destination device (passed via `user_data`) using a non-blocking send operation, logging a debug message on successful queuing or a warning on failure",Routes CAN frames received on a device to another specified device by sending the frame using `can_send` and logging the routing action.”,"Routes CAN frames received on a device to another specified device by sending the frame using `can_send` and logging the routing action, handling potential send failures.”",2.6634759154955274,33.333333333333336,3.125,24.242424242424246,70.25332450866699
93,c,"Configures a CAN message router by iterating through an array of routing entries, adding a receive filter to a source CAN interface for each entry that uses a callback to forward matching frames to a destination interface, and returns an error if any filter registration fails","Registers a set of CAN router entries by adding corresponding receive filters for each entry, returning an error code if any registration fails.”","Registers a set of CAN router entries by adding corresponding receive filters for each entry, returning an error code if any registration fails.”",4.540566844994684,49.275362318840564,14.925373134328357,43.47826086956522,76.15941166877747
94,c,"Initializes the CAN router by iterating through all statically-defined routing tables found in a dedicated linker section and registering their entries, returning an error if any registration fails","Initializes the CAN router by registering each CAN router table entry, returning an error if registration fails.”","Initializes the CAN router by registering each CAN router table entry, returning an error if any registration fails.”",34.82979766524913,55.319148936170215,44.44444444444445,55.319148936170215,80.7615578174591
95,c,"Iterates through a pre-configured list of low-voltage GPIOs, setting the state of each pin enabled by an input mask to the corresponding bit in a value word, logging and returning an error if any underlying GPIO operation fails",Sets the specified bits of a GPIO mask to a given value by iterating through the configured low-voltage GPIO pins and setting their states accordingly.”,Sets the specified bits of a GPIO mask to a given value by iterating through the configured low-voltage GPIO pins and setting their states accordingly.”,2.7895404993053226,48.48484848484849,6.25,21.21212121212121,70.5143392086029
96,c,"Populates an output parameter with the number of available Abstract LIN callback slots, calculated by subtracting the used count from a configured maximum, returning an error if the parameter is a null pointer",Calculates the number of free callback slots available for a given device by subtracting the number of used callbacks from the maximum number of callbacks supported.”,Calculates the number of free callback slots for a given device by subtracting the number of used callbacks from the maximum number of callbacks supported.”,8.287554588643085,44.82758620689655,17.857142857142858,37.931034482758626,67.51187443733215
97,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","Registers a callback function to be invoked when a LIN incoming message with a specific frame ID and size is received, storing the callback and associated data in a lookup table.”","Registers a callback function to be invoked when a LIN incoming message with a specific frame ID and size is received, storing the callback and associated data in a lookup table for later invocation.”",5.304302402301342,46.753246753246756,16.0,33.76623376623377,66.17125868797302
98,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","Registers an outgoing callback function for a specific LIN frame ID and size, storing it in a data structure associated with a device, and returning an error code if the input parameters are invalid or memory allocation fails.”","Registers an outgoing callback function for a specific LIN frame ID and size, storing it in a data structure associated with a device, and returning an error code if the input parameters are invalid or memory allocation fails.”",19.471876592222067,59.25925925925927,22.78481012658228,46.91358024691358,72.93769121170044
99,c,"Sets the active LIN schedule table by index, first validating the index and then using a semaphore to thread-safely update the scheduler's state and reset its entry pointer to the start of the new table","Sets the active table index for a given abstract linear scheduler, ensuring exclusive access via a semaphore and resetting the table entry counter to zero.”","Sets the active table index for a given abstract linear scheduler, ensuring exclusive access via a semaphore and resetting the table entry counter to zero, returning an error if the table index is out of bounds.”",5.751423275890559,43.83561643835616,8.450704225352112,32.87671232876713,70.76656818389893
100,c,"Disables a LIN scheduler by first checking if it's already stopped, then taking a semaphore to safely wait for the current operation to complete before setting the active schedule table index to -1","Disables a linear scheduler by setting its current table to -1 and releasing the active semaphore, ensuring no further messages are processed.”","Disables a linear scheduler by setting its current table to -1 and releasing the active semaphore, preventing further message processing.”",4.609696480670256,44.44444444444445,15.384615384615385,29.629629629629633,71.77494168281555
