id,language,reference,generated,generated_rci,bleu_score,rouge1,rouge2,rougeL,bertscore_f1
2,python,"Raises an exception if the specified 'datatype' is unsupported, otherwise retrieves that type's validation function and returns the boolean result of calling it with the provided 'value'",Validates that a given value conforms to a specified datatype by retrieving the datatype's type and applying it to the value.,"Retrieves a datatype's type and validates that a given value conforms to it, raising an exception if the datatype is unsupported.",11.207550412793935,56.00000000000001,20.833333333333336,28.000000000000004,73.75701665878296
3,python,"Validates that a given value, or each value in a list, is an integer that fits within the numerical range defined by a specified bit-width and signedness",Checks if a given value or list of values are within the specified range for a signed or unsigned integer of a given bit width.,Checks if a given value or list of values are within the specified range for a signed or unsigned integer of a given bit width.,7.498840493966204,52.83018867924528,19.607843137254903,41.50943396226415,80.49222230911255
4,python,"Returns the type definition tuple from a class-level list of types that matches the provided 'datatype' name, or returns None if no match is found","Retrieves a tuple containing the type name, constructor, and list of subtypes for a given datatype from a predefined list of types within a class.","Retrieves a tuple containing the type name, constructor, and subtypes for a given datatype from a predefined list of types within a class.",9.136332437678275,44.89795918367348,21.276595744680854,28.571428571428577,68.01665425300598
5,python,Returns a dictionary mapping the short name to the full FQN for all dynamic datatypes that exist in the same namespace as the provided FQN,"Identifies and returns a dictionary of namespaced datatypes that match a given fully qualified name prefix, excluding the prefix itself.”",Identifies and returns a dictionary of namespaced datatypes that match a given fully qualified name prefix.”,4.353635218839188,29.268292682926827,15.384615384615385,24.39024390243903,65.56735634803772
7,python,"Parses a type string to create an `ApiGearType` object, mapping common primitive types to their ApiGear equivalents, sanitizing custom type names by replacing dots with underscores, and setting an array flag based on a ""[]"" suffix","Converts a string representation of a data type into an ApiGearType object, handling basic types, floating-point types, booleans, strings, and arrays, while also replacing periods in complex types with underscores”","Converts a string representation of a data type into an ApiGearType object, handling basic types, floating-point types, booleans, strings, and arrays, and replacing periods in complex types with underscores”",3.1589195620051,36.92307692307693,9.523809523809524,27.69230769230769,69.88148093223572
8,python,"Creates an `ApiGearProperty` by converting the VSS node's datatype to a supported ApiGear type and copying its description, returning `None` and logging a warning if the datatype is not supported","Generates an `ApiGearProperty` object from a `VSSNode` and a specified datatype, populating the property's type and description if available.”","Generates an `ApiGearProperty` object from a `VSSNode` and a specified datatype, populating the property's type and description if available, or returning `None` if the datatype is unsupported.”",22.631238667614625,57.627118644067785,21.05263157894737,44.067796610169495,74.94359612464905
10,python,"Loads and parses multiple VSpec files from specified paths, using a list of include directories, then merges them into a single composite VSpec object and returns it, raising an exception if no files are successfully loaded","Loads and merges a list of VSpec files and their included files, logging the process and raising an exception if no specifications are found.”","Loads and merges a list of VSpec files and their included files, logging the process and raising an exception if no specifications are found or if there are any errors during the process.”",15.324106673237486,46.3768115942029,23.880597014925375,37.68115942028986,72.15168476104736
11,python,"Recursively updates a 'base' dictionary with an 'update' dictionary, merging nested dictionaries for common keys and overwriting or adding all other key-value pairs","Recursively merges the contents of a dictionary 'update' into a base dictionary 'base', overwriting existing keys and merging nested dictionaries.”","Recursively merges the contents of a dictionary 'update' into a base dictionary 'base', overwriting existing non-dictionary values and merging nested dictionaries.”",8.282282660969603,47.82608695652174,18.18181818181818,34.78260869565217,71.2544858455658
12,python,"Asserts that the input value, if not None, is a valid 'constUID' formatted as an 8-digit hexadecimal string prefixed with '0x', returning the value if the check passes","Validates that a given string is a valid 'constUID' by checking if it matches a hexadecimal pattern, and returns the original string if valid or None if invalid.”","Validates that a given string is a valid 'constUID' by checking if it matches a hexadecimal pattern, returning the original string if valid or None if invalid.”",11.873231691844078,42.85714285714286,14.814814814814817,32.142857142857146,73.96264672279358
13,python,"Initializes a VSSRaw model and attempts to resolve it, returning the successfully resolved model or the original unresolved model if resolution fails due to a validation or model error","Creates a VSSRaw object from a dictionary, attempts to resolve it, and returns the object (or the partially resolved object if resolution fails) after logging a debug message in case of failure.”","Creates a VSSRaw object from a dictionary, attempts to resolve it, and returns the object (or the partially resolved object if resolution fails) after logging a debug message if resolution fails.”",15.942711699937014,50.000000000000014,24.137931034482758,43.33333333333333,75.9121835231781
14,python,"Asserts that each string in the input list is a valid datatype by checking against a master list, returning the original list if all values are valid","Validates that all provided datatypes are present in a predefined list of valid datatypes, raising an assertion error if any invalid datatypes are found.”","Validates that all provided datatypes are present in a predefined list of valid datatypes, raising an assertion error if any invalid datatypes are found.”",2.316373364483857,31.37254901960785,0.0,23.52941176470588,66.88658595085144
15,python,"Traverses a VSSNode tree to generate a formatted string, displaying each node's name followed by the values of any specified attributes found on it","Recursively traverses a VSS node tree, extracting specified attributes from each node and formatting them into a string representation of the tree with attribute values.”","Recursively traverses a VSS node tree, extracting specified attributes from each node and formatting them into a string representation of the tree, including attribute values.”",3.94096328781697,48.0,12.5,28.000000000000004,76.822030544281
16,python,"Recursively traverses up the parent hierarchy to find and return the first non-instance ancestor node and the traversal depth, raising an exception if the starting node is not a branch or if no root is found","Recursively traverses up the VSS node tree until an instance root node is found, returning the root node and the depth of the traversal”","Recursively traverses up the VSS node tree to find the instance root node, returning the root node and the depth of the traversal”",10.494284490600668,53.333333333333336,24.137931034482758,43.333333333333336,73.83670210838318
17,python,Recursively calculates the depth of the first-found branch of children where each node is a `VSSDataBranch` with its `is_instance` flag set,"Recursively counts the depth of the instance children of a VSSDataBranch node, returning 0 if no instance children are found.”","Recursively counts the depth of instance children within a VSSDataBranch node, returning 0 if no instance children are found.”",6.741413136378529,47.61904761904761,15.0,38.0952380952381,69.16579604148865
18,python,Returns a list of node IDs from an input list whose expected parent's name matches the provided `name`,Identifies and returns a list of node IDs whose expected parent is a specified name.”,Identifies and returns a list of node IDs whose expected parent is a specified name.”,21.341038930353758,58.82352941176471,43.75000000000001,58.82352941176471,75.42275786399841
19,python,"Retrieves an attribute from an object, returning a specified default value if the attribute is missing or its value is `None`","Retrieves an attribute from an object, returning a default value if the attribute is not found or is None.","Retrieves an attribute from an object, returning a default value if the attribute is not found or is None.",54.935343579186565,85.00000000000001,68.42105263157895,85.00000000000001,89.94360566139221
20,python,Generates a `proto3` file from a VSS tree by first writing import statements for complex data types and then converting each branch in the tree into a corresponding protobuf message,"Recursively traverses a VSS node tree to generate a Protocol Buffer definition file containing messages representing the data structures defined within the tree, including optional imports for referenced data types.”","Recursively traverses a VSS node tree to generate a Protocol Buffer definition file containing messages representing the data structures defined within the tree, including optional imports for referenced data types and static UID fields.”",6.103695699038169,34.375,12.903225806451616,21.874999999999996,68.7862753868103
21,python,"Traverses a VSS tree to find all terminal instance branches, grouping their relative names into a dictionary where each key is the fully qualified name of the original branch they instantiate","Traverses a VSS node tree to identify and collect the fully qualified names of all non-nested instances, grouping them by their instance root node.”","Traverses a VSS node tree to identify and collect the fully qualified names of all non-nested instances, grouping them by their instance root node.”",10.046473260597821,50.0,18.51851851851852,32.14285714285714,71.97647094726562
22,python,Checks if a given VSSNode is a leaf by verifying its 'data' attribute is an instance of VSSDataDatatype,Determines if a given VSS node is a leaf node by checking if its data attribute is an instance of the VSSDataDatatype class.,Determines if a given VSS node is a leaf node by checking if its data attribute is an instance of the VSSDataDatatype class.,25.74300507722995,73.17073170731709,51.28205128205129,73.17073170731709,87.69063949584961
23,python,Returns `True` if the given `VSSNode`'s data is a `VSSDataBranch` and its `is_instance` attribute is `False`,Determines if a given VSS node represents a branch (as opposed to an instance) within the VSS data structure.,"Determines if a given VSS node represents a branch (as opposed to an instance) within the VSS data structure, considering whether it is an instance.",2.0929373635196202,32.55813953488372,0.0,23.25581395348837,57.74606466293335
24,python,Returns True if the node's data is a VSSDataBranch and its 'is_instance' attribute is True,Checks if a VSS node represents an instance of a VSS branch by verifying that its data is a VSSDataBranch and that the branch's 'is_instance' attribute is set to True.,Checks if a VSS node represents an instance of a VSS branch by verifying that its data is a VSSDataBranch and that the branch's 'is_instance' attribute is True.,27.643937532700466,63.829787234042556,35.55555555555556,51.06382978723405,76.7528235912323
25,python,"Calculates a 32-bit FNV-1 hash for a given byte string by iterating through each byte, multiplying the current hash by the FNV prime, and then performing a bitwise XOR with the byte",Calculates a 32-bit FNV-1a hash value for a given byte string using a specified prime number and bitwise operations”,Calculates a 32-bit FNV-1a hash value for a given byte string by iterating through each byte and applying a prime number multiplication and XOR operation”,35.62584858132516,65.57377049180329,44.06779661016949,62.295081967213115,81.71220421791077
28,java,"Inflates the `card_fragment` layout, finds and assigns the card's title and icon views, and returns the resulting root view","Inflates a layout (`card_fragment`) into a `View`, finds the `card_name` and `card_icon` views within it, and returns the inflated `View`.","Inflates a layout (`card_fragment`) into a `View`, finds the `card_name` and `card_icon` views within it, and returns the inflated `View`.",19.715266645700087,63.63636363636365,23.809523809523807,59.09090909090909,76.95773839950562
29,java,"Updates an `ImageButton`'s icon and click listener from a content object and makes it visible, or hides the button if the content is null","Updates the visibility and content of an `ImageButton` based on the provided `DescriptiveTextWithControlsView.Control` object, setting its icon and click listener if the control is not null, otherwise hiding the button.”","Updates the visibility and content of an `ImageButton` based on the provided `DescriptiveTextWithControlsView.Control` object, setting its icon and click listener if the control is not null, otherwise hiding the button.”",15.344612089354772,57.14285714285714,22.222222222222225,39.28571428571428,73.33723306655884
30,java,"Lazily inflates a `ViewStub` to create a descriptive text layout, caches references to its child views (title, subtitle, image), and returns the inflated layout","Lazily initializes and returns a `View` representing a descriptive text-only layout, inflating it from a `ViewStub` and retrieving references to its title, subtitle, optional image, and tap-for-more text elements.”","Lazily initializes and returns a `View` representing a descriptive text-only layout, inflating it from a `ViewStub` and retrieving references to its title, subtitle, optional image, and tap-for-more text elements.”",18.902185813291208,53.57142857142857,29.629629629629626,46.42857142857142,75.12869834899902
31,java,Updates the header view on the main UI thread by making its root view visible and setting the card's title and icon from the provided `CardHeader` object,Updates the visibility of the root view and the text and icon of the card title with the provided `CardHeader` data on the main thread.”,Updates the visibility of the root view and the text and icon of the card title with the provided `CardHeader` data on the main thread.”,21.836245334292013,64.15094339622641,31.37254901960785,45.28301886792452,79.60478067398071
32,java,"Lazily inflates a `ViewStub` to create and return the text block layout view, while also finding and caching references to its child text views on the first call","Lazily initializes and returns a `View` from a `ViewStub` within the root view, retrieving the `TextBlock` and `TapForMoreText` views from the inflated layout.”","Lazily initializes and returns a `View` from a `ViewStub` within the root view, retrieving the `TextBlock` and `TapForMoreText` views from the inflated layout.”",9.831781143765888,39.21568627450981,4.081632653061225,31.372549019607842,72.0745325088501
33,java,"Queries the `PackageManager` for a `MediaBrowserService` within a given package and returns a `ComponentName` for the first one found, or `null` if none exist",Retrieves the default `ComponentName` of a media browsing service within a specified package by querying the `PackageManager` for services matching the `MediaBrowserService.SERVICE_INTERFACE` intent action.”,"Retrieves the default `ComponentName` of a media browsing service within a specified package by querying the `PackageManager` for services matching the `MediaBrowserService.SERVICE_INTERFACE` intent action, returning `null` if no service is found.”",18.262031955594097,45.614035087719294,14.545454545454545,31.57894736842105,74.6450662612915
34,java,"Determines if a component should be added to a launchable list, returning `false` if its package is explicitly hidden or if it's a custom media component and launchable apps are also being shown, otherwise returning `true` for valid launchable or media service types","Determines whether a given component should be added to the launchables list based on a blacklist of package names, a whitelist of custom media components, and the component's application type.”","Determines whether a given component should be added to the launchables list based on a blacklist of package names, a whitelist of custom media components, and the component's application type, logging an error for invalid application types.”",10.079212231004814,43.90243902439025,12.5,36.58536585365854,68.14778447151184
35,java,"Sets the car's media source to a given component in browse mode and finishes the context if it's an Activity, catching and logging a `CarNotConnectedException` if the car service is unavailable","Selects a media source and finishes the activity if it is one, using the provided `CarMediaManager` to set the media source to browse mode, handling `CarNotConnectedException` by logging an error.”","Selects a media source and finishes the activity if it is one, using the provided `CarMediaManager` to set the media source to browse mode, handling `CarNotConnectedException` by logging an error and preventing activity termination.”",9.40297729239083,56.71641791044776,18.46153846153846,26.865671641791046,69.48086023330688
36,java,"Safely checks if a given activity is distraction optimized using the `CarPackageManager`, returning `false` and logging an error if the manager is null or a `CarNotConnectedException` is caught","Checks if a given activity within a package is distraction optimized on a connected car, returning `true` if so and logging an error if the car is not connected.","Checks if a given activity within a package is distraction optimized on a connected car, returning `true` if so and logging an error if the car is not connected or if an exception occurs.",25.659686058415044,58.06451612903226,36.666666666666664,54.83870967741935,75.71852207183838
38,java,"Retrieves a specific, resolvable map `Intent` from a configured list if it matches the system's default map app, otherwise falls back to a generic `Intent` for any map application","Retrieves a preferred `Intent` for launching maps, prioritizing activities specified in `config_homeCardPreferredMapActivities` while falling back to the default maps activity if no preferred activity is found or is invalid.”","Retrieves a preferred `Intent` for launching maps, prioritizing activities specified in `config_homeCardPreferredMapActivities` and returning the default maps activity if no preferred activity is found or is invalid.”",9.077723654578321,24.137931034482758,7.142857142857142,17.241379310344826,61.99913024902344
39,java,"Lazily initializes a set of `HomeCardModule`s by reflectively instantiating class names from a configuration array, and then uses a `FragmentTransaction` to add each module's card view to the UI layout","Lazily initializes a set of `HomeCardModule` instances by dynamically creating them via reflection from a list of class names, setting a `ViewModelProvider` for each, and then adding them to the fragment manager to be displayed in their respective card view resources.”","Lazily initializes a set of `HomeCardModule` instances by dynamically creating them via reflection from a list of class names, setting a `ViewModelProvider` for each, and then adding them to the fragment manager to be displayed in their respective card view resources.”",22.154439674466865,54.794520547945204,28.169014084507044,41.0958904109589,79.39070463180542
40,java,"Iterates through a list of appeared tasks and uses the `ActivityTaskManager` to remove any task that is in multi-window mode, logging it as a dangling task","Iterates through a list of `TaskAppearedInfo` objects, removes any multi-window tasks from the `ActivityTaskManager` to clean up dangling tasks.",Iterates through a list of `TaskAppearedInfo` objects and removes multi-window tasks from the `ActivityTaskManager` to clean up dangling tasks.,26.015611333239697,55.3191489361702,31.11111111111111,42.5531914893617,79.64127659797668
41,java,Parses the mode from the current Intent and sets the title for both the Activity and the CarUi toolbar using the string resource ID defined in that mode,"Parses the application mode from the intent, sets the activity title, and updates the toolbar title accordingly.”",Parses the application mode from the intent and updates both the activity title and the toolbar title.”,8.344746006465089,62.22222222222222,32.558139534883715,57.77777777777777,75.00596046447754
42,java,"Lazily initializes and returns a `Chronometer` by finding it in the layout, while also finding and caching its associated separator view on the first call","Lazily initializes and returns a `Chronometer` and its associated separator view from the layout, retrieving them from the `DescriptiveTextWithControlsLayoutView` if they haven't been previously obtained.”","Lazily initializes and returns a `Chronometer` and its associated separator view from the layout, retrieving them from the `DescriptiveTextWithControlsLayoutView` if they haven't been previously obtained.”",33.61230151076893,54.90196078431373,36.734693877551024,47.05882352941176,74.5334267616272
43,java,"Lazily inflates a media layout from a `ViewStub`, finds and caches its title and subtitle views, initializes its media playback controls bar via a presenter, and returns the inflated view","Lazily initializes and returns a `View` representing the media layout, inflating it from a `ViewStub`, retrieving its title and subtitle views, and initializing the media control bar with the presenter.”","Lazily initializes and returns a `View` representing the media layout, inflating it from a `ViewStub`, retrieving its title and subtitle views, and initializing the media control bar via the presenter.”",30.67238509188851,73.33333333333333,31.03448275862069,53.333333333333336,79.09886837005615
44,java,"If a valid `Drawable` and card size are provided, this method scales the image to a square based on the card's largest dimension, blurs it, and sets the resulting bitmap as the animated, visible card background","Updates the card's background image by scaling a provided `Drawable` to a square, blurring it, and setting it as the background image with a transition animation if the card size is valid.”","Updates the card's background image by scaling a provided `Drawable` to a square, blurring it, and setting it as the background image with a transition animation if the card size is valid and the image is not null.”",10.25267180172767,57.894736842105274,21.62162162162162,26.31578947368421,72.65980839729309
45,java,Makes the media layout view visible and updates its title and subtitle with the provided text,Sets the visibility of the `MediaLayoutView` to visible and updates the text of the `MediaTitle` and `MediaSubtitle` views with the provided `title` and `subtitle` respectively.”,Sets the visibility of the `MediaLayoutView` to visible and updates the text of the `MediaTitle` and `MediaSubtitle` views with the provided `title` and `subtitle` respectively.”,7.2585583531076985,53.65853658536586,30.76923076923077,39.02439024390244,67.77054071426392
46,java,"If the content's start time is positive, this method makes a chronometer and a separator visible, sets the chronometer's base time, and starts it; otherwise, it hides both views","Conditionally displays a chronometer and separator based on the start time of a `DescriptiveTextWithControlsView`, updating the chronometer's base and starting it if a start time is provided.","Conditionally displays a chronometer and separator based on the start time of a `DescriptiveTextWithControlsView`, updating the chronometer's base and starting it if a start time is provided, otherwise hiding both.",10.800560841180541,61.29032258064516,23.333333333333332,38.70967741935484,73.48408699035645
47,java,Registers a member callback to the provided `Call` object after verifying it is not null,Registers a callback to a given `Call` object to receive notifications about its lifecycle events.,Registers a callback to a given `Call` object to receive notifications about its lifecycle events.,18.16725573641283,40.00000000000001,21.428571428571427,40.00000000000001,73.70903491973877
48,java,"Handles the removal of a call by clearing the current call and card content, notifying the presenter of the model update, and unregistering its callback from the call object for cleanup","Removes the current call, clears associated data, updates the presenter, and unregisters the callback for the removed call.”","Removes the current call, clears associated data, updates the presenter, and unregisters the callback for the removed call if a call was provided.”",7.818013982682873,48.14814814814815,15.384615384615383,33.333333333333336,71.02069854736328
49,java,"Formats a phone number to create a new `DescriptiveTextWithControlsView` with call details and controls, then notifies the presenter that the model has been updated","Formats a phone number, creates a `DescriptiveTextWithControlsView` using the formatted number and other UI elements, and then notifies the presenter that the model has been updated.”","Formats a phone number, creates a `DescriptiveTextWithControlsView` using the formatted number and other UI elements, and then notifies the presenter that the model has been updated.”",41.10573751509463,68.0,49.999999999999986,68.0,85.0447416305542
50,java,"Initializes mute, end call, and dialpad buttons by assigning each an icon and a click listener to toggle mute status, disconnect the current call, and delegate to an onClick handler, respectively","Initializes three `DescriptiveTextWithControlsView.Control` objects representing mute, end call, and dialpad buttons, each configured with an icon and a corresponding action to be performed when clicked.”","Initializes three `DescriptiveTextWithControlsView.Control` objects representing mute, end call, and dialpad buttons, each configured with an icon and a corresponding action to be performed when clicked, using the `InCallService` and `CurrentCall` objects.”",22.472582089347195,47.61904761904761,26.229508196721312,47.61904761904761,65.36913514137268
53,cpp,"When a new listener is added, this callback immediately notifies it with an `AVAILABLE` status if the D-Bus connection is already active",Notifies a listener with `AvailabilityStatus::AVAILABLE` if the D-Bus connection is connected when a new listener is added to a subscription.,"Notifies a listener with `AvailabilityStatus::AVAILABLE` if the D-Bus connection is connected when a new listener is added to a subscription, ignoring the subscription itself.",25.593313004630918,61.224489795918366,42.55319148936171,40.816326530612244,73.35619330406189
54,cpp,"Atomically registers a given thread to be joined later by adding it to a list, but only if its associated connection is active and the thread is not already present in the list","Registers a thread to be joined upon exit for a given D-Bus connection, ensuring the thread is added to a vector of threads to be joined if it's not already present.”","Registers a thread to be joined upon exit for a given D-Bus connection, adding it to a vector of threads to be joined if it's not already present.”",18.969346970091497,50.793650793650805,32.786885245901644,44.44444444444445,70.977383852005
56,cpp,A callback function that handles the removal of a D-Bus watch by stopping its monitoring and disassociating the high-level wrapper object from the underlying `libdbus` watch,"Removes a D-Bus watch by retrieving the associated `DBusWatch` object, stopping its watch if it's ready, and clearing the watch's data in the underlying D-Bus library”","Removes a D-Bus watch by retrieving the associated `DBusWatch` object, stopping its watch if it's ready, and clearing the watch's data in the underlying D-Bus library, handling potential null pointers along the way”",9.592545068492521,43.07692307692308,19.04761904761905,33.84615384615385,70.52022218704224
57,cpp,"Handles the toggling of a D-Bus watch by creating a C++ wrapper object for it on first use, and then starting or stopping its monitoring based on its readiness status",Handles D-Bus watch events by either initializing a `DBusWatch` object and starting its monitoring or stopping the watch and removing its associated `DBusWatch` object if the watch is no longer ready to be monitored.”,"Handles D-Bus watch events by either initializing a `DBusWatch` object and starting its monitoring or stopping the watch and removing its associated `DBusWatch` object if the watch is no longer ready to be monitored, using the provided `libdbusWatch` and `WatchContext` data.”",3.0503223065033462,41.0958904109589,11.267605633802818,32.87671232876712,64.38230872154236
58,cpp,"Lazily initializes and returns a thread-safe, singleton `DBusObjectManager` instance using a double-checked locking pattern","Lazily creates and returns a `DBusObjectManager` shared pointer, ensuring only one instance exists per `DBusConnection` by using a mutex and a shared pointer to manage its lifecycle”","Lazily creates and returns a `DBusObjectManager` shared pointer, ensuring only one instance exists per `DBusConnection` by using a mutex and a shared pointer to manage its lifecycle and prevent race conditions.",7.674991016582547,34.04255319148936,13.333333333333334,34.04255319148936,71.68347239494324
59,cpp,"Decrements a reference count for a given D-Bus service name, releasing it from the bus if the count reaches zero, and returns `true` on success or `false` if the name was not being tracked","Releases a D-Bus service name by decrementing its count or calling `dbus_bus_release_name` if the count reaches one, returning `true` if the release was successful and `false` otherwise.”","Releases a D-Bus service name by decrementing its count or calling `dbus_bus_release_name` if the count reaches one, returning `true` if the release was successful and `false` if the release failed or the service name was not found.”",18.613958857202263,55.263157894736835,27.027027027027025,44.73684210526316,73.65382313728333
60,cpp,"Steals the reply from a `DBusPendingCall` handle and wraps it in a new `DBusMessage` object that takes ownership, returning an empty message if the input handle is null","Converts a `DBusPendingCall` (a D-Bus pending call object) into a `DBusMessage` object, extracting the reply from the pending call and returning a new `DBusMessage` instance.”",Converts a `DBusPendingCall` into a `DBusMessage` by extracting the reply from the pending call and returning a new `DBusMessage` instance.”,22.181463369575475,45.833333333333336,21.73913043478261,29.166666666666668,74.30254220962524
61,cpp,Thread-safely deallocates a collection of asynchronous D-Bus message reply handlers by moving them from a protected member list to a local copy before iterating through and deleting each one,"Deletes all `DBusMessageReplyAsyncHandler` objects stored in a protected vector by first moving them to a temporary vector, then iterating through the temporary vector and deleting each handler.”",Deletes all `DBusMessageReplyAsyncHandler` objects stored in a protected vector by moving them to a temporary vector and then deleting each handler from the temporary vector.”,8.334122661623818,39.28571428571428,18.51851851851852,32.14285714285714,67.49163866043091
62,cpp,Thread-safely notifies all registered signal handlers of a successful state by invoking their `onSpecificError` callback with a `SUCCESS` status for each associated signal tag,"Iterates through a map of signal handlers and their associated error tags, calling the `onSpecificError` method of each handler with a `SUCCESS` status for each tag, after acquiring a lock to protect the map.","Iterates through a map of signal handlers and their associated error tags, calling the `onSpecificError` method of each handler with a `SUCCESS` status for each tag, after acquiring a lock to protect the map and before releasing it.",20.487520602172165,44.44444444444444,19.672131147540984,34.920634920634924,70.3682541847229
63,cpp,"Thread-safely removes a connection, identified by its ID, from an internal collection if it exists","Removes a `DBusConnection` from the `connections_` map using the provided `ConnectionId_t` as a key, ensuring thread safety with a `recursive_mutex`.","Removes a `DBusConnection` from the `connections_` map using the provided `ConnectionId_t` as a key, ensuring thread safety with a `recursive_mutex`.",1.389736936231864,21.05263157894737,5.555555555555555,15.789473684210526,62.69152760505676
64,cpp,"Handles an incoming D-Bus signal by dispatching it to the appropriate handler for either ""InterfacesAdded"" or ""InterfacesRemoved"" events based on the message's member name","Handles D-Bus messages received for instance availability status changes, dispatching the appropriate event handler (`onInterfacesAddedSignal` or `onInterfacesRemovedSignal`) based on the message's member name.”","Handles D-Bus messages received for instance availability status changes, dispatching the appropriate event handler (`onInterfacesAddedSignal` or `onInterfacesRemovedSignal`) based on the message's member name.”",18.486615216367266,62.745098039215684,32.6530612244898,58.82352941176471,79.89476919174194
65,cpp,"Retrieves available service instances from a registry, translates the internal D-Bus representation into a vector of `DBusAddress` objects, and populates the provided output vector and status parameter","Retrieves a list of available service instances from a D-Bus proxy, populating a `std::vector` of `DBusAddress` objects and setting a `CallStatus` to `SUCCESS` if the operation completes without error.”","Retrieves a list of available service instances from a D-Bus proxy, populating a `std::vector` of `DBusAddress` objects and setting a `CallStatus` to `SUCCESS` if the operation completes without error.”",18.2199482457715,50.84745762711865,31.57894736842105,50.84745762711865,73.1857180595398
66,cpp,"Gets the availability status of a service instance by translating its identifier to a D-Bus address and querying a registry, setting the result and a success status in output parameters","Retrieves the availability status of a D-Bus service instance, translating a CommonAPI address to a D-Bus address and checking if the instance is alive in the D-Bus registry, setting the `AvailabilityStatus` accordingly and returning a `CallStatus` of `SUCCESS`.","Retrieves the availability status of a D-Bus service instance by translating a CommonAPI address to a D-Bus address and checking if the instance is alive in the D-Bus registry, setting the `AvailabilityStatus` accordingly and returning a `CallStatus` of `SUCCESS`.",25.632754128348928,63.01369863013699,39.43661971830986,57.53424657534247,71.5426504611969
67,cpp,"Handles a D-Bus ""InterfacesRemoved"" signal by parsing the object path and interface names, and for any interface matching the one being observed, notifies listeners that its status has changed to ""NOT_AVAILABLE","Processes a D-Bus signal indicating the removal of interfaces, iterating through the provided interface names to check if the observed interface was removed, and if so, updates the availability status to `NOT_AVAILABLE`.","Processes a D-Bus signal indicating the removal of interfaces, checking if the observed interface was removed and updating its availability status to `NOT_AVAILABLE` if it was.",5.923899512939285,45.90163934426229,13.559322033898304,39.344262295081975,72.22034931182861
68,cpp,Notifies listeners of an interface's availability change by translating its D-Bus path and name into a generic CommonAPI address,"Translates a D-Bus address (service, object path, interface name) to a CommonAPI address and then notifies listeners of a change in the availability status of the corresponding interface.","Translates a D-Bus address (service, object path, interface name) to a CommonAPI address and notifies listeners of a change in the availability status of the corresponding interface.",4.224987634986058,57.14285714285715,17.02127659574468,28.571428571428577,81.28958940505981
69,cpp,"Thread-safely schedules a task on the main event loop to notify a newly added listener, passing along its specific subscription details","Adds a listener to a `DBusProxy`'s subscription list and schedules a `DBusConnection` function call to notify the listener when the subscription's event occurs, using a `weak_ptr` to ensure the proxy object still exists.”","Adds a listener to a `DBusProxy`'s subscription list and schedules a `DBusConnection` function call to notify the listener when the subscription's event occurs, using a `weak_ptr` to ensure the proxy object still exists.”",2.8916070046094724,31.034482758620683,7.142857142857142,20.689655172413794,60.34630537033081
70,cpp,Thread-safely removes all listeners from an internal collection that match the provided `Subscription` identifier,"Removes a listener from the `listeners_` map based on the provided subscription, ensuring thread safety with a recursive mutex lock.","Removes a listener from the `listeners_` map based on the provided subscription, ensuring thread safety with a recursive mutex lock and iterating through the map to find and erase the matching subscription.",2.622723570535095,29.78723404255319,8.88888888888889,21.27659574468085,66.83046221733093
71,cpp,Delegates the registration of a signal state handler for a specific subscription to the underlying connection object,"Adds a `DBusSignalHandler` to the `DBusProxyConnection`'s signal state handler map, associating it with a given subscription ID.","Adds a `DBusSignalHandler` to the `DBusProxyConnection`'s signal state handler map, associating it with a given subscription ID.",8.282282660969603,45.714285714285715,18.18181818181818,34.285714285714285,64.9718701839447
72,cpp,Handles the result of an asynchronous service instance query by translating the `DBusAddress` list to a string list on success and invoking a final callback with the call status and the translated list,"Handles the asynchronous callback for retrieving available service instances, translating the D-Bus addresses to strings and passing the status and instances to the provided callback function”","Handles the asynchronous callback for retrieving available service instances, translating the D-Bus addresses to strings and passing the status and instances to the provided callback function.",4.370803140940122,43.33333333333332,10.344827586206897,40.0,69.14504170417786
73,cpp,"Dispatches an incoming `DBusMessage` to a registered handler based on its object path and interface, or handles it as a standard introspection request, returning `true` if the message was processed","Handles incoming D-Bus messages by searching for a registered handler for the message's object path and interface, calling the handler's `onInterfaceDBusMessage` method if found, or handling introspectable interface messages if no specific handler exists.”","Handles incoming D-Bus messages by searching for a registered handler for the message's object path and interface, calling the handler's `onInterfaceDBusMessage` method if found, or handling introspectable interface messages if no specific handler exists, returning `true` if the message was handled and `false` otherwise.”",24.12344847721035,41.55844155844156,26.666666666666668,38.961038961038966,73.95650744438171
74,cpp,"Registers a D-Bus interface handler for a specific path, returning `false` if the exact handler is already registered, but allowing idempotent registration for standard `ObjectManager` and `Properties` interfaces","Adds a `DBusInterfaceHandler` to a table of registered objects, returning `true` if the handler was successfully added or already exists (except for `org.freedesktop.DBus.ObjectManager` and `org.freedesktop.DBus.Properties` interfaces), and `false` otherwise.”","Adds a `DBusInterfaceHandler` to a table of registered objects, returning `true` if the handler was successfully added or already exists (except for `org.freedesktop.DBus.ObjectManager` and `org.freedesktop.DBus.Properties` interfaces), and `false` otherwise.”",11.124661907380256,43.75000000000001,9.67741935483871,37.5,66.5820062160492
75,cpp,"Registers a given `DBusInterfaceHandler` to a specific path in a table, returning `true` on success and `false` if the handler is already registered for that path","Adds a `DBusInterfaceHandler` to a table of registered objects, keyed by `DBusInterfaceHandlerPath`, ensuring no duplicates are added and returning `true` on success or `false` if the handler already exists”","Adds a `DBusInterfaceHandler` to a table of registered objects, keyed by `DBusInterfaceHandlerPath`, ensuring no duplicates are added and returning `true` on success or `false` if the handler already exists”",35.21578183200172,58.18181818181819,33.9622641509434,50.90909090909091,76.8089234828949
78,c,"Constructs and sends a 2-byte UDS positive response to an ECU Reset request, containing the positive response SID and the echoed reset type, over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","Constructs and sends a 2-byte UDS positive response for an ECU reset request—containing the reset type—over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails”","Constructs and sends a 2-byte UDS positive response for an ECU reset request—containing the reset type—over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails”",51.48206835428788,89.1891891891892,83.33333333333333,89.1891891891892,88.03114891052246
79,c,"Processes a UDS ECU Reset request, validating the 2-byte message length, sending a positive response before triggering a system reboot for a 'hard reset', and sending a negative response for either an incorrect length or an unsupported reset sub-function","Handles a UDS ECU reset request by validating the message length, determining the reset type (hard or unsupported), sending a positive or negative response accordingly, and initiating a cold reboot if a hard reset is requested”","Handles a UDS ECU reset request by validating the message length, determining the reset type (hard or unsupported), sending a positive or negative response accordingly, and initiating a cold reboot if a hard reset is requested, logging a debug message before rebooting”",12.096859591378287,60.24096385542169,27.160493827160497,45.78313253012048,70.9432601928711
80,c,"Constructs and sends a 4-byte UDS positive response for a ""Request Download"" service, specifying a maximum block length of 0x00D2, over a CAN bus using the ISO-TP protocol and logging an error on failure","Constructs and sends a 4-byte UDS positive response for a Request Download request—containing the positive response code and a block size of 258 bytes—over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails”","Constructs and sends a 4-byte UDS positive response for a Request Download request—containing the positive response code and a block size of 258 bytes—over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails”",39.46672473224036,71.7948717948718,52.63157894736842,69.23076923076924,82.4575126171112
81,c,"Constructs and sends a 2-byte UDS positive response for a Transfer Data request (containing the positive SID and the block sequence counter) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","Constructs and sends a 2-byte UDS positive response for a Transfer Data request—containing the block sequence counter—over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails”","Constructs and sends a 2-byte UDS positive response for a Transfer Data request—containing the block sequence counter—over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails”",63.95986442126098,94.59459459459461,94.44444444444444,94.59459459459461,91.95797443389893
82,c,"Constructs and sends a 5-byte UDS positive response for the Routine Control service (containing the routine control type, routine ID, and a result code) over a CAN bus via ISO-TP, logging an error if the transmission fails","Constructs and sends a 5-byte UDS positive response for a Routine Control request—containing the routine ID and a result code—over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails”","Constructs and sends a 5-byte UDS positive response for a Routine Control request—containing the routine ID and a result code—over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails”",47.34365204683125,90.9090909090909,77.33333333333334,88.31168831168831,90.4509425163269
83,c,"Constructs and sends a 1-byte UDS positive response for a Transfer Exit request (containing the request SID + 0x40) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","Constructs and sends a 1-byte UDS positive response for a Request Transfer Exit request over a CAN bus via the ISO-TP protocol, logging an error if the transmission fails”","Constructs and sends a 1-byte UDS positive response for a Request Transfer Exit request over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails”",66.63758349952528,93.93939393939394,84.375,90.90909090909089,89.2684280872345
85,c,"Searches a predefined `id_mapping` array for a given CAN ID and returns its corresponding index, or `0xff` if the ID is not found","Maps a CAN identifier (`can_id`) to a corresponding index within the `id_mapping` array, returning the index if found or `0xff` if the identifier is not recognized.”","Maps a CAN identifier (`can_id`) to a corresponding index within the `id_mapping` array, returning the index if found or `0xff` if the identifier is not recognized.”",26.560572488805864,61.53846153846153,36.0,42.30769230769231,77.88755297660828
86,c,"Disables a specific LIN-to-CAN receive filter by clearing its callback pointer, or disables all filters if a special ID is passed, while ignoring out-of-bounds IDs","Removes a specified incoming message callback for a given filter ID from the `incoming_callbacks` array within the `lin2can_data` structure, or clears all callbacks if the filter ID is `TRANSLATABLE_ADDRESSES_LEN`.","Removes a specified incoming message callback for a given filter ID from the `incoming_callbacks` array within the `lin2can_data` structure, or clears all callbacks if the filter ID is `TRANSLATABLE_ADDRESSES_LEN`.",2.8916070046094724,29.03225806451613,3.3333333333333335,22.58064516129032,62.18012571334839
87,c,"A LIN driver callback that retrieves a pending outgoing frame from a message queue, copies its data for transmission, invokes a frame-specific completion callback, and returns a boolean indicating if a frame was successfully prepared","Retrieves a LIN frame from a message queue, copies its contents into a `lin_frame` structure, and then calls a user-provided callback function to transmit the frame via CAN, logging debug information and returning `true` on success or `false` if the queue is empty”","Retrieves a LIN frame from a message queue, copies its contents into a `lin_frame` structure, and then calls a user-provided callback function to transmit the frame via CAN, logging debug information”",21.90665528084726,46.3768115942029,23.880597014925375,40.57971014492753,70.25732398033142
88,c,"Acts as a LIN-to-CAN gateway callback, translating an incoming LIN frame by using its first data byte's top two bits as an index to find a target CAN ID, constructing a new CAN frame with the translated ID and a payload where those index bits are masked out, and finally invoking a registered handler with the resulting CAN frame","Translates incoming LIN frames into CAN frames by mapping the LIN ID to a CAN ID, extracting the relevant data, and invoking a registered callback function with the translated CAN frame and user data.”","Translates incoming LIN frames into CAN frames by mapping the LIN ID to a CAN ID, extracting the relevant data, and invoking a registered callback function with the translated CAN frame and user data.”",6.183808535215116,47.91666666666667,14.893617021276597,33.33333333333333,70.20798325538635
89,c,"Initializes a high-voltage shield by configuring its Output Enable (OE) GPIO, writing a zeroed state to its hardware registers, and then setting the OE pin to enable the device's outputs, logging errors at each step","Initializes the HV shield device by configuring the output enable GPIO pin, clearing the register data, updating the registers, and enabling the output, returning an error code if any of these steps fail”","Initializes the HV shield device by configuring the output enable GPIO pin, clearing the register data, updating the registers, and enabling the output, returning an error code if any of these steps fail or if the output enable pin fails to set”",4.895789765930367,37.9746835443038,7.792207792207792,30.37974683544304,71.46880626678467
90,c,"Sets the gain for a specified DAC (0 or 1) on a high-voltage shield by updating its value in a cached data structure and then calling an update function to write the new configuration to the hardware, returning an error for an invalid DAC index","Sets the gain value for a specified DAC channel (0 or 1) within the `hv_shield_data_t` structure, then calls the `_hv_shield_update` function to apply the change, returning an error if the DAC channel is invalid”","Sets the gain value for a specified DAC channel (0 or 1) within the `hv_shield_data_t` structure, then calls the `_hv_shield_update` function to apply the change, returning an error if the DAC channel is invalid or if the update fails”",18.390750352940167,55.55555555555556,25.0,48.888888888888886,74.22020435333252
91,c,"Enables or disables a specific GPIO output on a high-voltage shield by validating the pin index (0-31), remapping it via a nibble-swap, modifying a cached register bit, and then calling a helper function to write the update to the hardware","Sets the output enable bit for a specified GPIO pin (0-31) on the HV shield device, adjusting the index based on its position within the 8-bit register, and updating the device's register if the operation is successful”","Sets the output enable bit for a specified GPIO pin (0-31) on the HV shield device, adjusting the index based on its position within the 8-bit register, and updating the device's register if the operation is successful, returning -EINVAL if the index is out of range”",9.366475936864255,32.608695652173914,2.2222222222222223,21.73913043478261,67.92760491371155
92,c,"A callback function that forwards a received CAN frame from a source device to a destination device (passed via `user_data`) using a non-blocking send operation, logging a debug message on successful queuing or a warning on failure","Forwards a received CAN frame from one device to another by using the `can_send` function to transmit the frame to a specified destination device, logging a warning if the transmission fails and a debug message upon successful routing”","Forwards a received CAN frame from one device to another by using the `can_send` function to transmit the frame to a specified destination device, logging a warning if the transmission fails and a debug message upon successful routing.”",16.846216892989915,53.84615384615385,31.57894736842105,41.02564102564102,76.65740251541138
93,c,"Configures a CAN message router by iterating through an array of routing entries, adding a receive filter to a source CAN interface for each entry that uses a callback to forward matching frames to a destination interface, and returns an error if any filter registration fails","Registers a specified number of CAN router entries by adding corresponding receive filters to the CAN driver, associating each filter with a callback function and a destination pointer, returning an error code if any registration fails”","Registers a specified number of CAN router entries by adding corresponding receive filters to the CAN driver, associating each filter with a callback function and a destination pointer, returning an error code if any registration fails”",3.921193946510154,56.09756097560975,12.5,46.34146341463415,76.68916583061218
94,c,"Initializes the CAN router by iterating through all statically-defined routing tables found in a dedicated linker section and registering their entries, returning an error if any registration fails","Initializes the CAN router by iterating through a predefined table of CAN router entries and registering each entry, returning an error if any registration fails”","Initializes the CAN router by iterating through a predefined table of CAN router entries and registering each entry, returning an error if any registration fails”",42.58458808693834,66.66666666666666,50.0,62.962962962962955,84.57863926887512
95,c,"Iterates through a pre-configured list of low-voltage GPIOs, setting the state of each pin enabled by an input mask to the corresponding bit in a value word, logging and returning an error if any underlying GPIO operation fails","Iterates through a mask of GPIO pins and sets the corresponding voltage level on the HV shield GPIO ports, returning 0 on success or a negative error code if any GPIO setting fails”","Iterates through a mask of GPIO pins and sets the corresponding voltage level on the HV shield GPIO ports, returning 0 on success or a negative error code if any GPIO setting fails”",6.231654893837996,49.31506849315069,11.267605633802818,32.87671232876713,73.88354539871216
96,c,"Populates an output parameter with the number of available Abstract LIN callback slots, calculated by subtracting the used count from a configured maximum, returning an error if the parameter is a null pointer","Returns the number of free callback slots available in the abstract LIN driver by subtracting the number of currently used callbacks from the maximum number of callbacks, returning an error if the provided pointer is null”","Calculates and returns the number of free callback slots in the abstract LIN driver by subtracting the number of used callbacks from the maximum allowed, returning an error if the provided pointer is null”",23.13518119743583,62.68656716417911,30.76923076923077,53.73134328358209,78.65356802940369
97,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","Registers a callback function to be invoked when a LIN frame with a specific ID and size is received, storing the callback and associated data in a lookup table, returning an error code if the input parameters are invalid or if the callback table is full”","Registers a callback function to be invoked when a LIN frame with a specific ID and size is received, storing the callback and associated data in a lookup table, returning an error code if the input parameters are invalid or if the callback table is full”",10.500527502878088,56.17977528089888,18.39080459770115,40.44943820224719,69.95164752006531
98,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","Registers an outgoing callback function for a specific LIN frame ID and size within a device's abstract LIN data structure, returning an error code if the callback is invalid or the frame size is out of range, or if no free callback slots are available”","Registers an outgoing callback function for a specific LIN frame ID and size within a device's abstract LIN data structure, returning an error code if the callback is invalid or the frame size is out of range, or if no free callback slots are available”",22.118168921899898,51.685393258426956,25.287356321839084,38.20224719101123,68.95413398742676
99,c,"Sets the active LIN schedule table by index, first validating the index and then using a semaphore to thread-safely update the scheduler's state and reset its entry pointer to the start of the new table","Sets the active table index for a given abstract LIN scheduler, ensuring only one table is active at a time by using a semaphore, and resets the current entry index to 0 upon activation, returning an error if the table index is out of range”","Sets the active table index for a given abstract LIN scheduler, ensuring only one table is active at a time by using a semaphore, and resets the current entry index to 0 upon activation, returning an error if the table index is out of range or if the scheduler is already active”",5.5913101225260675,44.943820224719104,11.49425287356322,33.70786516853933,65.957510471344
100,c,"Disables a LIN scheduler by first checking if it's already stopped, then taking a semaphore to safely wait for the current operation to complete before setting the active schedule table index to -1","Disables a LIN scheduler by setting its current table index to -1 and decrementing its active semaphore, ensuring that no further messages are processed.","Disables a LIN scheduler by setting its current table index to -1 and decrementing its active semaphore, preventing further message processing.",17.87612263252719,47.27272727272727,26.415094339622634,36.36363636363637,73.23464155197144
