id,language,reference,generated,generated_rci
1,python,Checks if a data type is a subtype of a specified base type,This function determines if a given type (`check`) is a subtype or equal to a base type within a class's type hierarchy.,This function checks if a type (`check`) is a subtype of or equal to another type (`base`) based on a class's type definitions.
2,python,Validates if a value conforms to a datatype specified by a string,This function validates if a given value conforms to a specified datatype using a type checker.,This function checks if a value matches a given datatype by using a type checker and raising an exception for unsupported datatypes.
3,python,Checks if a value or list of values is a valid integer for a specified bit-width and signedness.,"This function validates if an integer or a list of integers falls within a specified range, considering whether it's signed or unsigned and the number of bits.","This function checks if an integer or a list of integers is a valid value within a given bit range, accounting for signed or unsigned representation."
4,python,Looks up a type definition tuple by its string name from a list of types,"The function retrieves type information (name, callable, and constraints) from a class's defined types based on a given datatype string.",The function searches a class's types for a matching datatype and returns its associated details (callable and constraints).
5,python,Finds all datatypes within the current namespace and any parent namespaces of a given FQN,This function identifies and returns a dictionary of namespaced datatypes matching a given fully qualified name (FQN) prefix from a list of dynamic datatypes.,This function searches a list of dynamic datatypes to find namespaced datatypes whose prefixes match a given fully qualified name (FQN).
6,python,Traverses a VSS tree to count the occurrences and collect the fully qualified paths of each node name,"The function recursively populates a dictionary with unique node names and their paths from a VSS node tree, incrementing a counter for each occurrence.","The function recursively populates a dictionary with unique node names, their paths, and a counter for each node encountered in a VSS node tree."
7,python,Converts a string-based data type definition into an ApiGearType object,"The function maps a string representation of a data type (e.g., ""int32"", ""string"", ""double[]"") to an `ApiGearType` object, handling array types and basic data types.","The function converts a string representation of a data type to an `ApiGearType` object, recognizing basic types, arrays, and custom types."
8,python,Generates an ApiGear property from a VSS (Vehicle Signal Specification) node,"This function generates an `ApiGearProperty` object from a `VSSNode` and datatype, handling unsupported datatypes and populating the description if available.","This function creates an `ApiGearProperty` object based on a `VSSNode`'s data and datatype, returning `None` for unsupported types."
9,python,Recursively resolves and flattens a specification file and all its include dependencies,"The function recursively gathers `VSpec` objects from a given specification file and its included files, constructing a dependency tree.",The function recursively collects `VSpec` objects and their dependencies from a specification file and included files.
10,python,Loads and merges multiple VSpec files from specified paths into a single VSpec object,"This function loads and merges multiple VSpec files, combining their includes and definitions into a single VSpec object, while logging the process and raising an exception if no specs are loaded.","This function loads, merges, and returns a combined VSpec object from a list of specification files, handling includes and logging the process."
11,python,"Recursively updates a dictionary with values from another, merging nested dictionaries","Recursively merges dictionaries, updating nested dictionaries and overwriting non-dictionary values.","Recursively updates a dictionary with another, merging nested dictionaries and overwriting non-dictionary values."
12,python,Validates a constant unique identifier (constUID) is a 32-bit hexadecimal string,"This function validates if a given string is a valid hexadecimal constant UID (format: 0x followed by 8 hexadecimal characters) and returns the string if valid, otherwise None.","This function validates if a given string matches the format of a constant UID (0x followed by 8 hexadecimal characters) and returns the string if valid, otherwise None."
13,python,"Initializes and attempts to resolve a VSS raw model, returning the unresolved model on failure","This function creates and attempts to resolve a `VSSRaw` object from a dictionary, handling potential validation or model errors by returning an initialized but incomplete object.","This function creates a `VSSRaw` object from input data, attempts to resolve it, and returns it even if resolution fails, logging a debug message in case of errors."
14,python,Validates that a list of strings are all known datatypes,"The function validates a list of datatypes against a predefined set, raising an assertion error for invalid entries.","The function validates a list of datatypes, ensuring each is present in a predefined set and raising an error if not."
15,python,"Renders a VSS tree into a string, displaying specified attributes for each node","The function renders a tree structure into a string representation, including node names and specified attributes.","The function generates a string representation of a tree, displaying node names and their specified attributes."
16,python,Finds the root of a VSS instance by recursively traversing up the parent hierarchy,"The function recursively traverses up the VSSNode tree to find the root instance node, handling cases where the current node is not an instance or has no parent.","The function recursively traverses up the VSSNode tree to locate the root of an instance, raising an exception if no instance root exists."
17,python,Counts the depth of a chain of instance branches,Recursively counts the depth of instance children within a tree-like data structure.,Recursively calculates the depth of instance branches within a hierarchical data structure.
18,python,Finds all child node IDs that belong to a specific parent name,The function identifies node IDs that have a specific name as their expected parent.,The function returns a list of node IDs whose expected parent is a given name.
19,python,"Gets an attribute, returning a default value if the attribute is missing or its value is None","This function safely retrieves an attribute from an object, returning a default value if the attribute is not found or is None.","This function retrieves an attribute from an object, providing a default value if the attribute is missing or None."
20,python,Generates a Protobuf schema from a Vehicle Signal Specification (VSS) tree,"The code traverses a signal tree to generate Protocol Buffer (proto) definitions, including imports and message structures, from vehicle signal data.",The code generates Protocol Buffer (proto) definitions for vehicle signals by traversing a signal tree and creating message structures with optional fields and static UIDs.
21,python,Groups all leaf VSS branch instances by the fully qualified name of their original branch definition,The function extracts and organizes instance names under their respective root FQNs from a VSSNode tree structure.,The function identifies and groups instance names belonging to the same root node within a VSSNode tree.
22,python,Determines if a VSS node is a leaf based on its data type,The function checks if a VSSNode is a leaf node containing VSSDataDatatype data.,The function determines if a given VSSNode represents a leaf node with data of type VSSDataDatatype.
23,python,Checks if a VSS node is a branch that is not an instance,The function checks if a VSS node represents a branch with a non-instance data type.,The function determines if a VSS node is a branch and its data is not an instance.
24,python,Checks if a VSS node represents a branch instance,The function checks if a VSSNode represents an instance of a VSSDataBranch.,The function determines if a given VSSNode's data is an instance of a VSSDataBranch.
25,python,FNV-1 32-bit hashing algorithm for a byte sequence,This code calculates a 32-bit FNV-1a hash value for a given byte string.,This code computes a 32-bit FNV-1a hash of a byte string.
26,java,Lazily initializes and returns an audio card presenter with data models for media and in-call status,"This code lazily initializes and returns a `CardPresenter` (specifically a `HomeAudioCardPresenter`), providing it with either a default `InCallModel` or a `MediaViewModel` from a provider along with an `InCallModel`.","This code lazily initializes and returns a `CardPresenter` (specifically a `HomeAudioCardPresenter`), providing it with media data, either from a `MediaViewModel` or a default `InCallModel`."
27,java,Lazily initializes and returns the audio card view fragment,This code retrieves or creates an `AudioCardFragment` (view) and associates it with a presenter for displaying audio-related information.,"This code lazily initializes and returns an `AudioCardFragment` view, linking it to a presenter for audio card display."
28,java,Inflates a card fragment's layout and initializes its view components,"This code inflates a layout for a card fragment, finds its title and icon views, and returns the root view.",This code inflates a layout for a card fragment and initializes views for its title and icon.
29,java,"Sets a button's icon and click listener to make it visible, or hides it if no content is provided","This method updates an image button's icon, click listener, and visibility based on the provided control content.",This method configures and displays an image button based on associated control data.
30,java,Lazily inflates and initializes a descriptive text layout view on first access,"This method lazily initializes and returns a view containing descriptive text elements (title, subtitle, image, and ""tap for more"" text) from a ViewStub, caching it for subsequent use.","This method lazily initializes and returns a cached view containing descriptive text elements (title, subtitle, image, and ""tap for more"" text) inflated from a ViewStub."
31,java,Updates and displays a card header view with a new title and icon,"This code updates the UI elements (visibility, title, and icon) of a card header view on the main thread.","This code updates the card header's UI elements (visibility, title, and icon) within the main activity's UI thread."
32,java,Lazily inflates and returns a text block layout view from a ViewStub,"This code lazily initializes and returns a `View` representing a text block layout, inflating it from a `ViewStub` if it doesn't already exist.","This code lazily initializes and returns a `View` for a text block layout, inflating it from a `ViewStub` and retrieving child views if it doesn't already exist."
33,java,Gets the media browser service component from a given package,This code retrieves the component name of a media browsing service within a specified package using PackageManager.,This code retrieves the component name of the default media browsing service for a given package.
34,java,Determines if an app component should be launchable by filtering against a hide list and de-duplicating media services,"This code determines whether a component should be added to a launchable list based on hide rules, custom media component settings, and component type.","This code determines if a component should be added to a launchable list, considering hidden apps, custom media components, and the component's application type."
35,java,Sets the media source and finishes the current activity,"This code selects a media source and finishes the activity, handling potential connection errors.","This code sets a media source to browse mode and finishes the activity, gracefully handling car disconnection errors."
36,java,"Safely checks if a given activity is distraction-optimized, handling potential connection errors","This code checks if a specified activity within a given package is optimized for distraction mitigation in a car environment, handling potential connection errors.","This code determines if an activity is distraction optimized using a car package manager, gracefully handling car disconnection scenarios."
37,java,"Asynchronously creates, configures, and adds a task view to a parent view group","This code sets up a task view within a parent ViewGroup by creating a TaskViewManager, configuring a listener, and adding the view to the parent.","This code initializes and configures a task view using a TaskViewManager, sets a listener, and adds it to a parent view."
38,java,"Retrieves a specific, configured Intent for the default maps app, falling back to a generic one","This code retrieves the preferred map activity intent, prioritizing user-configured options or a default system map application.","This code determines the best intent to launch for map activities, considering user preferences and a fallback default."
39,java,Dynamically instantiates and displays home card modules defined in a configuration resource,"This code initializes and displays a set of HomeCardModule fragments within a FragmentTransaction, dynamically creating them via reflection based on configured class names.","This code dynamically creates and displays HomeCardModule fragments using reflection, adding them to the UI via a FragmentTransaction."
40,java,Removes dangling tasks that are in multi-window mode,This code removes multi-window tasks from the ActivityTaskManager if they are found in a list of task appearance information.,This code removes dangling multi-window tasks from the ActivityTaskManager based on a list of task appearance information.
41,java,Updates the mode from the intent and sets the UI title accordingly,"The code updates the application's mode based on intent data, setting the title accordingly.",The code updates the application's mode and title based on incoming intent data.
42,java,Lazily initializes and returns the Chronometer view on first access,"This code lazily initializes and returns a Chronometer view, retrieving it from the layout only if it hasn't been initialized before.","This code lazily initializes and returns a Chronometer view, retrieving it from the layout if it's null."
43,java,Blurs and scales an image to set as a card's visible background,"This code lazily initializes and returns a media layout view, inflating it from a ViewStub if it doesn't already exist and setting up its title, subtitle, and playback controls.","This code lazily initializes and returns a media layout view, inflating it from a ViewStub if it's null and initializing associated UI elements and controls."
44,java,Blurs and scales an image to set as a card's visible background,"This code updates the card's background image by scaling a drawable to a square, blurring it, and setting it as the background.","This code updates the card's background with a blurred, scaled version of a drawable image."
45,java,Makes the media view visible and sets its title and subtitle,This code updates the visibility and text content of a media view with a given title and subtitle.,This code displays a media view and sets its title and subtitle text.
46,java,"Starts and shows a chronometer if a start time is positive; otherwise, hides it","This code manages the visibility and state of a chronometer (timer) based on the start time of an audio content, displaying it when the start time is positive.",This code controls the visibility and start time of a chronometer to display audio duration when a start time is provided.
47,java,Registers a callback on a newly added call,Registers a callback with a given call object if the call object is not null.,"Registers a callback on a call object, ensuring the object is not null."
48,java,Resets state and unregisters the callback when a call is removed,"This code handles the removal of an active call by clearing related data, notifying the presenter of the update, and unregistering a callback.",This code cleans up call-related data and notifies the presenter when a call is removed.
49,java,Updates the ongoing call view model with a formatted phone number and UI controls,Formats a phone number and updates the UI with the formatted number and associated controls.,"Formats a phone number, updates the UI with the formatted number, and notifies a presenter of the update."
50,java,"Initializes the Mute, End Call, and Dialpad buttons for an in-call user interface","Initializes audio control buttons (mute, end call, dialpad) with associated actions within an in-call user interface.","Initializes audio control buttons (mute, end call, dialpad) and assigns click listeners to manage call muting, disconnection, and dialpad access."
51,cpp,Sends a D-Bus message over the connection and returns a boolean indicating success,"Sends a DBus message over the connection, returning true on success and false on failure (due to null message or disconnected connection).","Sends a DBus message over the connection, returning true if the send operation was successful and false otherwise (including cases of a null message or disconnected connection)."
52,cpp,Creates a D-Bus signal message addressed to a specific client,"Creates a DBus signal message with the specified object path, interface name, signal name, and destination DBus ID.","Creates a DBus signal message with the specified object path, interface name, signal name, and destination DBus ID."
53,cpp,Notifies a newly added listener if the D-Bus connection is already available,This code notifies a newly added listener of the current D-Bus connection availability status (available if connected).,This code notifies a newly added listener of the D-Bus connection's availability status.
54,cpp,"For an active connection, adds a thread to a list to be joined on exit, avoiding duplicates",The function associates a thread with a connection and adds the thread to a vector of threads to be joined upon exit.,The function associates a thread with a connection and manages a list of threads to be joined when the connection exits.
55,cpp,A callback that wakes up a main loop context if it has not been destroyed,"This function wakes up a main loop context by acquiring a lock and calling its wakeup method, handling potential null pointers.","This function wakes up a main loop context by acquiring a lock on a weakly-referenced context and calling its wakeup method, with error handling for null pointers."
56,cpp,A callback to stop monitoring a D-Bus watch and clean up its associated data,This function handles the removal of a DBus watch by stopping its monitoring and clearing associated data.,"This function removes a DBus watch, stopping monitoring and clearing associated data when a watch is removed."
57,cpp,"A libdbus callback that creates, starts, or stops a D-Bus watch based on its readiness status","This function manages a DBus watch object, starting or stopping monitoring based on its readiness and context.","This function toggles the watching state of a DBus watch object, creating it if necessary and managing its dependencies."
58,cpp,Thread-safely gets or creates a singleton DBusObjectManager instance using double-checked locking,"This code provides a thread-safe getter for a shared pointer to a DBusObjectManager, lazily initializing it if it doesn't already exist.",This code lazily initializes and returns a thread-safe shared pointer to a DBusObjectManager.
59,cpp,Performs a reference-counted release of a D-Bus service name,"Releases a service name on the DBus connection, decrementing a counter if the name is held multiple times.","Releases a service name on the DBus connection, removing it if it was the only owner."
60,cpp,Steals the reply from a pending D-Bus call and wraps it in a DBusMessage object,"This function converts a libdbus pending call reply to a DBusMessage object, handling null input and transferring ownership of the libdbus message.",This function extracts the reply from a libdbus pending call and converts it into a DBusMessage object.
61,cpp,Safely deletes all pending asynchronous handlers from a shared list,This function safely deletes asynchronous DBus message handlers stored in a protected vector by transferring ownership and then iterating to free the memory.,"This function safely deletes asynchronous DBus message handlers stored in a protected vector, ensuring thread-safe access before deallocation."
62,cpp,Reports a success status to all registered signal handlers for their associated tags,"This function iterates through registered signal handlers and calls their `onSpecificError` method with a success status for each associated tag, ensuring thread-safe access to the handler map.","This function iterates through registered signal handlers, calling their `onSpecificError` method with a success status for each associated tag after acquiring a lock to protect the signal handler map."
63,cpp,Thread-safely removes a connection from a collection if it exists,"This code removes a connection from a map, protected by a mutex, given a connection ID.","This code removes a connection, identified by its ID, from a protected map."
64,cpp,Dispatches D-Bus signals for interface addition or removal to specific handlers,"This code handles D-Bus signals indicating the addition or removal of interfaces, routing them to a status event handler.",This code dispatches D-Bus messages related to interface availability changes to appropriate signal handlers.
65,cpp,Retrieves the addresses of available service instances from a D-Bus registry,"Retrieves available DBus service instances from a registry and populates a vector with their addresses, returning a success status.","Retrieves available DBus service instances from a registry and populates a vector with their addresses, setting a success status."
66,cpp,Queries a D-Bus registry to determine if a specific service instance is available,This function determines the availability status of a DBus service instance and updates the call status accordingly.,This function checks if a DBus service instance is alive and sets its availability status and call status.
67,cpp,Notifies that a service is unavailable when its corresponding D-Bus interface is removed,"This function handles a DBus signal indicating the removal of interfaces, updating the internal state and notifying listeners when the removed interface matches the observed interface.","This function processes a DBus signal for interface removal, updating availability status and notifying listeners if the removed interface is the observed one."
68,cpp,Notifies CommonAPI listeners of a D-Bus interface's availability status change,This function translates a DBus address and notifies listeners about an interface's availability status change.,This function translates a DBus address to a common address and notifies listeners of an interface status change.
69,cpp,Schedules an asynchronous notification of the current proxy status for a newly added listener,This function adds a listener and pushes a notification function to the main loop to inform the listener about events related to a specific subscription.,This function adds a listener and schedules a notification to be sent to that listener via the main loop when relevant DBus events occur.
70,cpp,Removes all listener entries that match a given subscription in a thread-safe manner,"This function removes a listener from a collection based on a given subscription, ensuring thread safety with a mutex.","This function removes a listener from a collection when its subscription is no longer active, protected by a mutex."
71,cpp,Forwards the addition of a D-Bus signal state handler to the underlying connection object,This function adds a signal handler and subscription to the DBus connection.,This function registers a DBus signal handler with a specific subscription on the connection.
72,cpp,Callback to translate available D-Bus service instance addresses to strings and forward the result,"This function handles the asynchronous callback for retrieving available service instances via DBus, translating DBus addresses to strings and passing the status and instances to a callback function.","This function processes the result of an asynchronous DBus call to retrieve available service instances, converting addresses to strings and invoking a callback with the status and instances."
73,cpp,Routes a D-Bus message to a registered handler or handles standard introspection requests,"This code handles incoming DBus messages by routing them to registered interface handlers or, if not found, to a default introspection handler.","This code dispatches incoming DBus messages to registered interface handlers based on object path and interface name, or handles introspection requests if no handler is found."
74,cpp,"Adds a D-Bus interface handler to a path, preventing duplicate registration except for standard interfaces","The function adds a DBus interface handler to a table, checking for existing entries and handling specific object manager interfaces.","The function adds a DBus interface handler to a table, preventing duplicates and handling special cases for object manager interfaces."
75,cpp,"Registers a D-Bus handler for a specific path, preventing duplicates","The function adds a DBusInterfaceHandler to a table of registered objects, preventing duplicates for a given interface path.","The function registers a DBusInterfaceHandler with a specific path, managing multiple handlers for the same path and avoiding duplicates."
76,c,Sends a UDS negative response message containing the failed service ID and a negative response code,This function sends a negative response message over ISOTP to acknowledge a UDS service request with a specific NRC code.,"This function transmits a negative response message via ISOTP, indicating failure to fulfill a UDS service request with a given service ID and NRC code."
77,c,Sends a UDS positive response for the Diagnostic Session Control service,This function constructs and transmits a UDS diagnostic session control response message over CAN using ISOTP.,"This function sends a UDS diagnostic session control response message via ISOTP, configuring session timeouts."
78,c,Sends a positive UDS response for the ECU Reset service,"This function sends a positive response to an ECU reset request via ISOTP protocol, including the reset type in the transmitted data.","This function transmits a positive ECU reset response message using the ISOTP protocol, specifying the reset type."
79,c,"Handles a UDS ECU Reset request, supporting only the hard reset sub-function which reboots the system","This function handles an ECU reset request, performing a hard reset (reboot) if requested and supported, otherwise sending a negative response.","This function handles an ECU reset request, initiating a hard reset (reboot) if the request is valid and the reset type is supported."
80,c,"Sends a positive UDS response to a Request Download, specifying the maximum block length",This function sends a positive response to a request download service on the CAN bus using ISOTP.,This function sends a UDS request download response via ISOTP on the CAN bus.
81,c,Sends a UDS Transfer Data positive response containing the block sequence counter,This function sends a transfer data response message over ISOTP using a positive SID and specified block sequence counter.,"This function transmits a CAN message via ISOTP to acknowledge a transfer data request, including a positive service ID and block sequence counter."
82,c,Sends a UDS positive response for the Routine Control service containing a result code over ISO-TP,This function sends a UDS routine control result message via ISOTP to a specified CAN ID.,This function transmits a UDS routine control result using ISOTP to a designated CAN identifier.
83,c,Sends a UDS Transfer Exit positive response message via the ISO-TP protocol,Sends a positive transfer exit response message via ISOTP.,Sends a positive transfer exit response message over CAN using ISOTP.
84,c,"Converts a raw integer gain value to a corresponding DAC gain enumeration, returning an error if unsupported",This function converts a raw gain value into a corresponding enumerated gain setting for a high-voltage shield DAC.,This function maps a raw gain value to a high-voltage shield DAC gain setting.
85,c,Finds the index of a given CAN ID in a mapping table,"This function maps a CAN identifier to an index within a lookup table, returning 0xff if not found.","This function maps a CAN identifier to an index within a lookup table, returning 0xff if the identifier is not found."
86,c,"Removes a specific LIN-to-CAN receive filter, or all filters, by clearing the associated callback",This function removes a receive filter by clearing the callback associated with a specific LIN address ID.,This function disables a LIN receive filter by clearing its associated callback function.
87,c,A LIN callback that dequeues a frame for transmission and executes its completion callback,"This function retrieves a LIN frame from a queue, copies it to an outgoing frame, and triggers a CAN transmission callback.","This function retrieves a LIN frame from a queue, prepares it for transmission, and invokes a CAN transmit callback."
88,c,A callback that translates an incoming LIN frame to a CAN frame and invokes a registered handler,This function translates incoming LIN frames into CAN frames and invokes a registered callback function with the translated data.,"This function translates incoming LIN frames into CAN frames and invokes a registered callback function with the translated data, based on a mapping of LIN IDs to CAN IDs."
89,c,Initializes a high-voltage shield by configuring its registers and enabling its output,"This function initializes an HV shield device by configuring a GPIO pin, initializing data structures, updating registers, and enabling the output.","This function initializes an HV shield device by configuring an output enable GPIO pin, initializing internal data, updating registers, and enabling the shield."
90,c,Sets the gain for a specified DAC on a high-voltage shield,This function sets the gain value for a specified DAC (Digital-to-Analog Converter) channel within an HV shield device and updates the shield's configuration.,This function configures the gain of a specific DAC channel (0 or 1) within an HV shield device by writing to a register and triggering an update.
91,c,"Sets a GPIO output enable state, remapping the pin index by swapping the 4-bit nibbles within its byte",This function enables or disables a specific GPIO output pin on an HV shield device by manipulating a register.,This function controls the enable state of a GPIO output pin on an HV shield device by writing to a register and updating the device.
92,c,A callback function that forwards a received CAN frame to another device,This function routes CAN frames received on one device to another device using the `can_send` function.,"This function routes CAN frames received on one device to another device, logging debug and warning messages based on transmission success."
93,c,Registers a set of rules to route CAN frames between specified interfaces,"This function registers CAN router entries by adding RX filters for each entry, forwarding messages based on defined rules.",This function registers CAN router entries by adding RX filters to forward CAN messages based on specified criteria.
94,c,Initializes the CAN router by registering all statically-defined routing tables,Initializes the CAN router by registering multiple routing tables.,Initializes the CAN router by registering routing tables defined in a statically configured array.
95,c,Sets a masked group of GPIO pins to the states defined in a value bitmask,"This function sets the value of specific GPIO pins within a shield configuration, applying a mask to select which pins are modified.","This function sets the value of selected GPIO pins based on a mask and provided value, utilizing a hardware shield configuration."
96,c,Gets the number of available LIN callback slots,This function calculates and returns the number of available callback slots for an abstract LIN device.,This function determines and returns the number of free callback slots within an abstract LIN communication device.
97,c,Registers a callback function for a specific incoming LIN frame,"This function registers an incoming callback for a specific LIN frame ID and size, storing the callback and associated data for later use.",This function registers a callback to be invoked when a specific LIN frame with a given ID and size is received.
98,c,Registers a callback function to provide data for a specific outgoing LIN frame,"This function registers an outgoing callback for a specific LIN frame ID and size, storing the callback and associated data for later use.",This function registers a callback to be invoked when a LIN node transmits a message with a specified frame ID and size.
99,c,Sets the active schedule table for a LIN scheduler and resets its position to the beginning,"This function activates a specific table within a LIN scheduler, ensuring exclusive access via a semaphore and resetting the entry index.","This function activates a specific table within a LIN scheduler, acquiring a semaphore for exclusive access and resetting the current entry index."
100,c,Stops the LIN scheduler from processing its current schedule table,This function disables a LIN scheduler by marking it as stopped and releasing a semaphore.,This function disables a LIN scheduler by setting its table to inactive and releasing a semaphore to prevent further scheduling.
