id,language,reference,generated,generated_rci
2,python,Validates if a value conforms to a datatype specified by a string,"""Validates if a given value conforms to a specified datatype using a type checker.""","""Checks if a value matches a given datatype using a type checker."""
3,python,Checks if a value or list of values is a valid integer for a specified bit-width and signedness.,"""Checks if a given integer or list of integers falls within a specified signed/unsigned range based on a given number of bits.""","""Validates if an integer or list of integers is within a specified signed or unsigned range defined by a given bit width."""
4,python,Looks up a type definition tuple by its string name from a list of types,"""Retrieves type information (name, conversion function, and validation rules) from a class's types based on a given datatype string.""","""Looks up type details (name, conversion function, and validation rules) within a class's defined types, given a datatype string."""
5,python,Finds all datatypes within the current namespace and any parent namespaces of a given FQN,"""Retrieves namespaced datatypes from a fully qualified name, filtering against a predefined list.""","""Identifies namespaced datatypes matching a given fully qualified name prefix from a predefined list."""
7,python,Converts a string-based data type definition into an ApiGearType object,"""Maps a type string (e.g., 'int32', 'string[]') to an ApiGearType enum, handling arrays and basic data types.""","""Converts a type string (e.g., 'int32', 'string[]') into a corresponding ApiGearType, recognizing basic types and array structures."""
8,python,Generates an ApiGear property from a VSS (Vehicle Signal Specification) node,"""Generates an ApiGearProperty object from a VSSNode based on its datatype and data, returning None if the datatype is unsupported.""","""Creates an ApiGearProperty object from a VSSNode's data and datatype, logging a warning and returning None for unsupported datatypes."""
10,python,Loads and merges multiple VSpec files from specified paths into a single VSpec object,"""Loads and merges vehicle specification files from specified paths, logging details and raising an exception if no specifications are found.""","""Loads, merges, and logs vehicle specification files from specified paths, combining them into a single VSpec object."""
11,python,"Recursively updates a dictionary with values from another, merging nested dictionaries","""Recursively updates a dictionary with another dictionary, merging nested dictionaries.""","""Recursively merges a dictionary into another, updating nested dictionaries."""
12,python,Validates a constant unique identifier (constUID) is a 32-bit hexadecimal string,"""Validates a string against a hexadecimal pattern (0x followed by 8 hex characters) to ensure it's a valid 'constUID'.""","""Validates a string to ensure it conforms to the '0x[0-9A-Fa-f]{8}' format for a constant UID."""
13,python,"Initializes and attempts to resolve a VSS raw model, returning the unresolved model on failure","""Creates and validates a VSSRaw object from a dictionary, handling potential validation errors.""","""Creates a VSSRaw object from input data, resolving and validating it while gracefully handling errors."""
14,python,Validates that a list of strings are all known datatypes,"""Validates a list of datatypes against a predefined set of allowed datatypes.""","""Verifies that a list of values contains only valid datatypes."""
15,python,"Renders a VSS tree into a string, displaying specified attributes for each node","""Generates a string representation of a tree structure, including node names and specified attributes.""","""Renders a tree structure as a string, displaying node names and selected attributes with their values."""
16,python,Finds the root of a VSS instance by recursively traversing up the parent hierarchy,"""Traverses up the tree to find the root of an instance branch, raising an exception if no instance root exists.""","""Recursively finds the root node of an instance branch within a tree structure, raising an exception if one is not found."""
17,python,Counts the depth of a chain of instance branches,"""Recursively counts the depth of instance children within a tree structure.""","""Recursively counts the number of instance children in a tree-like data structure."""
18,python,Finds all child node IDs that belong to a specific parent name,"""Finds node IDs that have a specific name as their expected parent.""","""Identifies node IDs whose expected parent is a given name."""
19,python,"Gets an attribute, returning a default value if the attribute is missing or its value is None","""Safely retrieves an attribute from an object, returning a default value if the attribute is missing or None.""","""Retrieves an object's attribute, providing a default value if the attribute is missing or None."""
20,python,Generates a Protobuf schema from a Vehicle Signal Specification (VSS) tree,"""Generates Protocol Buffer definitions from a signal tree structure, including necessary imports and message bodies.""","""Generates Protocol Buffer definitions from a signal tree, handling imports and message structures."""
21,python,Groups all leaf VSS branch instances by the fully qualified name of their original branch definition,"""Collects instance names under each instance root within a VSS tree, filtering for leaf-level instance branches.""","""Extracts a dictionary mapping instance root fully qualified names to lists of their direct instance names within a VSS tree."""
22,python,Determines if a VSS node is a leaf based on its data type,"""Checks if a node in a VSS tree is a leaf node containing data.""","""Determines if a VSS node is a leaf node holding VSS data."""
23,python,Checks if a VSS node is a branch that is not an instance,"""Checks if a VSS node represents a branch with a non-instance VSSDataBranch.""","""Determines if a VSS node is a branch containing non-instance data."""
24,python,Checks if a VSS node represents a branch instance,"""Checks if a VSSNode represents an instance of a VSSDataBranch.""","""Determines if a VSSNode's data is an instance of a VSSDataBranch."""
25,python,FNV-1 32-bit hashing algorithm for a byte sequence,"""Calculates a 32-bit FNV-1a hash value for a given byte string.""","""Computes a 32-bit FNV-1a hash of a byte string identifier."""
28,java,Inflates a card fragment's layout and initializes its view components,"""Inflates a layout to create a view for a card fragment.""","""Inflates a layout and initializes view elements for a card fragment."""
29,java,"Sets a button's icon and click listener to make it visible, or hides it if no content is provided","""Updates the visibility and content of an ImageButton based on a DescriptiveTextWithControlsView.""","""Updates an ImageButton's icon, click listener, and visibility based on associated control data."""
30,java,Lazily inflates and initializes a descriptive text layout view on first access,"""Lazily inflates and caches a view containing descriptive text and optional elements from a ViewStub.""","""Inflates and caches a descriptive text-only layout view from a ViewStub, including title, subtitle, image, and 'tap for more' elements."""
31,java,Updates and displays a card header view with a new title and icon,"""Updates the UI elements (visibility, title, icon) of a card header view on the main thread.""","""Updates a card header's UI elements (visibility, title, icon) on the main thread."""
32,java,Lazily inflates and returns a text block layout view from a ViewStub,"""Retrieves and lazily initializes a text block layout view from a ViewStub.""","""Retrieves a text block layout view, inflating it from a ViewStub if it doesn't already exist."""
33,java,Gets the media browser service component from a given package,"""Retrieves the component name of a media browsing service within a specified package.""","""Retrieves the component name of the default media browsing service within a specified package."""
34,java,Determines if an app component should be launchable by filtering against a hide list and de-duplicating media services,"""Determines if a component should be added to launchables based on hide lists, custom media components, and component type.""","""Determines whether a component should be added to the launchables list based on configured filters and component type."""
35,java,Sets the media source and finishes the current activity,"""Selects a media source and finishes the activity if it's running.""","""Sets a media source and finishes the activity, handling car connection errors."""
36,java,"Safely checks if a given activity is distraction-optimized, handling potential connection errors","""Checks if a specified activity within a package is optimized for distraction mitigation using a car package manager.""","""Determines if an activity is distraction-optimized by querying the car package manager, handling potential connection errors."""
38,java,"Retrieves a specific, configured Intent for the default maps app, falling back to a generic one","""Retrieves the preferred map activity intent, prioritizing configured activities and falling back to the default maps activity.""","""Selects the best map activity intent from a list of preferred activities, defaulting to the system's default maps app if no suitable alternative is found."""
39,java,Dynamically instantiates and displays home card modules defined in a configuration resource,"""Dynamically initializes and displays HomeCardModule fragments based on configured class names.""","""Initializes and displays HomeCardModule fragments by dynamically creating instances of classes specified in a configuration array."""
40,java,Removes dangling tasks that are in multi-window mode,"""Removes multi-window tasks from the activity task manager.""","""Removes dangling multi-window tasks from the activity task manager."""
41,java,Updates the mode from the intent and sets the UI title accordingly,"""Updates the application's mode based on intent data and sets the title accordingly.""","""Sets the application's title and mode based on incoming intent data."""
42,java,Lazily initializes and returns the Chronometer view on first access,"""Retrieves a Chronometer view from the layout, initializing it if it's null.""","""Lazily retrieves a Chronometer view from the layout, initializing it if it's null."""
43,java,Blurs and scales an image to set as a card's visible background,"""Lazily initializes and returns a media layout view from a ViewStub, setting up title, subtitle, and controls.""","""Lazily initializes and returns a media layout view from a ViewStub, configuring title, subtitle, and playback controls."""
44,java,Blurs and scales an image to set as a card's visible background,"""Scales, blurs, and sets a drawable as the card's background image.""","""Scales, blurs, and sets a drawable as the card's blurred background image."""
45,java,Makes the media view visible and sets its title and subtitle,"""Updates the visibility and text content of a media view with a title and subtitle.""","""Updates a media view's title and subtitle text, making it visible."""
46,java,"Starts and shows a chronometer if a start time is positive; otherwise, hides it","""Displays or hides a chronometer and separator based on the audio start time.""","""Controls the visibility of a chronometer and separator to display audio duration."""
47,java,Registers a callback on a newly added call,"""Registers a callback with a newly added call object if the call object is not null.""","""Registers a callback for a call object if it exists."""
48,java,Resets state and unregisters the callback when a call is removed,"""Handles the removal of a call by clearing call-related data and notifying the presenter.""","""Clears call data and notifies the presenter upon call removal."""
49,java,Updates the ongoing call view model with a formatted phone number and UI controls,"""Updates the UI model with a formatted phone number for display during a call.""","""Formats and updates the UI model with a phone number for call display."""
50,java,"Initializes the Mute, End Call, and Dialpad buttons for an in-call user interface","""Initializes audio control buttons (mute, end call, dialpad) with associated actions.""","""Initializes audio control buttons (mute, end call, dialpad) for call management."""
53,cpp,Notifies a newly added listener if the D-Bus connection is already available,"""Notifies a listener of available status via a D-Bus connection if connected.""","""Notifies a listener of available status when a D-Bus connection is established."""
54,cpp,"For an active connection, adds a thread to a list to be joined on exit, avoiding duplicates","""Registers a thread to be joined upon exit and adds it to a connection tracking list.""","""Registers a thread to be joined on exit, associating it with a connection."""
56,cpp,A callback to stop monitoring a D-Bus watch and clean up its associated data,"""Removes a DBus watch by stopping observation and clearing associated data.""","""Removes a DBus watch, stopping observation and clearing associated data."""
57,cpp,"A libdbus callback that creates, starts, or stops a D-Bus watch based on its readiness status","""Manages DBus watch state (start/stop) based on toggle events and context data.""","""Controls DBus watch activation/deactivation based on toggle events and associated context."""
58,cpp,Thread-safely gets or creates a singleton DBusObjectManager instance using double-checked locking,"""Lazily initializes and returns a shared pointer to a DBusObjectManager, ensuring thread-safe singleton access.""","""Provides thread-safe access to a lazily initialized DBusObjectManager."""
59,cpp,Performs a reference-counted release of a D-Bus service name,"""Releases a service name on the DBus connection, decrementing a counter if the name is held multiple times.""","""Releases a service name on the DBus connection, decrementing a counter or removing the name if it's the last reference."""
60,cpp,Steals the reply from a pending D-Bus call and wraps it in a DBusMessage object,"""Converts a libdbus pending call reply to a DBusMessage object.""","""Extracts a DBusMessage from a libdbus pending call reply."""
61,cpp,Safely deletes all pending asynchronous handlers from a shared list,"""Deletes asynchronously registered DBus message handlers stored in a protected vector.""","""Deletes asynchronously registered DBus message handlers from a protected vector, ensuring thread-safe access."""
62,cpp,Reports a success status to all registered signal handlers for their associated tags,"""Notifies signal handlers of successful completion for specific tags after retrieving them from a protected data structure.""","""Iterates through signal handlers and notifies them of successful completion for specific tags, ensuring thread-safe access to handler data."""
63,cpp,Thread-safely removes a connection from a collection if it exists,"""Removes a connection from a managed collection under mutex protection.""","""Releases a connection by removing it from a managed collection, ensuring thread safety."""
64,cpp,Dispatches D-Bus signals for interface addition or removal to specific handlers,"""Handles DBus signals for interface addition/removal events and forwards them to a status event handler.""","""Routes DBus interface addition/removal signals to corresponding event handlers."""
65,cpp,Retrieves the addresses of available service instances from a D-Bus registry,"""Retrieves available DBus service instances and translates them into a vector of DBus addresses.""","""Retrieves a list of available DBus service instances from the registry and populates a provided vector."""
66,cpp,Queries a D-Bus registry to determine if a specific service instance is available,"""Determines and reports the availability status of a DBus service instance.""","""Retrieves the availability status of a DBus service instance and sets a call status."""
67,cpp,Notifies that a service is unavailable when its corresponding D-Bus interface is removed,"""Handles DBus signal indicating interfaces have been removed, updating availability status and removing interfaces if observed.""","""Processes a DBus signal for interface removal, updating availability status and removing observed interfaces."""
68,cpp,Notifies CommonAPI listeners of a D-Bus interface's availability status change,"""Notifies listeners of a change in the availability status of a DBus interface.""","""Notifies listeners about the availability status change of a DBus interface on a specific object path."""
69,cpp,Schedules an asynchronous notification of the current proxy status for a newly added listener,"""Registers a listener and pushes a notification function to the main loop for DBus events.""","""Registers a listener and schedules a DBus notification to be sent to it via the main loop."""
70,cpp,Removes all listener entries that match a given subscription in a thread-safe manner,"""Removes a listener from a collection based on a subscription identifier, ensuring thread safety with a recursive mutex.""","""Removes a listener from a collection when its subscription is matched, protected by a recursive mutex."""
71,cpp,Forwards the addition of a D-Bus signal state handler to the underlying connection object,"""Adds a signal handler and subscription to the DBus connection.""","""Registers a DBus signal handler with a specific subscription on the connection."""
72,cpp,Callback to translate available D-Bus service instance addresses to strings and forward the result,"""Handles the asynchronous callback for retrieving available DBus service instances, translating addresses to strings and passing the status and instances to the callback.""","""Processes the asynchronous callback for retrieving available DBus service instances, translating DBus addresses to strings and returning the status and instances to the caller."""
73,cpp,Routes a D-Bus message to a registered handler or handles standard introspection requests,"""Handles incoming DBus messages by routing them to registered interface handlers or processing introspectable interface messages.""","""Routes and processes incoming DBus messages based on object path and interface name, using registered handlers or default introspection handling."""
74,cpp,"Adds a D-Bus interface handler to a path, preventing duplicate registration except for standard interfaces","""Adds a DBus interface handler to a table, checking for existing entries and handling specific object manager interfaces.""","""Adds or updates a DBus interface handler in a table, preventing duplicates and handling special object manager interfaces."""
75,cpp,"Registers a D-Bus handler for a specific path, preventing duplicates","""Adds a DBusInterfaceHandler to a table of registered objects, preventing duplicates for a given interface path.""","""Adds or updates a DBusInterfaceHandler in a table of registered objects, ensuring no duplicate handlers exist for a given interface path."""
78,c,Sends a positive UDS response for the ECU Reset service,"""Sends a positive response message to the diagnostic tester indicating successful completion of an ECU reset request.""","""Sends a positive response message over ISOTP indicating successful completion of an ECU reset request."""
79,c,"Handles a UDS ECU Reset request, supporting only the hard reset sub-function which reboots the system","""Handles ECU reset requests, performing a cold reboot for hard resets and sending negative responses for unsupported types.""","""Handles ECU reset requests, performing a cold reboot for hard resets and sending error responses for invalid or unsupported requests."""
80,c,"Sends a positive UDS response to a Request Download, specifying the maximum block length","""Sends a UDS request download response message via ISOTP.""","""Sends a UDS request download response message over CAN using ISOTP."""
81,c,Sends a UDS Transfer Data positive response containing the block sequence counter,"""Sends a transfer data response message over ISOTP using a specified block sequence counter.""","""Sends a transfer data response message over ISOTP to a specific CAN ID with a given block sequence counter."""
82,c,Sends a UDS positive response for the Routine Control service containing a result code over ISO-TP,"""Sends a UDS routine control result message via ISOTP to a specified CAN ID.""","""Sends a UDS routine control result message via ISOTP to a specified CAN ID, logging errors on failure."""
83,c,Sends a UDS Transfer Exit positive response message via the ISO-TP protocol,"""Sends a positive transfer exit response message via ISOTP.""","""Sends a positive transfer exit response message over CAN using ISOTP."""
85,c,Finds the index of a given CAN ID in a mapping table,"""Maps a CAN identifier to an index within a translation table, returning 0xff if not found.""","""Maps a CAN identifier to an index in a lookup table, returning 0xff if not found."""
86,c,"Removes a specific LIN-to-CAN receive filter, or all filters, by clearing the associated callback","""Removes a CAN receive filter by disabling the associated callback function.""","""Disables a CAN receive filter by clearing its callback function."""
87,c,A LIN callback that dequeues a frame for transmission and executes its completion callback,"""Retrieves a LIN frame from a queue and transmits it via CAN using a callback function.""","""Retrieves a LIN frame from a queue and transmits it via CAN, invoking a user-defined callback."""
88,c,A callback that translates an incoming LIN frame to a CAN frame and invokes a registered handler,"""Translates incoming LIN frames to CAN frames and invokes registered callbacks for specific LIN IDs.""","""Translates incoming LIN frames to CAN frames and invokes registered callbacks based on a mapped ID."""
89,c,Initializes a high-voltage shield by configuring its registers and enabling its output,"""Initializes a high-voltage shield device by configuring a GPIO pin, setting initial register values, and enabling the output.""","""Initializes a high-voltage shield device by configuring a GPIO pin, initializing internal data, and enabling the output."""
90,c,Sets the gain for a specified DAC on a high-voltage shield,"""Sets the gain value for a specific DAC channel on an HV shield device.""","""Configures the gain of a DAC channel within an HV shield device."""
91,c,"Sets a GPIO output enable state, remapping the pin index by swapping the 4-bit nibbles within its byte","""Configures the output enable state of a GPIO pin by manipulating a register.""","""Enables or disables a GPIO output pin by setting corresponding bits in a register."""
92,c,A callback function that forwards a received CAN frame to another device,"""Routes CAN frames received on one device to another device using the CAN bus.""","""Routes CAN frames received on one device to another device via the CAN bus."""
93,c,Registers a set of rules to route CAN frames between specified interfaces,"""Registers CAN router entries by adding RX filters for each entry.""","""Registers CAN router entries by adding RX filters based on provided entries."""
94,c,Initializes the CAN router by registering all statically-defined routing tables,"""Registers CAN router entries defined in a table structure.""","""Initializes and registers CAN router entries from a configuration table."""
95,c,Sets a masked group of GPIO pins to the states defined in a value bitmask,"""Sets the value of specified GPIO pins within a hardware voltage shield configuration.""","""Sets the value of specified GPIO pins based on a mask and value, using a hardware voltage shield configuration."""
96,c,Gets the number of available LIN callback slots,"""Returns the number of available callback slots for a LIN device.""","""Calculates and returns the number of free callback slots for a given LIN device."""
97,c,Registers a callback function for a specific incoming LIN frame,"""Registers an incoming callback function for a specific LIN frame ID and size.""","""Registers an incoming callback function to handle LIN messages with a specific frame ID and size."""
98,c,Registers a callback function to provide data for a specific outgoing LIN frame,"""Registers an outgoing callback function for a specific LIN frame ID and size.""","""Registers an outgoing callback function for a specific LIN frame ID and size within a device's data structure."""
99,c,Sets the active schedule table for a LIN scheduler and resets its position to the beginning,"""Sets the active table index for a LIN scheduler, ensuring exclusive access via a semaphore.""","""Activates a specific table within a LIN scheduler, managing access with a semaphore to prevent concurrent modifications."""
100,c,Stops the LIN scheduler from processing its current schedule table,"""Disables a linear scheduler by stopping its current table and releasing a semaphore.""","""Disables a linear scheduler by setting its current table to inactive and releasing a semaphore."""
