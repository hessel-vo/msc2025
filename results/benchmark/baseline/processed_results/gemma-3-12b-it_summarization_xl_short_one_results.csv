id,language,reference,generated
1,python,Checks if a data type is a subtype of a specified base type,"""Checks if a given type is a subtype or equal to a base type within a class's type hierarchy."""
2,python,Validates if a value conforms to a datatype specified by a string,"""Validates if a given value conforms to a specified datatype using a type checker."""
3,python,Checks if a value or list of values is a valid integer for a specified bit-width and signedness.,"""Checks if a given integer or list of integers falls within a specified signed/unsigned range based on a given number of bits."""
4,python,Looks up a type definition tuple by its string name from a list of types,"""Retrieves type information (name, conversion function, and validation rules) from a class's types based on a given datatype string."""
5,python,Finds all datatypes within the current namespace and any parent namespaces of a given FQN,"""Retrieves namespaced datatypes from a fully qualified name, filtering against a predefined list."""
6,python,Traverses a VSS tree to count the occurrences and collect the fully qualified paths of each node name,"""Populates a dictionary with unique node names and their paths within a VSS node tree, incrementing counters for repeated names."""
7,python,Converts a string-based data type definition into an ApiGearType object,"""Maps a type string (e.g., 'int32', 'string[]') to an ApiGearType enum, handling arrays and basic data types."""
8,python,Generates an ApiGear property from a VSS (Vehicle Signal Specification) node,"""Generates an ApiGearProperty object from a VSSNode based on its datatype and data, returning None if the datatype is unsupported."""
9,python,Recursively resolves and flattens a specification file and all its include dependencies,"""Recursively collects vehicle specification objects based on included files and prefixes."""
10,python,Loads and merges multiple VSpec files from specified paths into a single VSpec object,"""Loads and merges vehicle specification files from specified paths, logging details and raising an exception if no specifications are found."""
11,python,"Recursively updates a dictionary with values from another, merging nested dictionaries","""Recursively updates a dictionary with another dictionary, merging nested dictionaries."""
12,python,Validates a constant unique identifier (constUID) is a 32-bit hexadecimal string,"""Validates a string against a hexadecimal pattern (0x followed by 8 hex characters) to ensure it's a valid 'constUID'."""
13,python,"Initializes and attempts to resolve a VSS raw model, returning the unresolved model on failure","""Creates and validates a VSSRaw object from a dictionary, handling potential validation errors."""
14,python,Validates that a list of strings are all known datatypes,"""Validates a list of datatypes against a predefined set of allowed datatypes."""
15,python,"Renders a VSS tree into a string, displaying specified attributes for each node","""Generates a string representation of a tree structure, including node names and specified attributes."""
16,python,Finds the root of a VSS instance by recursively traversing up the parent hierarchy,"""Traverses up the tree to find the root of an instance branch, raising an exception if no instance root exists."""
17,python,Counts the depth of a chain of instance branches,"""Recursively counts the depth of instance children within a tree structure."""
18,python,Finds all child node IDs that belong to a specific parent name,"""Finds node IDs that have a specific name as their expected parent."""
19,python,"Gets an attribute, returning a default value if the attribute is missing or its value is None","""Safely retrieves an attribute from an object, returning a default value if the attribute is missing or None."""
20,python,Generates a Protobuf schema from a Vehicle Signal Specification (VSS) tree,"""Generates Protocol Buffer definitions from a signal tree structure, including necessary imports and message bodies."""
21,python,Groups all leaf VSS branch instances by the fully qualified name of their original branch definition,"""Collects instance names under each instance root within a VSS tree, filtering for leaf-level instance branches."""
22,python,Determines if a VSS node is a leaf based on its data type,"""Checks if a node in a VSS tree is a leaf node containing data."""
23,python,Checks if a VSS node is a branch that is not an instance,"""Checks if a VSS node represents a branch with a non-instance VSSDataBranch."""
24,python,Checks if a VSS node represents a branch instance,"""Checks if a VSSNode represents an instance of a VSSDataBranch."""
25,python,FNV-1 32-bit hashing algorithm for a byte sequence,"""Calculates a 32-bit FNV-1a hash value for a given byte string."""
26,java,Lazily initializes and returns an audio card presenter with data models for media and in-call status,"""Lazily initializes and returns an AudioCardPresenter, providing either a default or ViewModel-backed model for media presentation."""
27,java,Lazily initializes and returns the audio card view fragment,"""Returns a cached or newly created AudioFragment view with associated presenter."""
28,java,Inflates a card fragment's layout and initializes its view components,"""Inflates a layout to create a view for a card fragment."""
29,java,"Sets a button's icon and click listener to make it visible, or hides it if no content is provided","""Updates the visibility and content of an ImageButton based on a DescriptiveTextWithControlsView."""
30,java,Lazily inflates and initializes a descriptive text layout view on first access,"""Lazily inflates and caches a view containing descriptive text and optional elements from a ViewStub."""
31,java,Updates and displays a card header view with a new title and icon,"""Updates the UI elements (visibility, title, icon) of a card header view on the main thread."""
32,java,Lazily inflates and returns a text block layout view from a ViewStub,"""Retrieves and lazily initializes a text block layout view from a ViewStub."""
33,java,Gets the media browser service component from a given package,"""Retrieves the component name of a media browsing service within a specified package."""
34,java,Determines if an app component should be launchable by filtering against a hide list and de-duplicating media services,"""Determines if a component should be added to launchables based on hide lists, custom media components, and component type."""
35,java,Sets the media source and finishes the current activity,"""Selects a media source and finishes the activity if it's running."""
36,java,"Safely checks if a given activity is distraction-optimized, handling potential connection errors","""Checks if a specified activity within a package is optimized for distraction mitigation using a car package manager."""
37,java,"Asynchronously creates, configures, and adds a task view to a parent view group","""Creates and adds a TaskView to a parent ViewGroup, setting up a listener and managing its lifecycle."""
38,java,"Retrieves a specific, configured Intent for the default maps app, falling back to a generic one","""Retrieves the preferred map activity intent, prioritizing configured activities and falling back to the default maps activity."""
39,java,Dynamically instantiates and displays home card modules defined in a configuration resource,"""Dynamically initializes and displays HomeCardModule fragments based on configured class names."""
40,java,Removes dangling tasks that are in multi-window mode,"""Removes multi-window tasks from the activity task manager."""
41,java,Updates the mode from the intent and sets the UI title accordingly,"""Updates the application's mode based on intent data and sets the title accordingly."""
42,java,Lazily initializes and returns the Chronometer view on first access,"""Retrieves a Chronometer view from the layout, initializing it if it's null."""
43,java,Blurs and scales an image to set as a card's visible background,"""Lazily initializes and returns a media layout view from a ViewStub, setting up title, subtitle, and controls."""
44,java,Blurs and scales an image to set as a card's visible background,"""Scales, blurs, and sets a drawable as the card's background image."""
45,java,Makes the media view visible and sets its title and subtitle,"""Updates the visibility and text content of a media view with a title and subtitle."""
46,java,"Starts and shows a chronometer if a start time is positive; otherwise, hides it","""Displays or hides a chronometer and separator based on the audio start time."""
47,java,Registers a callback on a newly added call,"""Registers a callback with a newly added call object if the call object is not null."""
48,java,Resets state and unregisters the callback when a call is removed,"""Handles the removal of a call by clearing call-related data and notifying the presenter."""
49,java,Updates the ongoing call view model with a formatted phone number and UI controls,"""Updates the UI model with a formatted phone number for display during a call."""
50,java,"Initializes the Mute, End Call, and Dialpad buttons for an in-call user interface","""Initializes audio control buttons (mute, end call, dialpad) with associated actions."""
51,cpp,Sends a D-Bus message over the connection and returns a boolean indicating success,"""Sends a DBus message over the connection, returning true on success and false on failure."""
52,cpp,Creates a D-Bus signal message addressed to a specific client,"""Creates a DBus signal message with the specified object path, interface name, signal name, and destination ID."""
53,cpp,Notifies a newly added listener if the D-Bus connection is already available,"""Notifies a listener of available status via a D-Bus connection if connected."""
54,cpp,"For an active connection, adds a thread to a list to be joined on exit, avoiding duplicates","""Registers a thread to be joined upon exit and adds it to a connection tracking list."""
55,cpp,A callback that wakes up a main loop context if it has not been destroyed,"""Wakes up a main loop context by acquiring a lock and calling its wakeup method."""
56,cpp,A callback to stop monitoring a D-Bus watch and clean up its associated data,"""Removes a DBus watch by stopping observation and clearing associated data."""
57,cpp,"A libdbus callback that creates, starts, or stops a D-Bus watch based on its readiness status","""Manages DBus watch state (start/stop) based on toggle events and context data."""
58,cpp,Thread-safely gets or creates a singleton DBusObjectManager instance using double-checked locking,"""Lazily initializes and returns a shared pointer to a DBusObjectManager, ensuring thread-safe singleton access."""
59,cpp,Performs a reference-counted release of a D-Bus service name,"""Releases a service name on the DBus connection, decrementing a counter if the name is held multiple times."""
60,cpp,Steals the reply from a pending D-Bus call and wraps it in a DBusMessage object,"""Converts a libdbus pending call reply to a DBusMessage object."""
61,cpp,Safely deletes all pending asynchronous handlers from a shared list,"""Deletes asynchronously registered DBus message handlers stored in a protected vector."""
62,cpp,Reports a success status to all registered signal handlers for their associated tags,"""Notifies signal handlers of successful completion for specific tags after retrieving them from a protected data structure."""
63,cpp,Thread-safely removes a connection from a collection if it exists,"""Removes a connection from a managed collection under mutex protection."""
64,cpp,Dispatches D-Bus signals for interface addition or removal to specific handlers,"""Handles DBus signals for interface addition/removal events and forwards them to a status event handler."""
65,cpp,Retrieves the addresses of available service instances from a D-Bus registry,"""Retrieves available DBus service instances and translates them into a vector of DBus addresses."""
66,cpp,Queries a D-Bus registry to determine if a specific service instance is available,"""Determines and reports the availability status of a DBus service instance."""
67,cpp,Notifies that a service is unavailable when its corresponding D-Bus interface is removed,"""Handles DBus signal indicating interfaces have been removed, updating availability status and removing interfaces if observed."""
68,cpp,Notifies CommonAPI listeners of a D-Bus interface's availability status change,"""Notifies listeners of a change in the availability status of a DBus interface."""
69,cpp,Schedules an asynchronous notification of the current proxy status for a newly added listener,"""Registers a listener and pushes a notification function to the main loop for DBus events."""
70,cpp,Removes all listener entries that match a given subscription in a thread-safe manner,"""Removes a listener from a collection based on a subscription identifier, ensuring thread safety with a recursive mutex."""
71,cpp,Forwards the addition of a D-Bus signal state handler to the underlying connection object,"""Adds a signal handler and subscription to the DBus connection."""
72,cpp,Callback to translate available D-Bus service instance addresses to strings and forward the result,"""Handles the asynchronous callback for retrieving available DBus service instances, translating addresses to strings and passing the status and instances to the callback."""
73,cpp,Routes a D-Bus message to a registered handler or handles standard introspection requests,"""Handles incoming DBus messages by routing them to registered interface handlers or processing introspectable interface messages."""
74,cpp,"Adds a D-Bus interface handler to a path, preventing duplicate registration except for standard interfaces","""Adds a DBus interface handler to a table, checking for existing entries and handling specific object manager interfaces."""
75,cpp,"Registers a D-Bus handler for a specific path, preventing duplicates","""Adds a DBusInterfaceHandler to a table of registered objects, preventing duplicates for a given interface path."""
76,c,Sends a UDS negative response message containing the failed service ID and a negative response code,"""Sends a negative response message over ISOTP with the specified request SID and NRC."""
77,c,Sends a UDS positive response for the Diagnostic Session Control service,"""Sends a UDS diagnostic session control response message over ISOTP."""
78,c,Sends a positive UDS response for the ECU Reset service,"""Sends a positive response message to the diagnostic tester indicating successful completion of an ECU reset request."""
79,c,"Handles a UDS ECU Reset request, supporting only the hard reset sub-function which reboots the system","""Handles ECU reset requests, performing a cold reboot for hard resets and sending negative responses for unsupported types."""
80,c,"Sends a positive UDS response to a Request Download, specifying the maximum block length","""Sends a UDS request download response message via ISOTP."""
81,c,Sends a UDS Transfer Data positive response containing the block sequence counter,"""Sends a transfer data response message over ISOTP using a specified block sequence counter."""
82,c,Sends a UDS positive response for the Routine Control service containing a result code over ISO-TP,"""Sends a UDS routine control result message via ISOTP to a specified CAN ID."""
83,c,Sends a UDS Transfer Exit positive response message via the ISO-TP protocol,"""Sends a positive transfer exit response message via ISOTP."""
84,c,"Converts a raw integer gain value to a corresponding DAC gain enumeration, returning an error if unsupported","""Converts a raw gain value to a corresponding gain enum value."""
85,c,Finds the index of a given CAN ID in a mapping table,"""Maps a CAN identifier to an index within a translation table, returning 0xff if not found."""
86,c,"Removes a specific LIN-to-CAN receive filter, or all filters, by clearing the associated callback","""Removes a CAN receive filter by disabling the associated callback function."""
87,c,A LIN callback that dequeues a frame for transmission and executes its completion callback,"""Retrieves a LIN frame from a queue and transmits it via CAN using a callback function."""
88,c,A callback that translates an incoming LIN frame to a CAN frame and invokes a registered handler,"""Translates incoming LIN frames to CAN frames and invokes registered callbacks for specific LIN IDs."""
89,c,Initializes a high-voltage shield by configuring its registers and enabling its output,"""Initializes a high-voltage shield device by configuring a GPIO pin, setting initial register values, and enabling the output."""
90,c,Sets the gain for a specified DAC on a high-voltage shield,"""Sets the gain value for a specific DAC channel on an HV shield device."""
91,c,"Sets a GPIO output enable state, remapping the pin index by swapping the 4-bit nibbles within its byte","""Configures the output enable state of a GPIO pin by manipulating a register."""
92,c,A callback function that forwards a received CAN frame to another device,"""Routes CAN frames received on one device to another device using the CAN bus."""
93,c,Registers a set of rules to route CAN frames between specified interfaces,"""Registers CAN router entries by adding RX filters for each entry."""
94,c,Initializes the CAN router by registering all statically-defined routing tables,"""Registers CAN router entries defined in a table structure."""
95,c,Sets a masked group of GPIO pins to the states defined in a value bitmask,"""Sets the value of specified GPIO pins within a hardware voltage shield configuration."""
96,c,Gets the number of available LIN callback slots,"""Returns the number of available callback slots for a LIN device."""
97,c,Registers a callback function for a specific incoming LIN frame,"""Registers an incoming callback function for a specific LIN frame ID and size."""
98,c,Registers a callback function to provide data for a specific outgoing LIN frame,"""Registers an outgoing callback function for a specific LIN frame ID and size."""
99,c,Sets the active schedule table for a LIN scheduler and resets its position to the beginning,"""Sets the active table index for a LIN scheduler, ensuring exclusive access via a semaphore."""
100,c,Stops the LIN scheduler from processing its current schedule table,"""Disables a linear scheduler by stopping its current table and releasing a semaphore."""
