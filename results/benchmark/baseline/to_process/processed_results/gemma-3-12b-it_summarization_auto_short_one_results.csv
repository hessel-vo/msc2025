id,language,reference,generated
2,python,Validates if a value conforms to a datatype specified by a string,"""Validates if a given value conforms to a specified datatype."""
3,python,Checks if a value or list of values is a valid integer for a specified bit-width and signedness.,"""Validates if a value or list of values represents a signed or unsigned integer within a specified bit range."""
4,python,Looks up a type definition tuple by its string name from a list of types,"""Retrieves type information for a given datatype from a predefined list of types."""
5,python,Finds all datatypes within the current namespace and any parent namespaces of a given FQN,"""Retrieves namespaced data types from a fully qualified name, excluding prefixes."""
7,python,Converts a string-based data type definition into an ApiGearType object,"""Maps a string representation of a data type to an ApiGearType, handling arrays and basic types like int, float, boolean, and string.”"
8,python,Generates an ApiGear property from a VSS (Vehicle Signal Specification) node,"""Generates an ApiGearProperty object based on a VSSNode's datatype and data, logging a warning if the datatype is unsupported."""
10,python,Loads and merges multiple VSpec files from specified paths into a single VSpec object,"""Loads and merges vehicle specification files from specified paths, logging details and raising an exception if no specifications are found.”"
11,python,"Recursively updates a dictionary with values from another, merging nested dictionaries","""Recursively updates a dictionary with another dictionary, merging nested dictionaries.”"
12,python,Validates a constant unique identifier (constUID) is a 32-bit hexadecimal string,"""Validates a string against a hexadecimal pattern to ensure it's a properly formatted 'constUID'."""
13,python,"Initializes and attempts to resolve a VSS raw model, returning the unresolved model on failure","""Retrieves and resolves a VSSRaw object from a dictionary, handling potential validation errors."""
14,python,Validates that a list of strings are all known datatypes,"""Validates a list of data types against a predefined set of allowed types."""
15,python,"Renders a VSS tree into a string, displaying specified attributes for each node","""Generates a string representation of a VSSNode tree, including specified attributes and their values."""
16,python,Finds the root of a VSS instance by recursively traversing up the parent hierarchy,"""Traverses up the parent chain of a VSSNode to find the root of an instance branch."""
17,python,Counts the depth of a chain of instance branches,"""Recursively counts the depth of instance children within a tree structure."""
18,python,Finds all child node IDs that belong to a specific parent name,"""Identifies node IDs that have a specified name as their expected parent."""
19,python,"Gets an attribute, returning a default value if the attribute is missing or its value is None","""Safely retrieves an attribute from an object, returning a default value if the attribute is not found or is None."""
20,python,Generates a Protobuf schema from a Vehicle Signal Specification (VSS) tree,"""Generates Protocol Buffer definitions from a VSS signal tree, including imports and message structures."""
21,python,Groups all leaf VSS branch instances by the fully qualified name of their original branch definition,"""Extracts and organizes metadata about instance names within a VSSNode tree, grouping them by their root fully qualified name."""
22,python,Determines if a VSS node is a leaf based on its data type,"""Determines if a VSS node represents a leaf node containing data of a specific datatype."""
23,python,Checks if a VSS node is a branch that is not an instance,"""Determines if a VSSNode represents a VSS branch with an uninstantiated data branch."""
24,python,Checks if a VSS node represents a branch instance,"""Determines if a VSSNode represents an instance of a VSSDataBranch."""
25,python,FNV-1 32-bit hashing algorithm for a byte sequence,"""Calculates a 32-bit FNV-1a hash value for a given byte string."""
28,java,Inflates a card fragment's layout and initializes its view components,"""Inflates a layout for a card fragment, finds its title and icon views, and returns the root view."""
29,java,"Sets a button's icon and click listener to make it visible, or hides it if no content is provided","""Updates the visibility and properties of an ImageButton based on the provided DescriptiveTextWithControlsView.Control content."""
30,java,Lazily inflates and initializes a descriptive text layout view on first access,"""Lazily initializes and returns a view containing descriptive text elements from a ViewStub."""
31,java,Updates and displays a card header view with a new title and icon,"""Updates the UI header view with the provided card title and icon on the main thread."""
32,java,Lazily inflates and returns a text block layout view from a ViewStub,"""Lazily initializes and returns a view for displaying text blocks, inflating it from a ViewStub if it doesn't already exist."""
33,java,Gets the media browser service component from a given package,"""Retrieves the component name of a media browsing service within a specified package using intent resolution."""
34,java,Determines if an app component should be launchable by filtering against a hide list and de-duplicating media services,"""Determines whether a component should be added to launchables based on hide lists, custom media components, and component type."""
35,java,Sets the media source and finishes the current activity,"""Selects a media source component, sets its mode to browse, and finishes the activity if it's running."""
36,java,"Safely checks if a given activity is distraction-optimized, handling potential connection errors","""Checks if a specified activity within a given package is distraction optimized using the CarPackageManager, handling potential CarNotConnectedException."""
38,java,"Retrieves a specific, configured Intent for the default maps app, falling back to a generic one","""Retrieves a preferred maps intent from a configuration array, falling back to the default maps activity if no preferred activity is found or valid."""
39,java,Dynamically instantiates and displays home card modules defined in a configuration resource,"""Dynamically initializes and displays HomeCardModules by reflecting on configured class names and adding them to the fragment layout."""
40,java,Removes dangling tasks that are in multi-window mode,"""Removes dangling multi-window tasks from the ActivityTaskManager based on a list of task appearance information."""
41,java,Updates the mode from the intent and sets the UI title accordingly,"""Parses the intent to determine the current mode, updates the activity title, and sets the toolbar title accordingly."""
42,java,Lazily initializes and returns the Chronometer view on first access,"""Lazily initializes and returns a Chronometer view from a layout, along with its separator."""
43,java,Blurs and scales an image to set as a card's visible background,"""Lazily initializes and returns a view for displaying media layout elements, including title, subtitle, and playback controls."""
44,java,Blurs and scales an image to set as a card's visible background,"""Scales, blurs, and sets a drawable image as the background of a card view."""
45,java,Makes the media view visible and sets its title and subtitle,"""Updates the visibility and text content of a media layout view with a given title and subtitle."""
46,java,"Starts and shows a chronometer if a start time is positive; otherwise, hides it","""Updates the visibility and state of a chronometer to display audio duration based on a provided start time."""
47,java,Registers a callback on a newly added call,"""Registers a callback with a newly added call object to monitor its state."""
48,java,Resets state and unregisters the callback when a call is removed,"""Clears call-related data, notifies the presenter of an update, and unregisters a callback when a call is removed."""
49,java,Updates the ongoing call view model with a formatted phone number and UI controls,"""Formats a phone number and updates a view with the formatted number, subtitle, elapsed time, and call control buttons, then notifies the presenter."""
50,java,"Initializes the Mute, End Call, and Dialpad buttons for an in-call user interface","""Initializes mute, end call, and dialpad control buttons for an in-call user interface."""
53,cpp,Notifies a newly added listener if the D-Bus connection is already available,"""Notifies a listener with an AVAILABLE status if the D-Bus connection is connected."""
54,cpp,"For an active connection, adds a thread to a list to be joined on exit, avoiding duplicates","""Associates a thread with a connection for cleanup on exit, ensuring the thread is tracked for proper termination."""
56,cpp,A callback to stop monitoring a D-Bus watch and clean up its associated data,"""Handles the removal of a D-Bus watch, stopping observation and clearing associated data."""
57,cpp,"A libdbus callback that creates, starts, or stops a D-Bus watch based on its readiness status","""Manages D-Bus watch state by starting or stopping monitoring based on readiness and context."""
58,cpp,Thread-safely gets or creates a singleton DBusObjectManager instance using double-checked locking,"""Retrieves a shared pointer to a DBusObjectManager, creating one if it doesn't already exist."""
59,cpp,Performs a reference-counted release of a D-Bus service name,"""Releases a service name on the D-Bus connection, decrementing a counter if multiple instances exist or removing the name if it's the last instance."""
60,cpp,Steals the reply from a pending D-Bus call and wraps it in a DBusMessage object,"""Converts a libdbus pending call to a DBusMessage object, stealing the reply and returning it."""
61,cpp,Safely deletes all pending asynchronous handlers from a shared list,"""Deletes asynchronous D-Bus message handlers stored in a protected vector, ensuring thread-safe access and cleanup."""
62,cpp,Reports a success status to all registered signal handlers for their associated tags,"""Iterates through registered signal handlers and calls their onSpecificError method for each associated tag, ensuring thread-safe access to the handler map."""
63,cpp,Thread-safely removes a connection from a collection if it exists,"""Releases a connection by removing it from the connections map, protected by a mutex."""
64,cpp,Dispatches D-Bus signals for interface addition or removal to specific handlers,"""Dispatches D-Bus signals (InterfacesAdded or InterfacesRemoved) to the associated event handler."""
65,cpp,Retrieves the addresses of available service instances from a D-Bus registry,"""Retrieves available service instances from the D-Bus registry and populates a vector with their addresses, setting a success status."""
66,cpp,Queries a D-Bus registry to determine if a specific service instance is available,"""Determines and sets the availability status of a service instance based on registry information, translating an address and updating call status."""
67,cpp,Notifies that a service is unavailable when its corresponding D-Bus interface is removed,"""Processes a D-Bus signal indicating interface removal, updating availability status and notifying listeners if the removed interface matches the observed one."""
68,cpp,Notifies CommonAPI listeners of a D-Bus interface's availability status change,"""Translates a D-Bus address and notifies listeners of an interface status change."""
69,cpp,Schedules an asynchronous notification of the current proxy status for a newly added listener,"""Notifies a specific listener in the main loop about a subscription event using a D-Bus proxy."""
70,cpp,Removes all listener entries that match a given subscription in a thread-safe manner,"""Removes a listener from the internal list associated with a given subscription, ensuring thread safety with a recursive mutex."""
71,cpp,Forwards the addition of a D-Bus signal state handler to the underlying connection object,"""Adds a signal handler to the connection for a specific subscription."""
72,cpp,Callback to translate available D-Bus service instance addresses to strings and forward the result,"""Handles the asynchronous callback for retrieving available service instances, translating D-Bus addresses to strings and passing the status and instances to the callback function.”"
73,cpp,Routes a D-Bus message to a registered handler or handles standard introspection requests,"""Handles an incoming D-Bus message by routing it to a registered interface handler or processing it as an introspectable interface message.”"
74,cpp,"Adds a D-Bus interface handler to a path, preventing duplicate registration except for standard interfaces","""Adds a D-Bus interface handler to a table, checking for existing entries and handling specific object manager interfaces."""
75,cpp,"Registers a D-Bus handler for a specific path, preventing duplicates","""Adds a DBusInterfaceHandler to a table of registered objects, preventing duplicates."""
78,c,Sends a positive UDS response for the ECU Reset service,"""Sends a UDS positive response message indicating successful ECU reset with the specified reset type."""
79,c,"Handles a UDS ECU Reset request, supporting only the hard reset sub-function which reboots the system","""Handles an ECU reset request, performing a hard reset with reboot or sending a negative response for invalid length or unsupported reset type."""
80,c,"Sends a positive UDS response to a Request Download, specifying the maximum block length","""Sends a UDS positive response message indicating successful completion of a request download service."""
81,c,Sends a UDS Transfer Data positive response containing the block sequence counter,"""Sends a UDS transfer data response message containing the block sequence counter."""
82,c,Sends a UDS positive response for the Routine Control service containing a result code over ISO-TP,"""Sends a UDS routine control result message containing the routine ID and a result code."""
83,c,Sends a UDS Transfer Exit positive response message via the ISO-TP protocol,"""Sends a UDS positive response message indicating successful completion of a transfer exit request."""
85,c,Finds the index of a given CAN ID in a mapping table,"""Maps a CAN identifier to an index within a predefined mapping table, returning 0xff if not found."""
86,c,"Removes a specific LIN-to-CAN receive filter, or all filters, by clearing the associated callback","""Removes a LIN2CAN receive filter by clearing the associated callback function, or clears all callbacks if filter_id is TRANSLATABLE_ADDRESSES_LEN."""
87,c,A LIN callback that dequeues a frame for transmission and executes its completion callback,"""Retrieves a LIN frame from a queue and transmits it via CAN using a callback function."""
88,c,A callback that translates an incoming LIN frame to a CAN frame and invokes a registered handler,"""Translates incoming LIN frames to CAN frames and invokes registered callbacks for specific LIN IDs."""
89,c,Initializes a high-voltage shield by configuring its registers and enabling its output,"""Initializes the HV shield device by configuring the output enable pin, resetting registers, updating the shield state, and enabling the output."""
90,c,Sets the gain for a specified DAC on a high-voltage shield,"""Sets the DAC gain for a specific High Voltage Shield DAC channel and updates the shield configuration."""
91,c,"Sets a GPIO output enable state, remapping the pin index by swapping the 4-bit nibbles within its byte","""Configures the output enable state of a GPIO pin by manipulating a register within the HV shield device."""
92,c,A callback function that forwards a received CAN frame to another device,"""Routes received CAN frames to another device using the `can_send` function and associated callbacks."""
93,c,Registers a set of rules to route CAN frames between specified interfaces,"""Registers multiple CAN router entries by adding RX filters for each entry, forwarding frames to specified destinations.”"
94,c,Initializes the CAN router by registering all statically-defined routing tables,"""Initializes the CAN router by registering entries from a table of CAN router configurations."""
95,c,Sets a masked group of GPIO pins to the states defined in a value bitmask,"""Sets the value of specified GPIO pins within a high-voltage shield configuration, iterating through a bitmask to control individual pins."""
96,c,Gets the number of available LIN callback slots,"""Returns the number of available callback slots for an abstract LIN device."""
97,c,Registers a callback function for a specific incoming LIN frame,Registers an incoming callback function for a specific LIN frame ID and size within a device's abstract LIN data structure.
98,c,Registers a callback function to provide data for a specific outgoing LIN frame,Registers an outgoing callback function for a specific LIN frame ID and size within the abstract LIN data structure.
99,c,Sets the active schedule table for a LIN scheduler and resets its position to the beginning,"""Sets the active table index for a LIN scheduler, ensuring exclusive access via a semaphore and resetting the entry counter."""
100,c,Stops the LIN scheduler from processing its current schedule table,"""Disables a LIN scheduler by stopping its current table and releasing a semaphore."""
