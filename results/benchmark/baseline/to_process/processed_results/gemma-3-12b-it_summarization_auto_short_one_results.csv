id,language,reference,generated,generated_rci
2,python,Validates if a value conforms to a datatype specified by a string,"""Validates if a given value conforms to a specified datatype.""","""Checks if a value matches the constraints of a given datatype."""
3,python,Checks if a value or list of values is a valid integer for a specified bit-width and signedness.,"""Validates if a value or list of values represents a signed or unsigned integer within a specified bit range.""","""Checks if a value or list of values falls within the range of a signed or unsigned integer with a given number of bits."""
4,python,Looks up a type definition tuple by its string name from a list of types,"""Retrieves type information for a given datatype from a predefined list of types.""","""Looks up type details for a datatype within a list of registered types."""
5,python,Finds all datatypes within the current namespace and any parent namespaces of a given FQN,"""Retrieves namespaced data types from a fully qualified name, excluding prefixes.""","""Identifies and returns namespaced data types matching a given fully qualified name prefix."""
7,python,Converts a string-based data type definition into an ApiGearType object,"""Maps a string representation of a data type to an ApiGearType, handling arrays and basic types like int, float, boolean, and string.”","""Converts a string representation of a data type to an ApiGearType, recognizing arrays and common data types.”"
8,python,Generates an ApiGear property from a VSS (Vehicle Signal Specification) node,"""Generates an ApiGearProperty object based on a VSSNode's datatype and data, logging a warning if the datatype is unsupported.""","""Creates an ApiGearProperty object from a VSSNode's datatype and data, returning None and logging a warning if the datatype is unsupported."""
10,python,Loads and merges multiple VSpec files from specified paths into a single VSpec object,"""Loads and merges vehicle specification files from specified paths, logging details and raising an exception if no specifications are found.”","""Loads, merges, and logs vehicle specification files from specified paths, raising an exception if no specifications are loaded.”"
11,python,"Recursively updates a dictionary with values from another, merging nested dictionaries","""Recursively updates a dictionary with another dictionary, merging nested dictionaries.”","""Recursively merges a dictionary into another, updating nested dictionaries.”"
12,python,Validates a constant unique identifier (constUID) is a 32-bit hexadecimal string,"""Validates a string against a hexadecimal pattern to ensure it's a properly formatted 'constUID'.""","""Validates a string to ensure it conforms to the '0x[0-9A-Fa-f]{8}' format for a 'constUID'."""
13,python,"Initializes and attempts to resolve a VSS raw model, returning the unresolved model on failure","""Retrieves and resolves a VSSRaw object from a dictionary, handling potential validation errors.""","""Retrieves a VSSRaw object from a dictionary, resolving and validating it while handling potential errors."""
14,python,Validates that a list of strings are all known datatypes,"""Validates a list of data types against a predefined set of allowed types.""","""Verifies that a list of data types contains only valid, predefined types."""
15,python,"Renders a VSS tree into a string, displaying specified attributes for each node","""Generates a string representation of a VSSNode tree, including specified attributes and their values.""","""Renders a VSSNode tree into a string, displaying node names and values for specified attributes."""
16,python,Finds the root of a VSS instance by recursively traversing up the parent hierarchy,"""Traverses up the parent chain of a VSSNode to find the root of an instance branch.""","""Recursively traverses parent nodes to locate the instance root of a VSSDataBranch."""
17,python,Counts the depth of a chain of instance branches,"""Recursively counts the depth of instance children within a tree structure.""","""Recursively counts the depth of instance children within a hierarchical data structure."""
18,python,Finds all child node IDs that belong to a specific parent name,"""Identifies node IDs that have a specified name as their expected parent.""","""Finds node IDs whose expected parent is a given name."""
19,python,"Gets an attribute, returning a default value if the attribute is missing or its value is None","""Safely retrieves an attribute from an object, returning a default value if the attribute is not found or is None.""","""Retrieves an object's attribute, returning a specified default value if the attribute is missing or None."""
20,python,Generates a Protobuf schema from a Vehicle Signal Specification (VSS) tree,"""Generates Protocol Buffer definitions from a VSS signal tree, including imports and message structures.""","""Generates Protocol Buffer definitions from a VSS signal tree, extracting data types and creating messages with optional fields and static UIDs."""
21,python,Groups all leaf VSS branch instances by the fully qualified name of their original branch definition,"""Extracts and organizes metadata about instance names within a VSSNode tree, grouping them by their root fully qualified name.""","""Collects instance names from a VSSNode tree and groups them by their root's fully qualified name."""
22,python,Determines if a VSS node is a leaf based on its data type,"""Determines if a VSS node represents a leaf node containing data of a specific datatype.""","""Checks if a VSS node is a leaf node containing VSS data."""
23,python,Checks if a VSS node is a branch that is not an instance,"""Determines if a VSSNode represents a VSS branch with an uninstantiated data branch.""","""Checks if a VSSNode is a branch node with an uninstantiated VSSDataBranch."""
24,python,Checks if a VSS node represents a branch instance,"""Determines if a VSSNode represents an instance of a VSSDataBranch.""","""Checks if a VSSNode's data is an instance of a VSSDataBranch."""
25,python,FNV-1 32-bit hashing algorithm for a byte sequence,"""Calculates a 32-bit FNV-1a hash value for a given byte string.""","""Computes a 32-bit FNV-1a hash of a byte string identifier."""
28,java,Inflates a card fragment's layout and initializes its view components,"""Inflates a layout for a card fragment, finds its title and icon views, and returns the root view.""","""Inflates a card fragment layout and initializes its title and icon views."""
29,java,"Sets a button's icon and click listener to make it visible, or hides it if no content is provided","""Updates the visibility and properties of an ImageButton based on the provided DescriptiveTextWithControlsView.Control content.""","""Updates an ImageButton's icon, click listener, and visibility based on a DescriptiveTextWithControlsView.Control object."""
30,java,Lazily inflates and initializes a descriptive text layout view on first access,"""Lazily initializes and returns a view containing descriptive text elements from a ViewStub.""","""Lazily initializes and returns a view inflated from a ViewStub, containing descriptive text and optional image elements."""
31,java,Updates and displays a card header view with a new title and icon,"""Updates the UI header view with the provided card title and icon on the main thread.""","""Updates the UI header view with the provided card title and icon, ensuring it runs on the main thread."""
32,java,Lazily inflates and returns a text block layout view from a ViewStub,"""Lazily initializes and returns a view for displaying text blocks, inflating it from a ViewStub if it doesn't already exist.""","""Lazily initializes and returns a view for displaying text blocks, inflating it from a ViewStub if it's null."""
33,java,Gets the media browser service component from a given package,"""Retrieves the component name of a media browsing service within a specified package using intent resolution.""","""Locates and returns the component name of a media browsing service within a given package."""
34,java,Determines if an app component should be launchable by filtering against a hide list and de-duplicating media services,"""Determines whether a component should be added to launchables based on hide lists, custom media components, and component type.""","""Determines if a component should be added to launchables, considering hidden apps, custom media components, and component type."""
35,java,Sets the media source and finishes the current activity,"""Selects a media source component, sets its mode to browse, and finishes the activity if it's running.""","""Sets a media source component to browse mode and finishes the activity, handling car connection errors."""
36,java,"Safely checks if a given activity is distraction-optimized, handling potential connection errors","""Checks if a specified activity within a given package is distraction optimized using the CarPackageManager, handling potential CarNotConnectedException.""","""Determines if an activity is distraction optimized by querying the CarPackageManager, gracefully handling car disconnection errors."""
38,java,"Retrieves a specific, configured Intent for the default maps app, falling back to a generic one","""Retrieves a preferred maps intent from a configuration array, falling back to the default maps activity if no preferred activity is found or valid.""","""Locates and returns a preferred maps intent from a configuration array, prioritizing activities with the same package as the default maps activity."""
39,java,Dynamically instantiates and displays home card modules defined in a configuration resource,"""Dynamically initializes and displays HomeCardModules by reflecting on configured class names and adding them to the fragment layout.""","""Dynamically initializes and displays HomeCardModules by reflecting on configured class names and adding them to the fragment layout."""
40,java,Removes dangling tasks that are in multi-window mode,"""Removes dangling multi-window tasks from the ActivityTaskManager based on a list of task appearance information.""","""Removes dangling multi-window tasks from the ActivityTaskManager by iterating through a list of task appearance information."""
41,java,Updates the mode from the intent and sets the UI title accordingly,"""Parses the intent to determine the current mode, updates the activity title, and sets the toolbar title accordingly.""","""Determines the current mode from the intent and updates the activity and toolbar titles."""
42,java,Lazily initializes and returns the Chronometer view on first access,"""Lazily initializes and returns a Chronometer view from a layout, along with its separator.""","""Lazily initializes and returns a Chronometer view and its associated separator from a layout."""
43,java,Blurs and scales an image to set as a card's visible background,"""Lazily initializes and returns a view for displaying media layout elements, including title, subtitle, and playback controls.""","""Lazily initializes and returns a view containing media layout elements like title, subtitle, and playback controls, initializing the presenter with the controls bar."""
44,java,Blurs and scales an image to set as a card's visible background,"""Scales, blurs, and sets a drawable image as the background of a card view.""","""Scales, blurs, and sets a drawable image as the background of a card view, ensuring visibility."""
45,java,Makes the media view visible and sets its title and subtitle,"""Updates the visibility and text content of a media layout view with a given title and subtitle.""","""Sets the title and subtitle of a visible media layout view."""
46,java,"Starts and shows a chronometer if a start time is positive; otherwise, hides it","""Updates the visibility and state of a chronometer to display audio duration based on a provided start time.""","""Controls the visibility and timing of a chronometer to display audio duration when a start time is available."""
47,java,Registers a callback on a newly added call,"""Registers a callback with a newly added call object to monitor its state.""","""Registers a callback with a newly added call object to monitor its state."""
48,java,Resets state and unregisters the callback when a call is removed,"""Clears call-related data, notifies the presenter of an update, and unregisters a callback when a call is removed.""","""Resets call state, notifies the presenter, and unregisters a callback upon call removal."""
49,java,Updates the ongoing call view model with a formatted phone number and UI controls,"""Formats a phone number and updates a view with the formatted number, subtitle, elapsed time, and call control buttons, then notifies the presenter.""","""Formats a phone number, updates a view with call details and controls, and notifies the presenter of the update."""
50,java,"Initializes the Mute, End Call, and Dialpad buttons for an in-call user interface","""Initializes mute, end call, and dialpad control buttons for an in-call user interface.""","""Initializes mute, end call, and dialpad control buttons for an in-call user interface, handling call actions upon button presses."""
53,cpp,Notifies a newly added listener if the D-Bus connection is already available,"""Notifies a listener with an AVAILABLE status if the D-Bus connection is connected.""","""Notifies a listener with an AVAILABLE status when the D-Bus connection is connected."""
54,cpp,"For an active connection, adds a thread to a list to be joined on exit, avoiding duplicates","""Associates a thread with a connection for cleanup on exit, ensuring the thread is tracked for proper termination.""","""Registers a thread with a connection to be cleaned up upon exit, tracking it for proper termination."""
56,cpp,A callback to stop monitoring a D-Bus watch and clean up its associated data,"""Handles the removal of a D-Bus watch, stopping observation and clearing associated data.""","""Handles the removal of a D-Bus watch, stopping observation and clearing associated data."""
57,cpp,"A libdbus callback that creates, starts, or stops a D-Bus watch based on its readiness status","""Manages D-Bus watch state by starting or stopping monitoring based on readiness and context.""","""Manages D-Bus watch state, starting or stopping monitoring based on readiness and associated context."""
58,cpp,Thread-safely gets or creates a singleton DBusObjectManager instance using double-checked locking,"""Retrieves a shared pointer to a DBusObjectManager, creating one if it doesn't already exist.""","""Retrieves or creates a shared pointer to a DBusObjectManager, ensuring thread-safe initialization."""
59,cpp,Performs a reference-counted release of a D-Bus service name,"""Releases a service name on the D-Bus connection, decrementing a counter if multiple instances exist or removing the name if it's the last instance.""","""Releases a service name on the D-Bus connection, decrementing a counter or removing the name if it's the last instance, handling potential D-Bus errors."""
60,cpp,Steals the reply from a pending D-Bus call and wraps it in a DBusMessage object,"""Converts a libdbus pending call to a DBusMessage object, stealing the reply and returning it.""","""Converts a libdbus pending call to a DBusMessage object by stealing the reply."""
61,cpp,Safely deletes all pending asynchronous handlers from a shared list,"""Deletes asynchronous D-Bus message handlers stored in a protected vector, ensuring thread-safe access and cleanup.""","""Deletes and cleans up asynchronous D-Bus message handlers stored in a thread-safe vector."""
62,cpp,Reports a success status to all registered signal handlers for their associated tags,"""Iterates through registered signal handlers and calls their onSpecificError method for each associated tag, ensuring thread-safe access to the handler map.""","""Iterates through registered signal handlers and calls their onSpecificError method for each associated tag, after acquiring a lock to protect the signal handler map."""
63,cpp,Thread-safely removes a connection from a collection if it exists,"""Releases a connection by removing it from the connections map, protected by a mutex.""","""Removes a connection from the connections map using a mutex for thread safety."""
64,cpp,Dispatches D-Bus signals for interface addition or removal to specific handlers,"""Dispatches D-Bus signals (InterfacesAdded or InterfacesRemoved) to the associated event handler.""","""Routes D-Bus messages containing InterfacesAdded or InterfacesRemoved signals to the appropriate event handler."""
65,cpp,Retrieves the addresses of available service instances from a D-Bus registry,"""Retrieves available service instances from the D-Bus registry and populates a vector with their addresses, setting a success status.""","""Retrieves available service instances from the D-Bus registry, translates them, and populates a vector with their addresses while setting a success status."""
66,cpp,Queries a D-Bus registry to determine if a specific service instance is available,"""Determines and sets the availability status of a service instance based on registry information, translating an address and updating call status.""","""Determines the availability status of a service instance by translating its address and checking a registry, updating the availability and call status accordingly."""
67,cpp,Notifies that a service is unavailable when its corresponding D-Bus interface is removed,"""Processes a D-Bus signal indicating interface removal, updating availability status and notifying listeners if the removed interface matches the observed one.""","""Processes a D-Bus signal indicating interface removal, updating the availability status of a specific observed interface and notifying listeners."""
68,cpp,Notifies CommonAPI listeners of a D-Bus interface's availability status change,"""Translates a D-Bus address and notifies listeners of an interface status change.""","""Translates a D-Bus address to a common address format and notifies listeners of an interface availability status change."""
69,cpp,Schedules an asynchronous notification of the current proxy status for a newly added listener,"""Notifies a specific listener in the main loop about a subscription event using a D-Bus proxy.""","""Adds a listener and triggers a D-Bus notification to the main loop for a specific subscription."""
70,cpp,Removes all listener entries that match a given subscription in a thread-safe manner,"""Removes a listener from the internal list associated with a given subscription, ensuring thread safety with a recursive mutex.""","""Removes a listener from the internal list associated with a given subscription, protecting access with a recursive mutex."""
71,cpp,Forwards the addition of a D-Bus signal state handler to the underlying connection object,"""Adds a signal handler to the connection for a specific subscription.""","Adds a signal handler to the connection, associating it with a given subscription ID."
72,cpp,Callback to translate available D-Bus service instance addresses to strings and forward the result,"""Handles the asynchronous callback for retrieving available service instances, translating D-Bus addresses to strings and passing the status and instances to the callback function.”","""Processes the asynchronous callback for retrieving available service instances, translating D-Bus addresses to strings and returning the status and instances to the caller.”"
73,cpp,Routes a D-Bus message to a registered handler or handles standard introspection requests,"""Handles an incoming D-Bus message by routing it to a registered interface handler or processing it as an introspectable interface message.”","""Handles an incoming D-Bus message by looking up a registered interface handler or processing it as an introspectable interface message.”"
74,cpp,"Adds a D-Bus interface handler to a path, preventing duplicate registration except for standard interfaces","""Adds a D-Bus interface handler to a table, checking for existing entries and handling specific object manager interfaces.""","""Adds or updates a D-Bus interface handler in a table, preventing duplicates for certain object manager interfaces."""
75,cpp,"Registers a D-Bus handler for a specific path, preventing duplicates","""Adds a DBusInterfaceHandler to a table of registered objects, preventing duplicates.""","""Adds a DBusInterfaceHandler to a table of registered objects, ensuring no duplicate handlers are added."""
78,c,Sends a positive UDS response for the ECU Reset service,"""Sends a UDS positive response message indicating successful ECU reset with the specified reset type.""","""Sends a UDS positive response message confirming an ECU reset operation with a specified reset type."""
79,c,"Handles a UDS ECU Reset request, supporting only the hard reset sub-function which reboots the system","""Handles an ECU reset request, performing a hard reset with reboot or sending a negative response for invalid length or unsupported reset type.""","""Handles an ECU reset request, performing a hard reset with reboot if requested, or sending a negative response for invalid input or unsupported reset type."""
80,c,"Sends a positive UDS response to a Request Download, specifying the maximum block length","""Sends a UDS positive response message indicating successful completion of a request download service.""","""Sends a UDS positive response message confirming the successful completion of a request download."""
81,c,Sends a UDS Transfer Data positive response containing the block sequence counter,"""Sends a UDS transfer data response message containing the block sequence counter.""","""Sends a UDS Transfer Data response message indicating the block sequence counter."""
82,c,Sends a UDS positive response for the Routine Control service containing a result code over ISO-TP,"""Sends a UDS routine control result message containing the routine ID and a result code.""","""Sends a UDS routine control result message indicating the status of a routine control request."""
83,c,Sends a UDS Transfer Exit positive response message via the ISO-TP protocol,"""Sends a UDS positive response message indicating successful completion of a transfer exit request.""","""Sends a UDS positive response message confirming the exit of a transfer sequence."""
85,c,Finds the index of a given CAN ID in a mapping table,"""Maps a CAN identifier to an index within a predefined mapping table, returning 0xff if not found.""","""Maps a CAN identifier to an index within a predefined mapping table, returning 0xff if the identifier is not found."""
86,c,"Removes a specific LIN-to-CAN receive filter, or all filters, by clearing the associated callback","""Removes a LIN2CAN receive filter by clearing the associated callback function, or clears all callbacks if filter_id is TRANSLATABLE_ADDRESSES_LEN.""","""Removes a LIN2CAN receive filter by setting its callback to null, or clears all callbacks if filter_id represents the entire set of translatable addresses."""
87,c,A LIN callback that dequeues a frame for transmission and executes its completion callback,"""Retrieves a LIN frame from a queue and transmits it via CAN using a callback function.""","""Retrieves a LIN frame from a queue and transmits it via CAN using a registered callback."""
88,c,A callback that translates an incoming LIN frame to a CAN frame and invokes a registered handler,"""Translates incoming LIN frames to CAN frames and invokes registered callbacks for specific LIN IDs.""","""Translates incoming LIN frames to CAN frames and invokes registered callbacks based on the mapped CAN ID."""
89,c,Initializes a high-voltage shield by configuring its registers and enabling its output,"""Initializes the HV shield device by configuring the output enable pin, resetting registers, updating the shield state, and enabling the output.""","""Initializes the HV shield device by configuring the output enable pin, resetting registers, updating the shield state, and enabling the output."""
90,c,Sets the gain for a specified DAC on a high-voltage shield,"""Sets the DAC gain for a specific High Voltage Shield DAC channel and updates the shield configuration.""","""Configures the gain of a High Voltage Shield DAC channel by updating its corresponding register."""
91,c,"Sets a GPIO output enable state, remapping the pin index by swapping the 4-bit nibbles within its byte","""Configures the output enable state of a GPIO pin by manipulating a register within the HV shield device.""","""Enables or disables a GPIO output pin by setting corresponding bits in a register within the HV shield device."""
92,c,A callback function that forwards a received CAN frame to another device,"""Routes received CAN frames to another device using the `can_send` function and associated callbacks.""","""Routes received CAN frames to another device using the `can_send` function."""
93,c,Registers a set of rules to route CAN frames between specified interfaces,"""Registers multiple CAN router entries by adding RX filters for each entry, forwarding frames to specified destinations.”","""Registers multiple CAN router entries by adding RX filters to forward frames from specified IDs to designated destinations.”"
94,c,Initializes the CAN router by registering all statically-defined routing tables,"""Initializes the CAN router by registering entries from a table of CAN router configurations.""","""Initializes the CAN router by registering CAN routing entries from a configuration table."""
95,c,Sets a masked group of GPIO pins to the states defined in a value bitmask,"""Sets the value of specified GPIO pins within a high-voltage shield configuration, iterating through a bitmask to control individual pins.""","""Sets the value of specified GPIO pins within a high-voltage shield configuration based on a provided bitmask and value."""
96,c,Gets the number of available LIN callback slots,"""Returns the number of available callback slots for an abstract LIN device.""","""Determines and returns the number of free callback slots available on an abstract LIN device."""
97,c,Registers a callback function for a specific incoming LIN frame,Registers an incoming callback function for a specific LIN frame ID and size within a device's abstract LIN data structure.,"Registers a callback function to handle incoming LIN messages with a specified frame ID and size, storing associated data within a device."
98,c,Registers a callback function to provide data for a specific outgoing LIN frame,Registers an outgoing callback function for a specific LIN frame ID and size within the abstract LIN data structure.,"Registers an outgoing callback function for a specific LIN frame ID and size, storing it in the abstract LIN data structure."
99,c,Sets the active schedule table for a LIN scheduler and resets its position to the beginning,"""Sets the active table index for a LIN scheduler, ensuring exclusive access via a semaphore and resetting the entry counter.""","""Activates a specific table within a LIN scheduler, using a semaphore for mutual exclusion and resetting the entry index to the beginning of the table."""
100,c,Stops the LIN scheduler from processing its current schedule table,"""Disables a LIN scheduler by stopping its current table and releasing a semaphore.""","""Disables a LIN scheduler by setting its current table to inactive and releasing a semaphore."""
