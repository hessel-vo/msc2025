id,language,reference,generated
2,python,Validates if a value conforms to a datatype specified by a string,This function validates if a given value conforms to a specified datatype using a type checker.
3,python,Checks if a value or list of values is a valid integer for a specified bit-width and signedness.,"This function validates if an integer or a list of integers falls within a specified range, considering whether it's signed or unsigned and the number of bits."
4,python,Looks up a type definition tuple by its string name from a list of types,"The function retrieves type information (name, callable, and constraints) from a class's defined types based on a given datatype string."
5,python,Finds all datatypes within the current namespace and any parent namespaces of a given FQN,This function identifies and returns a dictionary of namespaced datatypes matching a given fully qualified name (FQN) prefix from a list of dynamic datatypes.
7,python,Converts a string-based data type definition into an ApiGearType object,"The function maps a string representation of a data type (e.g., ""int32"", ""string"", ""double[]"") to an `ApiGearType` object, handling array types and basic data types."
8,python,Generates an ApiGear property from a VSS (Vehicle Signal Specification) node,"This function generates an `ApiGearProperty` object from a `VSSNode` and datatype, handling unsupported datatypes and populating the description if available."
10,python,Loads and merges multiple VSpec files from specified paths into a single VSpec object,"This function loads and merges multiple VSpec files, combining their includes and definitions into a single VSpec object, while logging the process and raising an exception if no specs are loaded."
11,python,"Recursively updates a dictionary with values from another, merging nested dictionaries","Recursively merges dictionaries, updating nested dictionaries and overwriting non-dictionary values."
12,python,Validates a constant unique identifier (constUID) is a 32-bit hexadecimal string,"This function validates if a given string is a valid hexadecimal constant UID (format: 0x followed by 8 hexadecimal characters) and returns the string if valid, otherwise None."
13,python,"Initializes and attempts to resolve a VSS raw model, returning the unresolved model on failure","This function creates and attempts to resolve a `VSSRaw` object from a dictionary, handling potential validation or model errors by returning an initialized but incomplete object."
14,python,Validates that a list of strings are all known datatypes,"The function validates a list of datatypes against a predefined set, raising an assertion error for invalid entries."
15,python,"Renders a VSS tree into a string, displaying specified attributes for each node","The function renders a tree structure into a string representation, including node names and specified attributes."
16,python,Finds the root of a VSS instance by recursively traversing up the parent hierarchy,"The function recursively traverses up the VSSNode tree to find the root instance node, handling cases where the current node is not an instance or has no parent."
17,python,Counts the depth of a chain of instance branches,Recursively counts the depth of instance children within a tree-like data structure.
18,python,Finds all child node IDs that belong to a specific parent name,The function identifies node IDs that have a specific name as their expected parent.
19,python,"Gets an attribute, returning a default value if the attribute is missing or its value is None","This function safely retrieves an attribute from an object, returning a default value if the attribute is not found or is None."
20,python,Generates a Protobuf schema from a Vehicle Signal Specification (VSS) tree,"The code traverses a signal tree to generate Protocol Buffer (proto) definitions, including imports and message structures, from vehicle signal data."
21,python,Groups all leaf VSS branch instances by the fully qualified name of their original branch definition,The function extracts and organizes instance names under their respective root FQNs from a VSSNode tree structure.
22,python,Determines if a VSS node is a leaf based on its data type,The function checks if a VSSNode is a leaf node containing VSSDataDatatype data.
23,python,Checks if a VSS node is a branch that is not an instance,The function checks if a VSS node represents a branch with a non-instance data type.
24,python,Checks if a VSS node represents a branch instance,The function checks if a VSSNode represents an instance of a VSSDataBranch.
25,python,FNV-1 32-bit hashing algorithm for a byte sequence,This code calculates a 32-bit FNV-1a hash value for a given byte string.
28,java,Inflates a card fragment's layout and initializes its view components,"This code inflates a layout for a card fragment, finds its title and icon views, and returns the root view."
29,java,"Sets a button's icon and click listener to make it visible, or hides it if no content is provided","This method updates an image button's icon, click listener, and visibility based on the provided control content."
30,java,Lazily inflates and initializes a descriptive text layout view on first access,"This method lazily initializes and returns a view containing descriptive text elements (title, subtitle, image, and ""tap for more"" text) from a ViewStub, caching it for subsequent use."
31,java,Updates and displays a card header view with a new title and icon,"This code updates the UI elements (visibility, title, and icon) of a card header view on the main thread."
32,java,Lazily inflates and returns a text block layout view from a ViewStub,"This code lazily initializes and returns a `View` representing a text block layout, inflating it from a `ViewStub` if it doesn't already exist."
33,java,Gets the media browser service component from a given package,This code retrieves the component name of a media browsing service within a specified package using PackageManager.
34,java,Determines if an app component should be launchable by filtering against a hide list and de-duplicating media services,"This code determines whether a component should be added to a launchable list based on hide rules, custom media component settings, and component type."
35,java,Sets the media source and finishes the current activity,"This code selects a media source and finishes the activity, handling potential connection errors."
36,java,"Safely checks if a given activity is distraction-optimized, handling potential connection errors","This code checks if a specified activity within a given package is optimized for distraction mitigation in a car environment, handling potential connection errors."
38,java,"Retrieves a specific, configured Intent for the default maps app, falling back to a generic one","This code retrieves the preferred map activity intent, prioritizing user-configured options or a default system map application."
39,java,Dynamically instantiates and displays home card modules defined in a configuration resource,"This code initializes and displays a set of HomeCardModule fragments within a FragmentTransaction, dynamically creating them via reflection based on configured class names."
40,java,Removes dangling tasks that are in multi-window mode,This code removes multi-window tasks from the ActivityTaskManager if they are found in a list of task appearance information.
41,java,Updates the mode from the intent and sets the UI title accordingly,"The code updates the application's mode based on intent data, setting the title accordingly."
42,java,Lazily initializes and returns the Chronometer view on first access,"This code lazily initializes and returns a Chronometer view, retrieving it from the layout only if it hasn't been initialized before."
43,java,Blurs and scales an image to set as a card's visible background,"This code lazily initializes and returns a media layout view, inflating it from a ViewStub if it doesn't already exist and setting up its title, subtitle, and playback controls."
44,java,Blurs and scales an image to set as a card's visible background,"This code updates the card's background image by scaling a drawable to a square, blurring it, and setting it as the background."
45,java,Makes the media view visible and sets its title and subtitle,This code updates the visibility and text content of a media view with a given title and subtitle.
46,java,"Starts and shows a chronometer if a start time is positive; otherwise, hides it","This code manages the visibility and state of a chronometer (timer) based on the start time of an audio content, displaying it when the start time is positive."
47,java,Registers a callback on a newly added call,Registers a callback with a given call object if the call object is not null.
48,java,Resets state and unregisters the callback when a call is removed,"This code handles the removal of an active call by clearing related data, notifying the presenter of the update, and unregistering a callback."
49,java,Updates the ongoing call view model with a formatted phone number and UI controls,Formats a phone number and updates the UI with the formatted number and associated controls.
50,java,"Initializes the Mute, End Call, and Dialpad buttons for an in-call user interface","Initializes audio control buttons (mute, end call, dialpad) with associated actions within an in-call user interface."
53,cpp,Notifies a newly added listener if the D-Bus connection is already available,This code notifies a newly added listener of the current D-Bus connection availability status (available if connected).
54,cpp,"For an active connection, adds a thread to a list to be joined on exit, avoiding duplicates",The function associates a thread with a connection and adds the thread to a vector of threads to be joined upon exit.
56,cpp,A callback to stop monitoring a D-Bus watch and clean up its associated data,This function handles the removal of a DBus watch by stopping its monitoring and clearing associated data.
57,cpp,"A libdbus callback that creates, starts, or stops a D-Bus watch based on its readiness status","This function manages a DBus watch object, starting or stopping monitoring based on its readiness and context."
58,cpp,Thread-safely gets or creates a singleton DBusObjectManager instance using double-checked locking,"This code provides a thread-safe getter for a shared pointer to a DBusObjectManager, lazily initializing it if it doesn't already exist."
59,cpp,Performs a reference-counted release of a D-Bus service name,"Releases a service name on the DBus connection, decrementing a counter if the name is held multiple times."
60,cpp,Steals the reply from a pending D-Bus call and wraps it in a DBusMessage object,"This function converts a libdbus pending call reply to a DBusMessage object, handling null input and transferring ownership of the libdbus message."
61,cpp,Safely deletes all pending asynchronous handlers from a shared list,This function safely deletes asynchronous DBus message handlers stored in a protected vector by transferring ownership and then iterating to free the memory.
62,cpp,Reports a success status to all registered signal handlers for their associated tags,"This function iterates through registered signal handlers and calls their `onSpecificError` method with a success status for each associated tag, ensuring thread-safe access to the handler map."
63,cpp,Thread-safely removes a connection from a collection if it exists,"This code removes a connection from a map, protected by a mutex, given a connection ID."
64,cpp,Dispatches D-Bus signals for interface addition or removal to specific handlers,"This code handles D-Bus signals indicating the addition or removal of interfaces, routing them to a status event handler."
65,cpp,Retrieves the addresses of available service instances from a D-Bus registry,"Retrieves available DBus service instances from a registry and populates a vector with their addresses, returning a success status."
66,cpp,Queries a D-Bus registry to determine if a specific service instance is available,This function determines the availability status of a DBus service instance and updates the call status accordingly.
67,cpp,Notifies that a service is unavailable when its corresponding D-Bus interface is removed,"This function handles a DBus signal indicating the removal of interfaces, updating the internal state and notifying listeners when the removed interface matches the observed interface."
68,cpp,Notifies CommonAPI listeners of a D-Bus interface's availability status change,This function translates a DBus address and notifies listeners about an interface's availability status change.
69,cpp,Schedules an asynchronous notification of the current proxy status for a newly added listener,This function adds a listener and pushes a notification function to the main loop to inform the listener about events related to a specific subscription.
70,cpp,Removes all listener entries that match a given subscription in a thread-safe manner,"This function removes a listener from a collection based on a given subscription, ensuring thread safety with a mutex."
71,cpp,Forwards the addition of a D-Bus signal state handler to the underlying connection object,This function adds a signal handler and subscription to the DBus connection.
72,cpp,Callback to translate available D-Bus service instance addresses to strings and forward the result,"This function handles the asynchronous callback for retrieving available service instances via DBus, translating DBus addresses to strings and passing the status and instances to a callback function."
73,cpp,Routes a D-Bus message to a registered handler or handles standard introspection requests,"This code handles incoming DBus messages by routing them to registered interface handlers or, if not found, to a default introspection handler."
74,cpp,"Adds a D-Bus interface handler to a path, preventing duplicate registration except for standard interfaces","The function adds a DBus interface handler to a table, checking for existing entries and handling specific object manager interfaces."
75,cpp,"Registers a D-Bus handler for a specific path, preventing duplicates","The function adds a DBusInterfaceHandler to a table of registered objects, preventing duplicates for a given interface path."
78,c,Sends a positive UDS response for the ECU Reset service,"This function sends a positive response to an ECU reset request via ISOTP protocol, including the reset type in the transmitted data."
79,c,"Handles a UDS ECU Reset request, supporting only the hard reset sub-function which reboots the system","This function handles an ECU reset request, performing a hard reset (reboot) if requested and supported, otherwise sending a negative response."
80,c,"Sends a positive UDS response to a Request Download, specifying the maximum block length",This function sends a positive response to a request download service on the CAN bus using ISOTP.
81,c,Sends a UDS Transfer Data positive response containing the block sequence counter,This function sends a transfer data response message over ISOTP using a positive SID and specified block sequence counter.
82,c,Sends a UDS positive response for the Routine Control service containing a result code over ISO-TP,This function sends a UDS routine control result message via ISOTP to a specified CAN ID.
83,c,Sends a UDS Transfer Exit positive response message via the ISO-TP protocol,Sends a positive transfer exit response message via ISOTP.
85,c,Finds the index of a given CAN ID in a mapping table,"This function maps a CAN identifier to an index within a lookup table, returning 0xff if not found."
86,c,"Removes a specific LIN-to-CAN receive filter, or all filters, by clearing the associated callback",This function removes a receive filter by clearing the callback associated with a specific LIN address ID.
87,c,A LIN callback that dequeues a frame for transmission and executes its completion callback,"This function retrieves a LIN frame from a queue, copies it to an outgoing frame, and triggers a CAN transmission callback."
88,c,A callback that translates an incoming LIN frame to a CAN frame and invokes a registered handler,This function translates incoming LIN frames into CAN frames and invokes a registered callback function with the translated data.
89,c,Initializes a high-voltage shield by configuring its registers and enabling its output,"This function initializes an HV shield device by configuring a GPIO pin, initializing data structures, updating registers, and enabling the output."
90,c,Sets the gain for a specified DAC on a high-voltage shield,This function sets the gain value for a specified DAC (Digital-to-Analog Converter) channel within an HV shield device and updates the shield's configuration.
91,c,"Sets a GPIO output enable state, remapping the pin index by swapping the 4-bit nibbles within its byte",This function enables or disables a specific GPIO output pin on an HV shield device by manipulating a register.
92,c,A callback function that forwards a received CAN frame to another device,This function routes CAN frames received on one device to another device using the `can_send` function.
93,c,Registers a set of rules to route CAN frames between specified interfaces,"This function registers CAN router entries by adding RX filters for each entry, forwarding messages based on defined rules."
94,c,Initializes the CAN router by registering all statically-defined routing tables,Initializes the CAN router by registering multiple routing tables.
95,c,Sets a masked group of GPIO pins to the states defined in a value bitmask,"This function sets the value of specific GPIO pins within a shield configuration, applying a mask to select which pins are modified."
96,c,Gets the number of available LIN callback slots,This function calculates and returns the number of available callback slots for an abstract LIN device.
97,c,Registers a callback function for a specific incoming LIN frame,"This function registers an incoming callback for a specific LIN frame ID and size, storing the callback and associated data for later use."
98,c,Registers a callback function to provide data for a specific outgoing LIN frame,"This function registers an outgoing callback for a specific LIN frame ID and size, storing the callback and associated data for later use."
99,c,Sets the active schedule table for a LIN scheduler and resets its position to the beginning,"This function activates a specific table within a LIN scheduler, ensuring exclusive access via a semaphore and resetting the entry index."
100,c,Stops the LIN scheduler from processing its current schedule table,This function disables a LIN scheduler by marking it as stopped and releasing a semaphore.
