id,language,reference,generated,generated_rci
1,python,Checks if a data type is a subtype of a specified base type,This function checks if a given type `check` is a subtype of another type `base` within a class context.,"This function determines if a given type `check` is a subtype of another type `base` within a class context, raising an exception if either type is invalid."
2,python,Validates if a value conforms to a datatype specified by a string,This function checks if a given value matches a specified datatype using a provided class's type checker.,This function validates if a value conforms to a specified datatype using a class's type checking mechanism.
3,python,Checks if a value or list of values is a valid integer for a specified bit-width and signedness.,"This function checks if a given value or list of values are within a specified range for a given number of bits, considering whether the value is signed or unsigned.","This function validates if a given integer value or list of integers falls within a specified range, considering whether it's signed or unsigned, and based on a given bit width."
4,python,Looks up a type definition tuple by its string name from a list of types,"This function retrieves a type definition (name, constructor, and arguments) from a class's `types` attribute based on a given datatype string.","This function retrieves a type definition (name, constructor, and arguments) from a class's `types` attribute based on a given datatype string, or returns `None` if not found."
5,python,Finds all datatypes within the current namespace and any parent namespaces of a given FQN,This function identifies and returns a dictionary of namespaced datatypes that match a given fully qualified name (FQN) prefix.,This function identifies and returns a dictionary of namespaced datatypes whose names match a given fully qualified name (FQN) prefix.
6,python,Traverses a VSS tree to count the occurrences and collect the fully qualified paths of each node name,The function recursively populates a dictionary with unique node names and their fully qualified names (FQNs) from a VSSNode tree structure.,"The function recursively populates a dictionary with unique node names and their fully qualified names (FQNs) from a VSSNode tree structure, tracking the number of times each name appears."
7,python,Converts a string-based data type definition into an ApiGearType object,"The function converts a string representation of a data type (e.g., ""int32"", ""string"", ""double[]"") into an `ApiGearType` object, handling basic types and arrays.","The function converts a string representation of a data type (e.g., ""int32"", ""string"", ""double[]"") into an `ApiGearType` object, handling basic types and arrays."
8,python,Generates an ApiGear property from a VSS (Vehicle Signal Specification) node,"This function generates an `ApiGearProperty` object from a `VSSNode` and a datatype, populating it with the node's description if available.","This function generates an `ApiGearProperty` object from a `VSSNode` and a datatype, returning `None` if the datatype is unsupported."
9,python,Recursively resolves and flattens a specification file and all its include dependencies,Recursively gathers `VSpec` objects from a given specification file and its included files.,"Recursively gathers `VSpec` objects from a given specification file and its included files, resolving paths relative to the provided include paths."
10,python,Loads and merges multiple VSpec files from specified paths into a single VSpec object,"This function loads and merges multiple VSpec files, handling include directories and logging the process.","This function loads and merges multiple VSpec files, handling include directories and logging the process, returning a single merged VSpec object."
11,python,"Recursively updates a dictionary with values from another, merging nested dictionaries","Recursively updates a dictionary with another dictionary, merging nested dictionaries.","Recursively merges a dictionary into another, updating nested dictionaries."
12,python,Validates a constant unique identifier (constUID) is a 32-bit hexadecimal string,"This function validates if a given string is a valid hexadecimal constant UID (e.g., ""0x12345678"") and returns the string if valid, otherwise returns None.","This function validates if a given string is a valid hexadecimal constant UID (e.g., ""0x12345678"") and returns the string if valid, otherwise raises an assertion error."
13,python,"Initializes and attempts to resolve a VSS raw model, returning the unresolved model on failure","This function creates and attempts to resolve a `VSSRaw` object from a dictionary, returning it even if resolution fails.","This function creates a `VSSRaw` object from a dictionary and attempts to resolve it, returning the object even if resolution fails."
14,python,Validates that a list of strings are all known datatypes,"This function validates a list of datatypes against a predefined set of valid datatypes, raising an assertion error if an invalid datatype is found.","This function validates a list of datatypes, raising an assertion error if any are invalid."
15,python,"Renders a VSS tree into a string, displaying specified attributes for each node",The function recursively traverses a tree structure and generates a string representation of the tree nodes and their specified attributes.,The function recursively traverses a tree structure and generates a string representation of each node and its specified attributes.
16,python,Finds the root of a VSS instance by recursively traversing up the parent hierarchy,"Recursively traverses up the VSS tree to find the root instance node, returning the node and its depth.",Recursively traverses up the VSS tree to find the root instance node.
17,python,Counts the depth of a chain of instance branches,Recursively counts the depth of instance children within a VSSDataBranch tree.,Recursively counts the depth of instance children within a VSSDataBranch tree.
18,python,Finds all child node IDs that belong to a specific parent name,This function identifies and returns a list of node IDs whose expected parent is a given name.,This function identifies and returns a list of node IDs that have a specified name as their expected parent.
19,python,"Gets an attribute, returning a default value if the attribute is missing or its value is None","Safely retrieves an attribute from an object, returning a default value if the attribute is missing.","Safely retrieves an attribute from an object, returning a default value if the attribute is not found."
20,python,Generates a Protobuf schema from a Vehicle Signal Specification (VSS) tree,"This function generates a protobuf definition from a VSS signal tree, including imports and message structures.","This function generates a protobuf definition from a VSS signal tree, including imports and message structures for each branch."
21,python,Groups all leaf VSS branch instances by the fully qualified name of their original branch definition,"This function extracts and organizes instance names from a VSS tree structure, grouping them by their root instance.","This function extracts instance names from a VSS tree, grouping them by their root instance's fully qualified name."
22,python,Determines if a VSS node is a leaf based on its data type,Checks if a VSS node is a leaf node containing data.,Checks if a VSS node is a leaf node containing data.
23,python,Checks if a VSS node is a branch that is not an instance,The function checks if a VSS node represents a branch with a non-instance data type.,The function checks if a VSS node represents a branch with a non-instance data type.
24,python,Checks if a VSS node represents a branch instance,Checks if a VSS node represents an instance of a VSS branch.,Checks if a VSS node's data is an instance of a VSS branch.
25,python,FNV-1 32-bit hashing algorithm for a byte sequence,This function calculates a 32-bit FNV-1a hash value for a given byte string.,This function calculates a 32-bit FNV-1a hash value for a given byte string.
26,java,Lazily initializes and returns an audio card presenter with data models for media and in-call status,"This method lazily initializes and returns an `AudioCardPresenter` that displays media and in-call information, using a `MediaViewModel` if available or a default `InCallModel` otherwise.","This method lazily initializes and returns an `AudioCardPresenter` that displays media and in-call information, using a `MediaViewModel` if available or a default `InCallModel` otherwise."
27,java,Lazily initializes and returns the audio card view fragment,"This method lazily initializes and returns an `AudioFragment` instance, ensuring it's properly associated with a presenter.","This method lazily initializes and returns an `AudioCardFragment` instance, ensuring it's properly associated with a presenter."
28,java,Inflates a card fragment's layout and initializes its view components,"This method inflates a layout, finds view elements (card title and icon), and returns the inflated view.",This method inflates a layout and initializes view elements for a card-like UI component.
29,java,"Sets a button's icon and click listener to make it visible, or hides it if no content is provided",This method updates the visibility and content of an ImageButton based on the provided DescriptiveTextWithControlsView.Control object.,This method updates an ImageButton's visibility and drawable based on a DescriptiveTextWithControlsView.Control object.
30,java,Lazily inflates and initializes a descriptive text layout view on first access,"This method lazily initializes and returns a view containing descriptive text and optional elements like a subtitle, image, and ""tap for more"" text.","This method lazily initializes and returns a view for displaying descriptive text and optional elements like a subtitle, image, and ""tap for more"" text."
31,java,Updates and displays a card header view with a new title and icon,Updates the UI elements of a card header view with the provided card title and icon.,Updates the card header view's title and icon in the main thread.
32,java,Lazily inflates and returns a text block layout view from a ViewStub,"This method lazily initializes and returns a `View` representing a text block layout, including its text and ""tap for more"" elements.","This method lazily initializes and returns a `View` representing a text block layout, including its text and ""tap for more"" elements, if it hasn't been initialized already."
33,java,Gets the media browser service component from a given package,This method retrieves the default media browsing service component name for a given package name using PackageManager.,This method retrieves the default media browsing service component name for a given package name using PackageManager.
34,java,Determines if an app component should be launchable by filtering against a hide list and de-duplicating media services,"This method determines whether a component should be added to a list of launchables based on its package name, type, and custom media component settings.","This method determines whether a component should be added to a list of launchables based on its package name, type, and custom media component settings."
35,java,Sets the media source and finishes the current activity,Sets the media source to browse mode and finishes the activity if it's an activity.,"Sets the media source to browse mode and finishes the activity if it's an activity, handling potential connection errors."
36,java,"Safely checks if a given activity is distraction-optimized, handling potential connection errors",Checks if a given activity within a package is optimized for distraction-free operation using a CarPackageManager.,"Checks if a given activity within a package is optimized for distraction-free operation using a CarPackageManager, handling potential connection errors."
37,java,"Asynchronously creates, configures, and adds a task view to a parent view group","Creates and adds a `TaskView` to a parent view group, setting up a listener and handler for task-related events.","Creates a `TaskView` and adds it to a parent view, configuring a listener and handler for task updates."
38,java,"Retrieves a specific, configured Intent for the default maps app, falling back to a generic one","This method retrieves the preferred map activity intent, prioritizing user-defined preferences over the system default.","This method retrieves the preferred map activity intent, prioritizing user-defined preferences or the system default if no preferred activity is found."
39,java,Dynamically instantiates and displays home card modules defined in a configuration resource,"This method dynamically instantiates and adds `HomeCardModule` classes defined in a resource array to a set, then replaces fragments in the activity's layout with the views provided by these modules.","This method dynamically instantiates `HomeCardModule` classes from a resource array, adds them to a set, and then replaces fragments in the activity's layout with the views provided by these modules."
40,java,Removes dangling tasks that are in multi-window mode,Removes multi-window tasks from the ActivityTaskManager if they are found in a list of task appeared information.,Removes dangling multi-window tasks from the ActivityTaskManager.
41,java,Updates the mode from the intent and sets the UI title accordingly,Updates the application's mode based on intent data and updates the title accordingly.,Updates the application's mode and title based on intent data.
42,java,Lazily initializes and returns the Chronometer view on first access,"This method lazily initializes and returns a Chronometer view from the layout, along with its separator, if it hasn't been initialized already.",This method lazily initializes and returns a Chronometer view and its separator from the layout if they haven't been initialized already.
43,java,Blurs and scales an image to set as a card's visible background,"This method lazily initializes and returns a `View` for displaying media information and controls, inflating it from a `ViewStub` if it doesn't already exist.","This method lazily initializes and returns a `View` for displaying media information and controls, inflating it from a `ViewStub` if it doesn't already exist and initializing the presenter's controls."
44,java,Blurs and scales an image to set as a card's visible background,"This method updates the card's background image by scaling, blurring, and setting it to a blurred bitmap.","This method updates the card's background image by scaling, blurring, and setting it to a blurred bitmap, ensuring the image is visible."
45,java,Makes the media view visible and sets its title and subtitle,Updates the visibility and text content of a media view with a title and subtitle.,Updates the visibility and text content of a media view with a title and subtitle.
46,java,"Starts and shows a chronometer if a start time is positive; otherwise, hides it",This method updates the visibility and state of a chronometer and separator based on the start time of an audio content.,This method controls the visibility of a chronometer and separator based on the start time of an audio content.
47,java,Registers a callback on a newly added call,Registers a callback to a newly added call object if the call object is not null.,Registers a callback for a newly added call object.
48,java,Resets state and unregisters the callback when a call is removed,"This method handles the removal of a call, clearing related data and notifying the presenter.","This method handles the removal of a call, clearing related data and notifying the presenter of the update."
49,java,Updates the ongoing call view model with a formatted phone number and UI controls,Updates the UI model with a formatted phone number and notifies the presenter of the update.,Updates the UI model with a formatted phone number and notifies the presenter of the update.
50,java,"Initializes the Mute, End Call, and Dialpad buttons for an in-call user interface","Initializes audio control buttons (mute, end call, dialpad) within a view.","Initializes audio control buttons (mute, end call, dialpad) for an in-call view."
51,cpp,Sends a D-Bus message over the connection and returns a boolean indicating success,"Sends a DBus message via the connection, returning true on success and false on failure.","Sends a DBus message via the connection, returning true on success and false on failure, or if the message or connection is invalid."
52,cpp,Creates a D-Bus signal message addressed to a specific client,"Creates a DBus signal message with specified object path, interface name, signal name, and destination.","Creates a DBus signal message with specified object path, interface name, signal name, and destination DBus ID."
53,cpp,Notifies a newly added listener if the D-Bus connection is already available,This function notifies a listener of available status if a new listener is added and the DBus connection is active.,This function notifies a listener of available status if a new listener is added and the DBus connection is active.
54,cpp,"For an active connection, adds a thread to a list to be joined on exit, avoiding duplicates",The function `joinOnExit` associates a thread with a connection and adds it to a vector of threads to be joined upon exit.,The function `joinOnExit` associates a thread with a connection and adds it to a vector of threads to be joined when the connection is closed.
55,cpp,A callback that wakes up a main loop context if it has not been destroyed,This function wakes up a main loop context by calling its `wakeup()` method after acquiring a lock on the context.,"This function wakes up a main loop context by calling its `wakeup()` method, ensuring thread safety via a lock."
56,cpp,A callback to stop monitoring a D-Bus watch and clean up its associated data,This function removes a DBus watch and stops its associated monitoring if it's ready.,This function removes a DBus watch and stops its associated monitoring if it's ready.
57,cpp,"A libdbus callback that creates, starts, or stops a D-Bus watch based on its readiness status",This function toggles the watching state of a DBus connection based on the provided DBus watch object and associated context.,"This function toggles the watching state of a DBus connection based on the provided DBus watch object and associated context, managing its lifecycle and dependencies."
58,cpp,Thread-safely gets or creates a singleton DBusObjectManager instance using double-checked locking,"This code lazily initializes and returns a shared pointer to a `DBusObjectManager` object, ensuring thread-safe access.","This code lazily initializes and returns a shared pointer to a `DBusObjectManager` object, ensuring thread-safe access via a mutex."
59,cpp,Performs a reference-counted release of a D-Bus service name,"Releases a service name from the D-Bus connection, decrementing its count or releasing it if the count reaches zero.","Releases a service name from the D-Bus connection, decrementing its count or releasing it if the count reaches zero, and returns a boolean indicating success."
60,cpp,Steals the reply from a pending D-Bus call and wraps it in a DBusMessage object,"This function converts a libdbus pending call to a DBusMessage object, handling null pointers and managing reference counts.","This function converts a libdbus pending call to a DBusMessage object, handling null pointers and managing reference counts."
61,cpp,Safely deletes all pending asynchronous handlers from a shared list,This function deletes all pending asynchronous message reply handlers stored in a thread-safe vector.,This function deletes all pending asynchronous message reply handlers stored in a thread-safe vector to prevent memory leaks.
62,cpp,Reports a success status to all registered signal handlers for their associated tags,The code iterates through signal handlers and calls their `onSpecificError` method with a success status for each registered error tag.,The code iterates through signal handlers and calls their `onSpecificError` method with a success status for each registered error tag.
63,cpp,Thread-safely removes a connection from a collection if it exists,"Removes a connection from the factory's connection map, ensuring thread safety with a mutex.","Removes a connection from the factory's connection map, protected by a mutex."
64,cpp,Dispatches D-Bus signals for interface addition or removal to specific handlers,"This code handles DBus messages related to instance availability status changes, dispatching them to the appropriate event handler.","This code handles DBus messages indicating the addition or removal of interfaces, forwarding them to the instance availability status event handler."
65,cpp,Retrieves the addresses of available service instances from a D-Bus registry,Retrieves available service instances from a DBus proxy and populates a vector with their addresses.,Retrieves available service instances from a DBus proxy and populates a vector with their addresses.
66,cpp,Queries a D-Bus registry to determine if a specific service instance is available,This function checks if a DBus service instance is available and updates the availability status accordingly.,This function determines the availability status of a DBus service instance and sets the call status to success.
67,cpp,Notifies that a service is unavailable when its corresponding D-Bus interface is removed,"This function handles the `InterfacesRemoved` signal from a DBus bus, removing interfaces from a proxy and updating their availability status if they match the observed interface.","This function handles the `InterfacesRemoved` signal from a DBus bus, removing interfaces from a proxy and updating their availability status if they match the observed interface."
68,cpp,Notifies CommonAPI listeners of a D-Bus interface's availability status change,Notifies listeners of a change in the availability status of a DBus interface.,Notifies listeners of a change in the availability status of a DBus interface.
69,cpp,Schedules an asynchronous notification of the current proxy status for a newly added listener,This function registers a listener with a DBus proxy and pushes a function to the main loop to notify the listener of specific events.,This function registers a listener with a DBus proxy and schedules a function to notify the listener of specific events via the main loop.
70,cpp,Removes all listener entries that match a given subscription in a thread-safe manner,Removes a listener from a set of listeners associated with a specific subscription.,Removes a listener from a set of listeners associated with a specific subscription.
71,cpp,Forwards the addition of a D-Bus signal state handler to the underlying connection object,This function adds a signal handler to the DBus proxy connection for a specific subscription.,This function registers a signal handler with the DBus proxy connection for a given subscription ID.
72,cpp,Callback to translate available D-Bus service instance addresses to strings and forward the result,"This function handles the asynchronous callback for retrieving available instances of a DBus proxy, translating DBus addresses to strings and passing the status and instances to the provided callback.","This function handles the asynchronous callback for retrieving available instances of a DBus proxy, translating DBus addresses to strings and passing the status and instances to the provided callback."
73,cpp,Routes a D-Bus message to a registered handler or handles standard introspection requests,This function handles incoming DBus messages by routing them to the appropriate registered interface handler or handling introspection requests.,This function handles incoming DBus messages by routing them to the appropriate registered interface handler or handling introspection requests.
74,cpp,"Adds a D-Bus interface handler to a path, preventing duplicate registration except for standard interfaces","This function adds a DBus interface handler to a table, checking for duplicates and handling special cases for ObjectManager and Properties interfaces.","This function adds a DBus interface handler to a table, preventing duplicates and handling special cases for ObjectManager and Properties interfaces."
75,cpp,"Registers a D-Bus handler for a specific path, preventing duplicates","Adds a DBusInterfaceHandler to a table of registered objects, keyed by interface path, ensuring no duplicates.","Adds a DBusInterfaceHandler to a table of registered objects, keyed by interface path, preventing duplicate registrations."
76,c,Sends a UDS negative response message containing the failed service ID and a negative response code,Sends a negative response message to a specified CAN ID using the ISOTP protocol.,Sends a negative response message to a specified CAN ID using the ISOTP protocol.
77,c,Sends a UDS positive response for the Diagnostic Session Control service,This function sends a diagnostic session control response message via CAN bus using the ISOTP protocol.,This function sends a diagnostic session control response message via CAN bus using the ISOTP protocol.
78,c,Sends a positive UDS response for the ECU Reset service,Sends a positive reset response message to a specified CAN ID using the ISOTP protocol.,Sends a positive reset response message to a specified CAN ID using the ISOTP protocol.
79,c,"Handles a UDS ECU Reset request, supporting only the hard reset sub-function which reboots the system","This function handles a UDS ECU reset request, performing a hard reset if requested and returning an error if the request is invalid or the reset type is unsupported.","This function handles a UDS ECU reset request, performing a hard reset if requested and returning an error if the request is invalid or the reset type is unsupported."
80,c,"Sends a positive UDS response to a Request Download, specifying the maximum block length",Sends a positive response to a request download message via ISOTP.,Sends a positive response to a request download message via ISOTP.
81,c,Sends a UDS Transfer Data positive response containing the block sequence counter,Sends a transfer data response message via ISOTP to a specified CAN ID.,Sends a transfer data response message via ISOTP to a specified CAN ID.
82,c,Sends a UDS positive response for the Routine Control service containing a result code over ISO-TP,This function sends a routine control result message via ISOTP to a specified CAN ID.,This function sends a routine control result message via ISOTP to a specified CAN ID.
83,c,Sends a UDS Transfer Exit positive response message via the ISO-TP protocol,Sends a positive response to a transfer exit request via ISOTP.,Sends a positive response to a transfer exit request via ISOTP.
84,c,"Converts a raw integer gain value to a corresponding DAC gain enumeration, returning an error if unsupported",This function converts a raw gain value to a corresponding gain enum value for the HV shield DAC.,This function converts a raw gain value to a corresponding gain enum value for the HV shield DAC.
85,c,Finds the index of a given CAN ID in a mapping table,"This function maps a CAN identifier to an index within a predefined mapping table, returning 0xff if no match is found.","This function maps a CAN identifier to an index within a predefined mapping table, returning 0xff if no match is found."
86,c,"Removes a specific LIN-to-CAN receive filter, or all filters, by clearing the associated callback",This function removes a specified LIN2CAN filter by setting its callback function to null.,"This function removes a specified LIN2CAN filter by setting its callback function to null, or clears all filters if the filter ID is TRANSLATABLE_ADDRESSES_LEN."
87,c,A LIN callback that dequeues a frame for transmission and executes its completion callback,"This function retrieves a LIN frame from a queue, copies it to a provided frame structure, and calls a user-defined callback function to transmit the frame via CAN.","This function retrieves a LIN frame from a queue, copies it to a provided frame structure, and calls a user-defined callback function to transmit the frame via CAN."
88,c,A callback that translates an incoming LIN frame to a CAN frame and invokes a registered handler,This function translates incoming LIN frames to CAN frames and calls a registered callback function with the translated frame.,This function translates incoming LIN frames to CAN frames and invokes a registered callback function with the translated frame data.
89,c,Initializes a high-voltage shield by configuring its registers and enabling its output,"Initializes the HV shield device by configuring the output enable pin, initializing registers, updating the shield state, and enabling the output.","Initializes the HV shield device by configuring the output enable pin, initializing registers, updating the shield state, and enabling the output."
90,c,Sets the gain for a specified DAC on a high-voltage shield,Sets the gain value for a specified DAC channel within the HV shield device.,Sets the gain value for a specified DAC channel within the HV shield device.
91,c,"Sets a GPIO output enable state, remapping the pin index by swapping the 4-bit nibbles within its byte",This function enables or disables a GPIO output pin on an HV shield device by manipulating a bitfield in a register.,"This function enables or disables a GPIO output pin on an HV shield device by manipulating a bitfield in a register, handling index mapping for the device's GPIO registers."
92,c,A callback function that forwards a received CAN frame to another device,This function routes CAN frames received on one device to another device using the `can_send` API.,This function routes CAN frames received on one device to another device.
93,c,Registers a set of rules to route CAN frames between specified interfaces,Registers CAN router entries by adding corresponding receive filters to the CAN driver.,Registers CAN router entries by adding corresponding receive filters to the CAN driver.
94,c,Initializes the CAN router by registering all statically-defined routing tables,Initializes the CAN router by registering all CAN router tables.,Initializes the CAN router by registering all CAN router tables.
95,c,Sets a masked group of GPIO pins to the states defined in a value bitmask,"This function sets the specified GPIO pins to a given value, masking out pins not in the provided mask.","This function sets the specified GPIO pins to a given value, masking out pins not in the provided mask, using a hardware voltage shield."
96,c,Gets the number of available LIN callback slots,This function calculates and returns the number of available callback slots for a given abstract LIN device.,This function returns the number of free callback slots for a given abstract LIN device.
97,c,Registers a callback function for a specific incoming LIN frame,Registers a callback function to handle incoming LIN messages with a specific frame ID and size.,Registers a callback function to handle incoming LIN messages with a specific frame ID and size.
98,c,Registers a callback function to provide data for a specific outgoing LIN frame,Registers an outgoing callback function for a specific LIN frame ID and size.,Registers an outgoing callback function for a specific LIN frame ID and size.
99,c,Sets the active schedule table for a LIN scheduler and resets its position to the beginning,This function sets the active table index for a LIN scheduler and resets the current entry within that table.,"This function sets the active table index for a LIN scheduler and resets the current entry within that table, ensuring exclusive access via a semaphore."
100,c,Stops the LIN scheduler from processing its current schedule table,This function disables a LIN scheduler by setting its current table index to -1 and releasing a semaphore.,"This function disables a LIN scheduler by setting its current table index to -1 and releasing a semaphore, preventing further scheduling."
