id,language,reference,generated,generated_rci
2,python,"Raises an exception if the specified 'datatype' is unsupported, otherwise retrieves that type's validation function and returns the boolean result of calling it with the provided 'value'",This function checks if a given value conforms to a specified datatype by retrieving the corresponding type object and applying it to the value.,This function validates if a given value matches a specified datatype by using a type object retrieved from a datatype mapping.
3,python,"Validates that a given value, or each value in a list, is an integer that fits within the numerical range defined by a specified bit-width and signedness",The function `is_xintx` checks if a given value or list of values are within a specified range for a signed or unsigned integer type with a given number of bits.,The function `is_xintx` checks if a given value or list of values are within a specified range for a signed or unsigned integer type with a given number of bits.
4,python,"Returns the type definition tuple from a class-level list of types that matches the provided 'datatype' name, or returns None if no match is found","The function `get_type` searches a class's `types` attribute (presumably a list of tuples) for a tuple whose first element matches the input `datatype` and returns that tuple along with the callable and list of strings associated with it, or `None` if no match is found.","The function `get_type` searches a class's `types` attribute (presumably a list of tuples) for a tuple whose first element matches the input `datatype` and returns that tuple, along with its associated callable and list of strings, or `None` if no match is found."
5,python,Returns a dictionary mapping the short name to the full FQN for all dynamic datatypes that exist in the same namespace as the provided FQN,"This function identifies and returns a dictionary of namespaced datatypes from a list of predefined datatypes, based on whether the input fully qualified name (FQN) starts with a prefix of any of the predefined datatypes.","This function identifies and returns a dictionary of namespaced datatypes from a list of predefined datatypes, based on whether the input fully qualified name (FQN) starts with a prefix of any of the predefined datatypes, excluding those that exactly match the input FQN."
7,python,"Parses a type string to create an `ApiGearType` object, mapping common primitive types to their ApiGear equivalents, sanitizing custom type names by replacing dots with underscores, and setting an array flag based on a ""[]"" suffix","The function `get_apigear_datatype` converts a string representation of a data type (e.g., ""int32"", ""string"", ""double[]"") into an `ApiGearType` object, handling basic types, floating-point types, booleans, strings, and arrays.","The function `get_apigear_datatype` converts a string representation of a data type (e.g., ""int32"", ""string"", ""double[]"") into an `ApiGearType` object, mapping common data types to their corresponding `ApiGearBasicType` enum values and handling arrays."
8,python,"Creates an `ApiGearProperty` by converting the VSS node's datatype to a supported ApiGear type and copying its description, returning `None` and logging a warning if the datatype is not supported","This function generates an `ApiGearProperty` object from a `VSSNode` and a specified datatype, populating its type and description if available.","This function generates an `ApiGearProperty` object from a `VSSNode` and a specified datatype, returning `None` if the datatype is unsupported."
10,python,"Loads and parses multiple VSpec files from specified paths, using a list of include directories, then merges them into a single composite VSpec object and returns it, raising an exception if no files are successfully loaded","This function loads and merges multiple VSpec files (specified by paths) along with a list of include directories, creating a single combined VSpec object and logging its details.","This function loads and merges multiple VSpec files (specified by paths) and their included files, creating a single combined VSpec object and logging its details."
11,python,"Recursively updates a 'base' dictionary with an 'update' dictionary, merging nested dictionaries for common keys and overwriting or adding all other key-value pairs","Recursively merges a dictionary `update` into a base dictionary `base`, updating nested dictionaries and overwriting non-dictionary values.","Recursively merges a dictionary `update` into a base dictionary `base`, updating nested dictionaries and overwriting non-dictionary values in place."
12,python,"Asserts that the input value, if not None, is a valid 'constUID' formatted as an 8-digit hexadecimal string prefixed with '0x', returning the value if the check passes","This function validates if a given string is a valid hexadecimal constant UID (e.g., ""0x12345678"") and returns the string if valid, otherwise returns None.","This function validates if a given string is a valid hexadecimal constant UID (e.g., ""0x12345678"") and returns the string if valid, otherwise raises an assertion error."
13,python,"Initializes a VSSRaw model and attempts to resolve it, returning the successfully resolved model or the original unresolved model if resolution fails due to a validation or model error","This function creates a `VSSRaw` object from input data, attempts to resolve it using `resolve_vss_raw`, and returns the resolved object or the original object if resolution fails, logging a debug message in case of failure.","This function creates a `VSSRaw` object from input data, attempts to resolve it using `resolve_vss_raw`, and returns the resolved object or the original object if resolution fails, logging a debug message in case of failure."
14,python,"Asserts that each string in the input list is a valid datatype by checking against a master list, returning the original list if all values are valid","The function `check_valid_datatypes` validates a list of datatypes against a predefined set of valid datatypes, raising an assertion error if any invalid datatypes are found.","The function `check_valid_datatypes` validates a list of datatypes against a predefined set of valid datatypes, raising an assertion error if any invalid datatypes are found and returning the validated list."
15,python,"Traverses a VSSNode tree to generate a formatted string, displaying each node's name followed by the values of any specified attributes found on it","The function `get_rendered_tree` recursively traverses a VSSNode tree, formats each node's name and specified attributes into a string representation, and returns a multi-line string representing the rendered tree structure.","The function `get_rendered_tree` recursively traverses a VSSNode tree, formats each node's name and specified attributes into a string representation, and returns a multi-line string representing the rendered tree structure."
16,python,"Recursively traverses up the parent hierarchy to find and return the first non-instance ancestor node and the traversal depth, raising an exception if the starting node is not a branch or if no root is found","Recursively traverses up the VSS tree to find the root instance node, incrementing the depth counter with each level, and raising an exception if no instance root is found.","Recursively traverses up the VSS tree to find the root instance node, incrementing the depth counter with each level, and raising a `NoInstanceRootException` if no instance root is found."
17,python,Recursively calculates the depth of the first-found branch of children where each node is a `VSSDataBranch` with its `is_instance` flag set,Recursively counts the depth of instance children within a VSSDataBranch object's hierarchy.,"Recursively counts the depth of instance children within a VSSDataBranch object's hierarchy, returning 0 if no instance children are found."
18,python,Returns a list of node IDs from an input list whose expected parent's name matches the provided `name`,The function `find_children_ids` identifies and returns a list of node IDs whose expected parent is a given name.,The function `find_children_ids` identifies and returns a list of node IDs that have a specified name as their expected parent.
19,python,"Retrieves an attribute from an object, returning a specified default value if the attribute is missing or its value is `None`","This function safely retrieves an attribute from an object, returning a default value if the attribute is not found or is None.","This function safely retrieves an attribute from an object, returning a specified default value if the attribute is not found or is None."
20,python,Generates a `proto3` file from a VSS tree by first writing import statements for complex data types and then converting each branch in the tree into a corresponding protobuf message,"The Python code traverses a VSS signal tree, extracts protobuf message definitions for each branch node, and writes them to a specified file, including optional fields and static UIDs if requested.","The Python code traverses a VSS signal tree, extracts protobuf message definitions for each branch node, and writes them to a specified file, including optional fields and static UIDs if requested, while also generating necessary import statements for the protobuf definitions."
21,python,"Traverses a VSS tree to find all terminal instance branches, grouping their relative names into a dictionary where each key is the fully qualified name of the original branch they instantiate","The function `get_instances_meta` extracts a dictionary mapping instance root fully qualified names to lists of their direct instance children within a VSS tree, excluding any instance root nodes that have their own instance children.","The function `get_instances_meta` extracts a dictionary mapping instance root fully qualified names to lists of their direct instance children within a VSS tree, excluding any instance root nodes that have their own instance children."
22,python,Checks if a given VSSNode is a leaf by verifying its 'data' attribute is an instance of VSSDataDatatype,"The function `is_VSS_leaf` checks if a given `VSSNode` represents a leaf node (i.e., contains data of a specific datatype) within a Vehicle Signal Specification (VSS) tree structure.","The function `is_VSS_leaf` checks if a given `VSSNode` is a leaf node in a Vehicle Signal Specification (VSS) tree, meaning it contains a data element of a specific datatype."
23,python,Returns `True` if the given `VSSNode`'s data is a `VSSDataBranch` and its `is_instance` attribute is `False`,The function `is_VSS_branch` checks if a given `VSSNode` represents a branch in a VSS data structure and if it is not an instance.,The function `is_VSS_branch` checks if a given `VSSNode` represents a branch in a VSS data structure and if it is not an instance.
24,python,Returns True if the node's data is a VSSDataBranch and its 'is_instance' attribute is True,The function `is_VSS_branch_instance` checks if a given VSS node represents an instance of a VSS data branch.,The function `is_VSS_branch_instance` checks if a given VSS node's data is a VSS data branch and if that branch is an instance.
25,python,"Calculates a 32-bit FNV-1 hash for a given byte string by iterating through each byte, multiplying the current hash by the FNV prime, and then performing a bitwise XOR with the byte",The function `fnv1_32_hash` calculates a 32-bit FNV-1a hash value for a given byte string using a specific prime number and bitwise operations.,The function `fnv1_32_hash` calculates a 32-bit FNV-1a hash value for a given byte string.
28,java,"Inflates the `card_fragment` layout, finds and assigns the card's title and icon views, and returns the resulting root view","This method inflates a layout resource (`card_fragment`) to create a view, finds the title and icon elements within that layout, and returns the inflated view.","This method inflates a layout resource (`card_fragment`) to create a view, finds the title and icon elements within that layout, and returns the inflated view for use in a fragment."
29,java,"Updates an `ImageButton`'s icon and click listener from a content object and makes it visible, or hides the button if the content is null",This method updates the visibility and content of an ImageButton based on the presence and properties of a corresponding DescriptiveTextWithControlsView.Control object.,This method updates an ImageButton's visibility and drawable based on whether a corresponding DescriptiveTextWithControlsView.Control object is present and its associated icon and click listener.
30,java,"Lazily inflates a `ViewStub` to create a descriptive text layout, caches references to its child views (title, subtitle, image), and returns the inflated layout","This method lazily initializes and returns a `View` containing descriptive text and optional elements (title, subtitle, image, and ""tap for more"" text) if it hasn't been initialized yet, using a `ViewStub` to inflate the layout.","This method lazily initializes and returns a `View` containing descriptive text and optional elements (title, subtitle, image, and ""tap for more"" text) if it hasn't been initialized yet, inflating the layout from a `ViewStub` to avoid unnecessary inflation."
31,java,Updates the header view on the main UI thread by making its root view visible and setting the card's title and icon from the provided `CardHeader` object,"This method updates the UI elements (visibility, title, and icon) of a card header view within the main thread of the Android activity.",This method updates the visibility and content (title and icon) of a card header view within the main thread of the Android activity.
32,java,"Lazily inflates a `ViewStub` to create and return the text block layout view, while also finding and caching references to its child text views on the first call","This method lazily initializes and returns a `View` representing a text block layout, inflating it from a `ViewStub` if it hasn't been initialized yet and retrieving its child views.","This method lazily initializes and returns a `View` representing a text block layout, inflating it from a `ViewStub` if it hasn't been initialized yet and retrieving its child views for text display and ""tap for more"" functionality."
33,java,"Queries the `PackageManager` for a `MediaBrowserService` within a given package and returns a `ComponentName` for the first one found, or `null` if none exist",This Java code retrieves the default MediaBrowserService component name for a given package name by querying the PackageManager for services that implement the MediaBrowserService interface.,This Java code retrieves the default MediaBrowserService component name for a given package name by querying the PackageManager for services that implement the MediaBrowserService interface and returns null if no such service is found.
34,java,"Determines if a component should be added to a launchable list, returning `false` if its package is explicitly hidden or if it's a custom media component and launchable apps are also being shown, otherwise returning `true` for valid launchable or media service types","This method determines whether a given component should be added to a list of launchables based on its package name, app type, and whether it's a custom media component, logging an error if an invalid app type is encountered.","This method determines whether a given component should be added to a list of launchables based on its package name, app type, and whether it's a custom media component, returning `false` if the component's package is in a blacklist or if it's a custom media component that shouldn't be shown."
35,java,"Sets the car's media source to a given component in browse mode and finishes the context if it's an Activity, catching and logging a `CarNotConnectedException` if the car service is unavailable","This method sets the media source of a CarMediaManager to browse mode and finishes the activity if the context is an Activity, handling potential CarNotConnectedException.","This method sets the media source of a CarMediaManager to browse mode and finishes the activity if the context is an Activity, handling potential CarNotConnectedException and logging errors."
36,java,"Safely checks if a given activity is distraction optimized using the `CarPackageManager`, returning `false` and logging an error if the manager is null or a `CarNotConnectedException` is caught","This method checks if a specified activity within a given package is optimized for distraction-free operation by querying the CarPackageManager, handling potential connection errors.","This method determines if a specified activity within a given package is optimized for distraction-free operation by querying the CarPackageManager, returning `true` if so and handling potential connection errors."
38,java,"Retrieves a specific, resolvable map `Intent` from a configured list if it matches the system's default map app, otherwise falls back to a generic `Intent` for any map application","This method retrieves an `Intent` for launching a maps application, prioritizing user-defined preferences from a resource array over the system default maps activity.","This method retrieves an `Intent` for launching a maps application, prioritizing user-defined preferences from a resource array over the system default maps activity, and handling invalid URI exceptions."
39,java,"Lazily initializes a set of `HomeCardModule`s by reflectively instantiating class names from a configuration array, and then uses a `FragmentTransaction` to add each module's card view to the UI layout","This method dynamically instantiates and initializes `HomeCardModule` classes specified in a resource array, adds them to a set, and then replaces fragments in the activity's layout with the views provided by these modules.","This method dynamically instantiates and initializes `HomeCardModule` classes specified in a resource array, adds them to a set, and then replaces fragments in the activity's layout with the views provided by these modules, logging the instantiation time for debugging purposes."
40,java,"Iterates through a list of appeared tasks and uses the `ActivityTaskManager` to remove any task that is in multi-window mode, logging it as a dangling task","This method iterates through a list of task appearance information, removes any multi-window tasks from the ActivityTaskManager, effectively cleaning up dangling tasks.",This method iterates through a list of task appearance information and removes any multi-window tasks from the ActivityTaskManager to clean up dangling tasks.
41,java,Parses the mode from the current Intent and sets the title for both the Activity and the CarUi toolbar using the string resource ID defined in that mode,"This method updates the application's mode based on the intent data, setting the title of both the activity and the toolbar accordingly.","This method updates the application's mode based on the intent data, setting the title of both the activity and the toolbar to the corresponding string resource ID."
42,java,"Lazily initializes and returns a `Chronometer` by finding it in the layout, while also finding and caching its associated separator view on the first call","This method lazily initializes and returns a `Chronometer` view and its separator from the layout, storing them in a private member variable for later use.","This method lazily initializes and returns a `Chronometer` view and its separator from the layout, storing them in a private member variable for subsequent use."
43,java,"Lazily inflates a media layout from a `ViewStub`, finds and caches its title and subtitle views, initializes its media playback controls bar via a presenter, and returns the inflated view","This method lazily initializes and returns a `View` representing the media layout, inflating it from a `ViewStub` if it doesn't already exist, and setting up its title, subtitle, and playback controls bar.","This method lazily initializes and returns a `View` representing the media layout, inflating it from a `ViewStub` if it doesn't already exist, and initializing the presenter with the media control bar."
44,java,"If a valid `Drawable` and card size are provided, this method scales the image to a square based on the card's largest dimension, blurs it, and sets the resulting bitmap as the animated, visible card background","This method updates the background image of a card view by scaling a provided drawable to a square size, blurring it, and setting it as the card's background image.","This method updates the card's background image by scaling a provided drawable to a square size, blurring it, and setting it as the card's blurred background image."
45,java,Makes the media layout view visible and updates its title and subtitle with the provided text,This method updates the visibility and text content of a media layout view with a given title and subtitle.,This method updates the visibility and text content of a media layout view to display a given title and subtitle.
46,java,"If the content's start time is positive, this method makes a chronometer and a separator visible, sets the chronometer's base time, and starts it; otherwise, it hides both views","This method updates the visibility and state of a chronometer and separator based on the start time provided in a descriptive text view, displaying the chronometer if the start time is positive and hiding it otherwise.","This method controls the visibility of a chronometer and separator based on the start time of a descriptive text view, displaying a countdown timer if the start time is positive and hiding it otherwise."
47,java,Registers a member callback to the provided `Call` object after verifying it is not null,"Registers a callback to a newly added `Call` object, ensuring the callback is only registered if the `Call` object is not null.","Registers a callback to a newly added `Call` object, ensuring the callback is only registered if the `Call` object is not null."
48,java,"Handles the removal of a call by clearing the current call and card content, notifying the presenter of the model update, and unregistering its callback from the call object for cleanup","This method handles the removal of a call by clearing related data, notifying the presenter of the update, and unregistering a callback associated with the removed call.","This method handles the removal of a call by clearing related data, notifying the presenter of the update, and unregistering a callback associated with the removed call to prevent further updates."
49,java,"Formats a phone number to create a new `DescriptiveTextWithControlsView` with call details and controls, then notifies the presenter that the model has been updated","This method formats a phone number, updates a view with the formatted number and associated call information, and notifies a presenter of the model update.","This method formats a phone number, updates a view with the formatted number and associated call information, and notifies a presenter of the model update."
50,java,"Initializes mute, end call, and dialpad buttons by assigning each an icon and a click listener to toggle mute status, disconnect the current call, and delegate to an onClick handler, respectively","This method initializes the mute, end call, and dialpad buttons for an in-call UI by creating `Control` objects that handle corresponding actions when clicked.","This method initializes the mute, end call, and dialpad buttons for an in-call UI by creating `Control` objects that handle corresponding actions when clicked, using drawable resources and lambda expressions for button functionality."
53,cpp,"When a new listener is added, this callback immediately notifies it with an `AVAILABLE` status if the D-Bus connection is already active",This function notifies a listener of the availability status (AVAILABLE) if a new listener is added and the DBus connection is active.,"This function notifies a listener of the availability status (AVAILABLE) if a new listener is added and the DBus connection is active, ignoring the subscription details."
54,cpp,"Atomically registers a given thread to be joined later by adding it to a list, but only if its associated connection is active and the thread is not already present in the list","The function `joinOnExit` associates a given thread with a connection and adds it to a vector of threads to be joined upon program exit, ensuring all threads are joined before the program terminates.","The function `joinOnExit` associates a given thread with a connection and adds it to a vector of threads to be joined upon program exit, ensuring all threads are joined before the program terminates."
56,cpp,A callback function that handles the removal of a D-Bus watch by stopping its monitoring and disassociating the high-level wrapper object from the underlying `libdbus` watch,This function handles the removal of a DBus watch by stopping its monitoring if it's ready and clearing its associated data.,This function handles the removal of a DBus watch by stopping its monitoring if it's ready and clearing its associated data within the DBus connection.
57,cpp,"Handles the toggling of a D-Bus watch by creating a C++ wrapper object for it on first use, and then starting or stopping its monitoring based on its readiness status","This function toggles the watch state of a DBus connection based on the provided DBus watch object and associated context, either starting or stopping the watch and managing the underlying DBus watch data accordingly.","This function toggles the watch state of a DBus connection, starting or stopping the watch and managing the underlying DBus watch data based on the provided DBus watch object and associated context."
58,cpp,"Lazily initializes and returns a thread-safe, singleton `DBusObjectManager` instance using a double-checked locking pattern","This function lazily initializes and returns a shared pointer to a `DBusObjectManager` object, ensuring thread-safe access via a mutex.","This function lazily initializes and returns a shared pointer to a `DBusObjectManager` object, ensuring thread-safe access via a mutex and memoization."
59,cpp,"Decrements a reference count for a given D-Bus service name, releasing it from the bus if the count reaches zero, and returns `true` on success or `false` if the name was not being tracked","Releases a service name from the D-Bus connection, decrementing its usage count or releasing it if the count reaches zero.","Releases a service name from the D-Bus connection, decrementing its usage count or releasing it if the count reaches zero, and returns a boolean indicating success."
60,cpp,"Steals the reply from a `DBusPendingCall` handle and wraps it in a new `DBusMessage` object that takes ownership, returning an empty message if the input handle is null","This function converts a raw libdbus pending call reply to a DBusMessage object, handling null pointers and managing reference counts.","This function converts a libdbus pending call reply to a DBusMessage object, handling null pointers and optionally increasing the reply's reference count."
61,cpp,Thread-safely deallocates a collection of asynchronous D-Bus message reply handlers by moving them from a protected member list to a local copy before iterating through and deleting each one,"This function safely deletes all pending asynchronous message reply handlers by moving them from a protected vector to a local vector, then iterating and deleting them to prevent race conditions.","This function safely deletes all pending asynchronous message reply handlers by moving them from a protected vector to a local vector, then iterating and deleting them to prevent race conditions and memory leaks."
62,cpp,Thread-safely notifies all registered signal handlers of a successful state by invoking their `onSpecificError` callback with a `SUCCESS` status for each associated signal tag,"The function iterates through signal handlers and their associated error tags, calling the `onSpecificError` method on each handler to signal successful completion of a specific error state.","The function iterates through signal handlers and their associated error tags, calling the `onSpecificError` method on each handler to signal successful completion of a specific error state."
63,cpp,"Thread-safely removes a connection, identified by its ID, from an internal collection if it exists","The `Factory::releaseConnection` method removes a connection from the `connections_` map, ensuring thread safety with a recursive mutex lock.","The `Factory::releaseConnection` method removes a connection from the `connections_` map, protecting access with a recursive mutex."
64,cpp,"Handles an incoming D-Bus signal by dispatching it to the appropriate handler for either ""InterfacesAdded"" or ""InterfacesRemoved"" events based on the message's member name","This code handles DBus messages related to instance availability status changes, dispatching them to the appropriate signal handler based on whether interfaces were added or removed.","This code handles DBus messages indicating changes in instance availability status, routing them to the corresponding signal handler for interfaces added or removed."
65,cpp,"Retrieves available service instances from a registry, translates the internal D-Bus representation into a vector of `DBusAddress` objects, and populates the provided output vector and status parameter","Retrieves available service instances from a DBus proxy and populates a vector with their addresses, returning a success status if successful.","Retrieves available service instances from a DBus proxy and populates a vector with their addresses, returning a success status if successful."
66,cpp,"Gets the availability status of a service instance by translating its identifier to a D-Bus address and querying a registry, setting the result and a success status in output parameters","The function `getServiceInstanceAvailabilityStatus` checks if a given DBus service instance is available by translating a CommonAPI address to a DBus address and querying the DBus registry, setting the `AvailabilityStatus` and `CallStatus` accordingly.","The function `getServiceInstanceAvailabilityStatus` determines the availability of a DBus service instance by translating a CommonAPI address to a DBus address and querying the DBus registry, updating the `AvailabilityStatus` and `CallStatus` accordingly."
67,cpp,"Handles a D-Bus ""InterfacesRemoved"" signal by parsing the object path and interface names, and for any interface matching the one being observed, notifies listeners that its status has changed to ""NOT_AVAILABLE""","The function `onInterfacesRemovedSignal` handles the `InterfacesRemoved` signal from a DBus bus, removing specified interfaces from the local proxy and notifying listeners of the interface's unavailability if the removed interface matches the observed interface.","The function `onInterfacesRemovedSignal` handles the `InterfacesRemoved` signal from a DBus bus, removing specified interfaces from the local proxy and notifying listeners of the interface's unavailability if the removed interface matches the observed interface."
68,cpp,Notifies listeners of an interface's availability change by translating its D-Bus path and name into a generic CommonAPI address,The function `notifyInterfaceStatusChanged` translates a DBus address to a CommonAPI address and notifies listeners of a change in the availability status of a specific DBus interface.,The function `notifyInterfaceStatusChanged` translates a DBus address to a CommonAPI address and notifies listeners of a change in the availability status of a specific DBus interface.
69,cpp,"Thread-safely schedules a task on the main event loop to notify a newly added listener, passing along its specific subscription details",The function `onListenerAdded` registers a listener with a DBus proxy and pushes a function to the main loop to notify the listener when a specific subscription receives updates.,The function `onListenerAdded` registers a listener with a DBus proxy and schedules a function to notify the listener when a specific subscription receives updates via the main loop.
70,cpp,Thread-safely removes all listeners from an internal collection that match the provided `Subscription` identifier,"This function removes a listener from a set of listeners associated with a specific subscription, ensuring thread safety with a mutex.","This function removes a listener from a set of listeners associated with a specific subscription, ensuring thread safety with a mutex and iterating through the set to find and remove the matching listener."
71,cpp,Delegates the registration of a signal state handler for a specific subscription to the underlying connection object,The `addSignalStateHandler` method registers a signal handler with the DBus proxy connection for a specific subscription.,The `addSignalStateHandler` method registers a signal handler with the DBus proxy connection for a specific subscription.
72,cpp,Handles the result of an asynchronous service instance query by translating the `DBusAddress` list to a string list on success and invoking a final callback with the call status and the translated list,"This function handles the asynchronous callback for retrieving available instances of a DBus proxy, translating the DBus addresses to strings and passing the status and instances to the provided callback function.","This function handles the asynchronous callback for retrieving available instances of a DBus proxy, translating the DBus addresses to strings and passing the status and instances to the provided callback function."
73,cpp,"Dispatches an incoming `DBusMessage` to a registered handler based on its object path and interface, or handles it as a standard introspection request, returning `true` if the message was processed","The `handleMessage` function dispatches incoming DBus messages to registered interface handlers based on the object path and interface name, or handles introspection requests if no handler is found.","The `handleMessage` function dispatches incoming DBus messages to registered interface handlers based on the object path and interface name, or handles introspection requests if no handler is found, returning a boolean indicating whether the message was handled."
74,cpp,"Registers a D-Bus interface handler for a specific path, returning `false` if the exact handler is already registered, but allowing idempotent registration for standard `ObjectManager` and `Properties` interfaces","The function `addDBusInterfaceHandler` adds a `DBusInterfaceHandler` to a table of registered objects, checking for duplicates and handling special cases for `org.freedesktop.DBus.ObjectManager` and `org.freedesktop.DBus.Properties` interfaces.","The function `addDBusInterfaceHandler` adds a `DBusInterfaceHandler` to a table of registered objects, preventing duplicates and allowing special handling for `org.freedesktop.DBus.ObjectManager` and `org.freedesktop.DBus.Properties` interfaces."
75,cpp,"Registers a given `DBusInterfaceHandler` to a specific path in a table, returning `true` on success and `false` if the handler is already registered for that path","The function `addToRegisteredObjectsTable` adds a `DBusInterfaceHandler` to a table of registered objects, keyed by `DBusInterfaceHandlerPath`, ensuring that the same handler is not added multiple times for a given path.","The function `addToRegisteredObjectsTable` adds a `DBusInterfaceHandler` to a table of registered objects, keyed by `DBusInterfaceHandlerPath`, and prevents duplicate entries for the same handler and path."
78,c,"Constructs and sends a 2-byte UDS positive response to an ECU Reset request, containing the positive response SID and the echoed reset type, over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","This function sends a positive response to an ECU reset request via ISOTP, using a predefined SID and the provided reset type.","This function sends a positive response to an ECU reset request via ISOTP, using a predefined SID and the provided reset type, and logs an error if the transmission fails."
79,c,"Processes a UDS ECU Reset request, validating the 2-byte message length, sending a positive response before triggering a system reboot for a 'hard reset', and sending a negative response for either an incorrect length or an unsupported reset sub-function","This function handles a UDS ECU reset request, responding with an error if the message length is incorrect, performing a hard reset if requested, or returning a negative response if the reset type is unsupported.","This function handles a UDS ECU reset request, responding with an error if the message length is incorrect, performing a hard reset if requested, or returning a negative response if the reset type is unsupported, and then rebooting the system after a hard reset."
80,c,"Constructs and sends a 4-byte UDS positive response for a ""Request Download"" service, specifying a maximum block length of 0x00D2, over a CAN bus using the ISO-TP protocol and logging an error on failure","This function sends a positive response to a request download message via ISOTP, including a block size of 258 bytes, to a specified CAN ID.","This function sends a positive response to a request download message via ISOTP, including a block size of 258 bytes, to a specified CAN ID, logging an error if the transmission fails."
81,c,"Constructs and sends a 2-byte UDS positive response for a Transfer Data request (containing the positive SID and the block sequence counter) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","This function sends a transfer data response message via ISOTP to a specified CAN ID, including a positive SID and a block sequence counter in the payload.","This function sends a transfer data response message via ISOTP to a specified CAN ID, including a positive SID and a block sequence counter in the payload, logging an error if the transmission fails."
82,c,"Constructs and sends a 5-byte UDS positive response for the Routine Control service (containing the routine control type, routine ID, and a result code) over a CAN bus via ISO-TP, logging an error if the transmission fails","This function sends a routine control result message to a specified CAN ID using the ISOTP protocol, logging an error if the transmission fails.","This function sends a routine control result message to a specified CAN ID using the ISOTP protocol, logging an error if the transmission fails."
83,c,"Constructs and sends a 1-byte UDS positive response for a Transfer Exit request (containing the request SID + 0x40) over a CAN bus using the ISO-TP protocol, logging an error if the transmission fails","This function sends a positive response to a transfer exit request via ISOTP, using a predefined SID and error handling for transmission failures.","This function sends a positive response to a transfer exit request via ISOTP, using a predefined SID and logging errors if the transmission fails."
85,c,"Searches a predefined `id_mapping` array for a given CAN ID and returns its corresponding index, or `0xff` if the ID is not found","This inline function maps a CAN identifier to a corresponding index within a predefined mapping table, returning the index if found or a default value if not.","This inline function maps a CAN identifier to a corresponding index within a predefined mapping table, returning the index if found or 0xff if not."
86,c,"Disables a specific LIN-to-CAN receive filter by clearing its callback pointer, or disables all filters if a special ID is passed, while ignoring out-of-bounds IDs","This function removes a specified incoming message callback for a given filter ID from a LIN2CAN device's data structure, or clears all incoming callbacks if the filter ID is equal to the length of the translatable addresses array.","This function removes a specified incoming message callback for a given filter ID from a LIN2CAN device's data structure, or clears all incoming callbacks if the filter ID represents the end of the translatable addresses array."
87,c,"A LIN driver callback that retrieves a pending outgoing frame from a message queue, copies its data for transmission, invokes a frame-specific completion callback, and returns a boolean indicating if a frame was successfully prepared","This function retrieves a LIN frame from a queue, copies it to a provided `lin_frame` structure, and then calls a user-defined callback function to transmit the frame via CAN.","This function retrieves a LIN frame from a queue, copies it to a provided `lin_frame` structure, and then calls a user-defined callback function to transmit the frame via CAN."
88,c,"Acts as a LIN-to-CAN gateway callback, translating an incoming LIN frame by using its first data byte's top two bits as an index to find a target CAN ID, constructing a new CAN frame with the translated ID and a payload where those index bits are masked out, and finally invoking a registered handler with the resulting CAN frame",This function translates incoming LIN frames to CAN frames based on a mapping table and calls a registered callback function with the translated CAN frame and user data.,"This function translates incoming LIN frames to CAN frames based on a mapping table and calls a registered callback function with the translated CAN frame and user data, handling invalid LIN IDs and skipping callbacks if none are registered."
89,c,"Initializes a high-voltage shield by configuring its Output Enable (OE) GPIO, writing a zeroed state to its hardware registers, and then setting the OE pin to enable the device's outputs, logging errors at each step","This function initializes the HV shield device by configuring the output enable GPIO pin, initializing the device's registers, updating the shield's state, and enabling the output.","This function initializes the HV shield device by configuring the output enable GPIO pin, initializing the device's registers, updating the shield's state, and enabling the output."
90,c,"Sets the gain for a specified DAC (0 or 1) on a high-voltage shield by updating its value in a cached data structure and then calling an update function to write the new configuration to the hardware, returning an error for an invalid DAC index",This function sets the digital-to-analog converter (DAC) gain for a specified DAC channel (0 or 1) within an HV shield device and updates the device's internal state.,This function sets the digital-to-analog converter (DAC) gain for a specified DAC channel (0 or 1) within an HV shield device and updates the device's internal registers and state.
91,c,"Enables or disables a specific GPIO output on a high-voltage shield by validating the pin index (0-31), remapping it via a nibble-swap, modifying a cached register bit, and then calling a helper function to write the update to the hardware","This function enables or disables a GPIO output pin on an HV shield device by manipulating a bitfield within a register, after validating the input index and adjusting it based on its position within the register.","This function enables or disables a GPIO output pin on an HV shield device by manipulating a bitfield within a register, after validating the input index and adjusting it to map to the correct bit position within the register."
92,c,"A callback function that forwards a received CAN frame from a source device to a destination device (passed via `user_data`) using a non-blocking send operation, logging a debug message on successful queuing or a warning on failure","This function routes CAN frames received on a specific device to another specified device using the `can_send` API, logging debug and warning messages for successful routing and transmission failures, respectively.","This function routes CAN frames received on a specific device to another specified device using the `can_send` API, logging debug messages for successful routing and warning messages for transmission failures."
93,c,"Configures a CAN message router by iterating through an array of routing entries, adding a receive filter to a source CAN interface for each entry that uses a callback to forward matching frames to a destination interface, and returns an error if any filter registration fails","The `can_router_register` function iterates through a list of CAN router entries, adding each entry's filter to the CAN bus to route incoming messages to a specified callback function and destination.","The `can_router_register` function registers a set of CAN router entries by adding filters to the CAN bus, enabling the routing of incoming messages to a specified callback function and destination for each entry."
94,c,"Initializes the CAN router by iterating through all statically-defined routing tables found in a dedicated linker section and registering their entries, returning an error if any registration fails",This function initializes the CAN router by iterating through a predefined table of CAN router entries and registering each entry with the CAN router system.,This function initializes the CAN router by registering each entry from a predefined table of CAN router entries with the CAN router system.
95,c,"Iterates through a pre-configured list of low-voltage GPIOs, setting the state of each pin enabled by an input mask to the corresponding bit in a value word, logging and returning an error if any underlying GPIO operation fails","This function sets the specified GPIO pins within a given port to a specific value, iterating through a configuration structure to apply the changes while handling potential errors.","This function sets the specified GPIO pins within a given port to a specific value, iterating through a configuration structure to apply the changes and returning an error code if any GPIO setting fails."
96,c,"Populates an output parameter with the number of available Abstract LIN callback slots, calculated by subtracting the used count from a configured maximum, returning an error if the parameter is a null pointer",This function calculates and returns the number of available callback slots in an abstract LIN bus controller device.,This function determines and returns the number of unused callback slots available in an abstract LIN bus controller device.
97,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure",This function registers a callback function to handle incoming LIN messages with a specific frame ID and size within a device's abstract LIN data structure.,"This function registers a callback function to handle incoming LIN messages with a specific frame ID and size within a device's abstract LIN data structure, ensuring the callback and frame parameters are valid."
98,c,"Registers a user-provided callback function for a specific LIN frame ID by validating the ID (0-0x3F) and data size (1-8 bytes), allocating a free callback slot, and storing the callback details, returning an error on invalid parameters or allocation failure","This function registers an outgoing callback function for a specific LIN frame ID and size within a device's abstract LIN data structure, handling error conditions and allocating a callback slot.","This function registers an outgoing callback function for a specific LIN frame ID and size within a device's abstract LIN data structure, allocating a callback slot and returning an error code if registration fails."
99,c,"Sets the active LIN schedule table by index, first validating the index and then using a semaphore to thread-safely update the scheduler's state and reset its entry pointer to the start of the new table","The function `abstract_lin_scheduler_set_active_table` activates a specified table within a LIN scheduler, ensuring exclusive access via a semaphore and resetting the table entry index to the beginning.","The function `abstract_lin_scheduler_set_active_table` activates a specified table within a LIN scheduler, ensuring exclusive access via a semaphore and resetting the table entry index to the beginning, returning an error if the table index is out of bounds."
100,c,"Disables a LIN scheduler by first checking if it's already stopped, then taking a semaphore to safely wait for the current operation to complete before setting the active schedule table index to -1","This function disables a LIN scheduler by setting its current table index to -1 and releasing a semaphore, ensuring no further scheduling occurs.","This function disables a LIN scheduler by setting its current table index to -1 and releasing a semaphore, preventing further scheduling operations."
