id,language,reference,generated,generated_rci
1,python,Checks if a data type is a subtype of a specified base type,"""Checks if a data type is a subtype of a specified base type""","""Determines if a given data type is a subtype of a specified base type."""
2,python,Validates if a value conforms to a datatype specified by a string,"""Validates if a value conforms to a specified data type.""","""Checks if a value matches a specified data type."""
3,python,Checks if a value or list of values is a valid integer for a specified bit-width and signedness.,"""Checks if a value or list of values are within the range of a signed or unsigned integer with a specified number of bits.""","""Checks if a value or list of values are within the range of a signed or unsigned integer with a specified number of bits."""
4,python,Looks up a type definition tuple by its string name from a list of types,"""Retrieves a tuple containing type information (name, constructor, and subtypes) for a given datatype string, or None if not found.""","""Retrieves type information (name, constructor, and subtypes) for a given datatype string from a predefined list, or None if not found."""
5,python,Finds all datatypes within the current namespace and any parent namespaces of a given FQN,"""Retrieves a dictionary of namespaced datatypes based on a fully qualified name prefix.""","""Extracts namespaced datatypes from a fully qualified name prefix."""
6,python,Traverses a VSS tree to count the occurrences and collect the fully qualified paths of each node name,"""Recursively populates a dictionary with unique node names and their paths within a VSS node tree.""","""Recursively populates a dictionary with unique node names and their paths within a VSS node tree, incrementing a counter for each occurrence."""
7,python,Converts a string-based data type definition into an ApiGearType object,"""Maps a string representation of a data type to an ApiGearType object, handling arrays and basic types.""","""Converts a string representation of a data type to an ApiGearType object, handling arrays and basic types."""
8,python,Generates an ApiGear property from a VSS (Vehicle Signal Specification) node,"""Generates an ApiGearProperty object from a VSSNode and its datatype, handling unsupported datatypes.”","""Generates an ApiGearProperty object from a VSSNode and its datatype, returning None if the datatype is unsupported.”"
9,python,Recursively resolves and flattens a specification file and all its include dependencies,"""Recursively gathers VSpec objects from a specification file and its included files.""","""Recursively gathers VSpec objects from a specification file and its included files, resolving paths to those files."""
10,python,Loads and merges multiple VSpec files from specified paths into a single VSpec object,"""Loads and merges VSpec objects from specified files and directories, optionally identifying the loaded specs.""","""Loads and merges VSpec objects from specified files and directories, optionally identifying the loaded specs and raising an exception if no specs are found."""
11,python,"Recursively updates a dictionary with values from another, merging nested dictionaries","""Recursively updates a dictionary with another dictionary, merging nested dictionaries.”","""Recursively updates a dictionary with another dictionary, merging nested dictionaries and overwriting non-dictionary values.”"
12,python,Validates a constant unique identifier (constUID) is a 32-bit hexadecimal string,"""Validates if a given string matches the format of a constant UID (e.g., '0xXXXXXXXX').""","""Validates if a given string matches the format of a constant UID (e.g., '0xXXXXXXXX')."""
13,python,"Initializes and attempts to resolve a VSS raw model, returning the unresolved model on failure","""Retrieves a VSSRaw object from a dictionary, resolving it and handling potential validation errors.""","""Retrieves and resolves a VSSRaw object from a dictionary, logging incomplete instances."""
14,python,Validates that a list of strings are all known datatypes,"""Validates that a list of data types are present in a predefined list of valid data types.""","""Validates that a list of data types contains only valid data types."""
15,python,"Renders a VSS tree into a string, displaying specified attributes for each node","""Generates a string representation of a VSSNode tree, including specified attributes and their values.”","""Generates a formatted string representation of a VSSNode tree, including specified attributes and their values.”"
16,python,Finds the root of a VSS instance by recursively traversing up the parent hierarchy,"""Recursively traverses up the tree to find the root instance of a VSSNode.""","""Recursively finds the root instance of a VSSNode within a VSSDataBranch."""
17,python,Counts the depth of a chain of instance branches,"""Recursively counts the depth of instance children within a VSSDataBranch.""","""Recursively counts the depth of instance children within a VSSDataBranch."""
18,python,Finds all child node IDs that belong to a specific parent name,"""Finds the IDs of nodes whose expected parent is a given name.""","""Finds the IDs of nodes whose expected parent matches a given name."""
19,python,"Gets an attribute, returning a default value if the attribute is missing or its value is None","""Safely retrieves an attribute from an object, returning a default value if the attribute is missing.""","""Safely retrieves an attribute from an object, returning a default value if the attribute is not found."""
20,python,Generates a Protobuf schema from a Vehicle Signal Specification (VSS) tree,"""Generates a .proto file from a VSS signal tree, including necessary imports and message definitions.""","""Generates a .proto file from a VSS signal tree, including necessary imports and message definitions for vehicle signals."""
21,python,Groups all leaf VSS branch instances by the fully qualified name of their original branch definition,"""Collects the names of all instances under a given root node in a VSS tree structure.""","""Extracts a dictionary mapping instance root fully qualified names to lists of their instance names within a VSS tree."""
22,python,Determines if a VSS node is a leaf based on its data type,"""Checks if a VSS node represents a leaf node containing data.""","""Checks if a VSS node is a leaf node with a data datatype."""
23,python,Checks if a VSS node is a branch that is not an instance,"""Checks if a VSS node represents a branch with no instance data.""","""Checks if a VSS node is a branch and does not contain instance data."""
24,python,Checks if a VSS node represents a branch instance,"""Checks if a VSSNode represents an instance of a VSSDataBranch.""","""Checks if a VSSNode's data is a VSSDataBranch instance."""
25,python,FNV-1 32-bit hashing algorithm for a byte sequence,"""Calculates a 32-bit FNV-1a hash value for a given byte string.""","""Computes a 32-bit FNV-1a hash of a byte string."""
26,java,Lazily initializes and returns an audio card presenter with data models for media and in-call status,"""Lazily initializes and returns an audio card presenter with data models for media and in-call status""","""Lazily initializes and returns an audio card presenter, providing in-call status and optionally media data from a ViewModel"""
27,java,Lazily initializes and returns the audio card view fragment,"""Lazily initializes and returns an audio fragment, setting and getting the presenter for view updates.""","""Lazily initializes and returns an audio fragment, associating it with a presenter for view updates."""
28,java,Inflates a card fragment's layout and initializes its view components,"""Inflates a layout to create a view for a card fragment, finding the card title and icon elements.""","""Inflates a layout to create a view for a card fragment, retrieving references to the card title and icon."""
29,java,"Sets a button's icon and click listener to make it visible, or hides it if no content is provided","""Updates the visibility and content of an image button based on a descriptive text with controls object.""","""Updates an image button's icon and click listener based on a descriptive text with controls object, also managing its visibility."""
30,java,Lazily inflates and initializes a descriptive text layout view on first access,"""Lazily initializes and returns a view containing descriptive text elements, including title, subtitle, optional image, and tap-for-more text.""","""Lazily initializes and returns a view containing descriptive text elements, including title, subtitle, optional image, and tap-for-more text, from a ViewStub."""
31,java,Updates and displays a card header view with a new title and icon,"""Updates the header view of a card with the provided title and icon on the main thread.""","""Updates the card header view with the provided title and icon, ensuring the update happens on the main thread."""
32,java,Lazily inflates and returns a text block layout view from a ViewStub,"""Lazily initializes and returns a view for displaying text blocks, including a tap-for-more indicator.""","""Lazily initializes and returns a view containing a text block and a tap-for-more indicator."""
33,java,Gets the media browser service component from a given package,"""Retrieves the default media browsing service component name for a given package using the system's package manager.""","""Retrieves the default media browsing service component name for a given package by querying the system's package manager."""
34,java,Determines if an app component should be launchable by filtering against a hide list and de-duplicating media services,"""Determines if a component should be added to launchables based on app hiding, custom media components, and component type.""","""Determines if a component should be added to launchables based on app hiding, custom media components, and component type."""
35,java,Sets the media source and finishes the current activity,"""Selects a media source and finishes the activity if it is one, handling potential connection errors.""","""Selects a media source and finishes the activity, handling potential connection errors."""
36,java,"Safely checks if a given activity is distraction-optimized, handling potential connection errors","""Checks if a given activity within an application is distraction optimized using the CarPackageManager.""","""Determines if an activity is distraction optimized by querying the CarPackageManager, handling potential CarNotConnectedException."""
37,java,"Asynchronously creates, configures, and adds a task view to a parent view group","""Creates and configures a TaskView within a parent ViewGroup using a TaskViewManager and a listener for task interactions.""","""Creates and configures a TaskView within a parent ViewGroup using a TaskViewManager and a listener for task interactions."""
38,java,"Retrieves a specific, configured Intent for the default maps app, falling back to a generic one","""Retrieves a preferred maps intent from configuration, falling back to the default maps activity if no preferred activity is found or valid.""","""Retrieves a preferred maps intent from configuration, prioritizing user-specified apps and falling back to the default maps activity if none are found or valid."""
39,java,Dynamically instantiates and displays home card modules defined in a configuration resource,"""Dynamically initializes and adds home card modules to the fragment manager based on configured class names.""","""Dynamically initializes and adds home card modules to the fragment manager based on configured class names, logging initialization times for debugging."""
40,java,Removes dangling tasks that are in multi-window mode,"""Removes dangling tasks with multi-window mode from the activity task manager.""","""Removes dangling multi-window tasks from the activity task manager."""
41,java,Updates the mode from the intent and sets the UI title accordingly,"""Parses the intent to determine the current mode and updates the title of the activity and toolbar accordingly.""","""Parses the intent to determine the current mode and updates the activity and toolbar titles."""
42,java,Lazily initializes and returns the Chronometer view on first access,"""Lazily initializes and returns a chronometer view and its separator from a layout.""","""Lazily initializes and returns a chronometer view and its separator from a layout."""
43,java,Blurs and scales an image to set as a card's visible background,"""Lazily initializes and returns a view for displaying media layout elements, including title, subtitle, and playback controls.”","""Lazily initializes and returns a view for displaying media layout elements, including title, subtitle, and playback controls, using a ViewStub.”"
44,java,Blurs and scales an image to set as a card's visible background,"""Scales and blurs a drawable image to create a background for a card view.""","""Scales and blurs a drawable image to create a blurred background for a card view."""
45,java,Makes the media view visible and sets its title and subtitle,"""Updates the visibility and text content of a media layout view with a given title and subtitle.""","""Updates a media view's visibility and text fields with a title and subtitle."""
46,java,"Starts and shows a chronometer if a start time is positive; otherwise, hides it","""Updates the visibility and state of a chronometer to display elapsed time based on a provided start time.""","""Updates the visibility and state of a chronometer to display elapsed time based on a provided start time, or hides it if no start time is available."""
47,java,Registers a callback on a newly added call,"""Registers a callback to monitor a newly added call.""","""Registers a callback to monitor a newly added call."""
48,java,Resets state and unregisters the callback when a call is removed,"""Removes a call, clears associated data, updates the presenter, and unregisters the callback.""","""Removes a call, clears associated data, updates the presenter, and unregisters the callback from the call."""
49,java,Updates the ongoing call view model with a formatted phone number and UI controls,"""Updates the card content with a formatted phone number and associated controls, then notifies the presenter.""","""Updates the card content with a formatted phone number, elapsed time, and call controls, then notifies the presenter."""
50,java,"Initializes the Mute, End Call, and Dialpad buttons for an in-call user interface","""Initializes mute, end call, and dialpad buttons with associated actions for controlling audio and call functions.""","""Initializes mute, end call, and dialpad buttons with associated actions for controlling audio and call functions within an in-call UI."""
51,cpp,Sends a D-Bus message over the connection and returns a boolean indicating success,"""Sends a D-Bus message over the connection and returns a boolean indicating success""","""Sends a D-Bus message over the connection, returning true on success and false otherwise."""
52,cpp,Creates a D-Bus signal message addressed to a specific client,"""Creates a D-Bus signal message with the specified object path, interface name, signal name, and destination.""","""Creates a D-Bus signal message with the specified object path, interface name, signal name, and destination."""
53,cpp,Notifies a newly added listener if the D-Bus connection is already available,"""Notifies a listener of the availability status if the D-Bus connection is connected.""","""Notifies a listener of the availability status if the D-Bus connection is connected."""
54,cpp,"For an active connection, adds a thread to a list to be joined on exit, avoiding duplicates","""Associates a thread with a connection for cleanup on exit.""","""Associates a thread with a connection to be cleaned up on exit."""
55,cpp,A callback that wakes up a main loop context if it has not been destroyed,"""Wakes up the main loop context by calling its wakeup method if the context is valid.""","""Wakes up the main loop context by calling its wakeup method if the context is valid and locked."""
56,cpp,A callback to stop monitoring a D-Bus watch and clean up its associated data,"""Handles the removal of a D-Bus watch, stopping it if ready and clearing its associated data.""","""Handles the removal of a D-Bus watch, stopping it if ready and clearing its associated data."""
57,cpp,"A libdbus callback that creates, starts, or stops a D-Bus watch based on its readiness status","""Handles D-Bus watch events, creating or updating a DBusWatch object and starting/stopping its monitoring based on readiness.""","""Handles D-Bus watch events, creating or updating a DBusWatch object and starting/stopping its monitoring based on readiness and context."""
58,cpp,Thread-safely gets or creates a singleton DBusObjectManager instance using double-checked locking,"""Returns a shared pointer to a DBusObjectManager, lazily initializing it if it doesn't already exist.""","""Returns a shared pointer to a DBusObjectManager, lazily initializing it if it doesn't already exist and thread-safely."""
59,cpp,Performs a reference-counted release of a D-Bus service name,"""Releases a D-Bus service name, decrementing its count or removing it if the count reaches zero.""","""Releases a D-Bus service name by decrementing its count or removing it if the count reaches zero, handling potential D-Bus errors."""
60,cpp,Steals the reply from a pending D-Bus call and wraps it in a DBusMessage object,"""Converts a libdbus pending call to a DBusMessage object and returns it.""","""Converts a libdbus pending call to a DBusMessage object, returning the message."""
61,cpp,Safely deletes all pending asynchronous handlers from a shared list,"""Deletes all pending asynchronous D-Bus message reply handlers.""","""Deletes all pending asynchronous D-Bus message reply handlers to prevent memory leaks."""
62,cpp,Reports a success status to all registered signal handlers for their associated tags,"""Iterates through registered signal handlers and calls their onSpecificError method for each received signal tag.""","""Iterates through registered signal handlers and calls their onSpecificError method for each received signal tag, indicating successful signal reception."""
63,cpp,Thread-safely removes a connection from a collection if it exists,"""Removes a connection from the factory's internal map of connections, protected by a mutex.""","""Removes a connection from the factory's internal map of connections, ensuring thread safety with a mutex."""
64,cpp,Dispatches D-Bus signals for interface addition or removal to specific handlers,"""Handles D-Bus signals for interface availability changes, dispatching to the appropriate event handler.”","""Handles D-Bus signals indicating interface additions or removals, dispatching to the appropriate event handler.”"
65,cpp,Retrieves the addresses of available service instances from a D-Bus registry,"""Retrieves available service instances from the DBus registry and populates a vector with their addresses.""","""Retrieves available service instances from the DBus registry and populates a vector with their addresses, returning a success status."""
66,cpp,Queries a D-Bus registry to determine if a specific service instance is available,"""Retrieves the availability status of a D-Bus service instance and populates the provided status and call status objects.""","""Retrieves the availability status of a D-Bus service instance, translating a local address to a D-Bus address, and populating the provided status and call status objects."""
67,cpp,Notifies that a service is unavailable when its corresponding D-Bus interface is removed,"""Handles the DBus signal indicating interfaces have been removed, updating the availability status of observed interfaces.""","""Handles a DBus signal indicating interfaces have been removed, updating the availability status of observed interfaces and notifying listeners."""
68,cpp,Notifies CommonAPI listeners of a D-Bus interface's availability status change,"""Translates a D-Bus address to a common API address and notifies listeners of an interface status change.""","""Translates a D-Bus address to a common API address and notifies listeners of an interface availability status change."""
69,cpp,Schedules an asynchronous notification of the current proxy status for a newly added listener,"""Registers a listener with a subscription and schedules a function to notify it when the proxy status changes.""","""Registers a listener with a subscription and schedules a function to notify it when the proxy status changes via the main loop."""
70,cpp,Removes all listener entries that match a given subscription in a thread-safe manner,"""Removes a listener from the list of listeners for a given subscription.""",Removes a listener from the list of listeners associated with a subscription.
71,cpp,Forwards the addition of a D-Bus signal state handler to the underlying connection object,"""Adds a D-Bus signal handler to the connection for a specific subscription.""",Adds a D-Bus signal handler to the connection for a specific subscription.
72,cpp,Callback to translate available D-Bus service instance addresses to strings and forward the result,"""Handles the asynchronous callback for retrieving available service instances, translating the results and passing them to the provided callback.”","""Handles the asynchronous callback for retrieving available service instances, translating the results and passing them to the provided callback, indicating success or failure.”"
73,cpp,Routes a D-Bus message to a registered handler or handles standard introspection requests,"""Handles incoming D-Bus messages by routing them to registered interface handlers or processing introspectable interface messages.""","""Handles incoming D-Bus messages by routing them to registered interface handlers or processing introspectable interface messages."""
74,cpp,"Adds a D-Bus interface handler to a path, preventing duplicate registration except for standard interfaces","""Adds a DBus interface handler to a table, checking for duplicates and handling special cases for ObjectManager and Properties interfaces.""","""Adds a DBus interface handler to a table, preventing duplicates and handling special cases for ObjectManager and Properties interfaces."""
75,cpp,"Registers a D-Bus handler for a specific path, preventing duplicates","""Adds a DBusInterfaceHandler to the registered objects table, preventing duplicates.""","""Adds a DBusInterfaceHandler to the registered objects table, or updates the list if the handler already exists."""
76,c,Sends a UDS negative response message containing the failed service ID and a negative response code,"""Sends a UDS negative response message containing the failed service ID and a negative response code”","""Sends a UDS negative response message containing the failed service ID and response code via ISOTP."""
77,c,Sends a UDS positive response for the Diagnostic Session Control service,"""Sends a UDS diagnostic session control response message with session type and timeout values.""","""Sends a UDS diagnostic session control response message containing the session type and P2/P2* timeout values."""
78,c,Sends a positive UDS response for the ECU Reset service,"""Sends a UDS positive response message indicating successful ECU reset with the specified reset type.""","""Sends a UDS positive response message indicating successful ECU reset with the specified reset type."""
79,c,"Handles a UDS ECU Reset request, supporting only the hard reset sub-function which reboots the system","""Handles an ECU reset request, performing a hard reset if requested and sending appropriate responses.”","""Handles an ECU reset request, performing a hard reset if requested and sending appropriate UDS responses.”"
80,c,"Sends a positive UDS response to a Request Download, specifying the maximum block length","""Sends a UDS positive response message indicating successful request download with a block size of 258 bytes.""","""Sends a UDS positive response message indicating successful request download with a block size of 258 bytes."""
81,c,Sends a UDS Transfer Data positive response containing the block sequence counter,"""Sends a UDS transfer data response message containing the block sequence counter.""","""Sends a UDS transfer data response message with the block sequence counter."""
82,c,Sends a UDS positive response for the Routine Control service containing a result code over ISO-TP,"""Sends a UDS routine control result message containing the routine ID and the result code.""","""Sends a UDS routine control result message containing the routine ID and the result code."""
83,c,Sends a UDS Transfer Exit positive response message via the ISO-TP protocol,"""Sends a UDS positive response message indicating successful transfer exit.""","""Sends a UDS positive response message for the transfer exit service."""
84,c,"Converts a raw integer gain value to a corresponding DAC gain enumeration, returning an error if unsupported","""Converts a raw gain value to a corresponding HV shield DAC gain enum value.""","""Converts a raw gain value to a corresponding HV shield DAC gain enum value, returning an error if the raw gain is unsupported."""
85,c,Finds the index of a given CAN ID in a mapping table,"""Maps a CAN identifier to an index within a lookup table, returning 0xff if not found.""","""Maps a CAN identifier to an index within a lookup table, returning 0xff if not found."""
86,c,"Removes a specific LIN-to-CAN receive filter, or all filters, by clearing the associated callback","""Removes a callback function for a specific LIN filter ID, effectively disabling message reception for that filter.""","""Removes a callback function for a specific LIN filter ID, disabling message reception for that filter."""
87,c,A LIN callback that dequeues a frame for transmission and executes its completion callback,"""Retrieves a LIN frame from a queue and forwards it to a CAN transmit callback function.""","""Retrieves a LIN frame from a queue and calls a CAN transmit callback function to send it."""
88,c,A callback that translates an incoming LIN frame to a CAN frame and invokes a registered handler,"""Translates incoming LIN frames to CAN frames and invokes registered callbacks for each translated CAN ID.""","""Translates incoming LIN frames to CAN frames and invokes registered callbacks for each translated CAN ID."""
89,c,Initializes a high-voltage shield by configuring its registers and enabling its output,"""Initializes the HV shield device by configuring the output enable pin, clearing registers, updating the shield state, and enabling the shield.""","""Initializes the HV shield device by configuring the output enable pin, clearing registers, updating the shield state, and enabling the shield."""
90,c,Sets the gain for a specified DAC on a high-voltage shield,"""Sets the DAC gain for a specific DAC channel (0 or 1) on the HV shield device.""","""Sets the DAC gain for a specific DAC channel (0 or 1) on the HV shield device, updating the device's configuration."""
91,c,"Sets a GPIO output enable state, remapping the pin index by swapping the 4-bit nibbles within its byte","""Enables or disables a GPIO output pin by setting the corresponding bit in the GPIO output register.""","""Enables or disables a GPIO output pin by setting or clearing the corresponding bit in the GPIO output register."""
92,c,A callback function that forwards a received CAN frame to another device,"""Routes CAN frames received on a device to another device using the `can_send` function.""","""Routes CAN frames received on a device to another device using the `can_send` function, logging debug and warning messages."""
93,c,Registers a set of rules to route CAN frames between specified interfaces,"""Registers a set of CAN router entries, adding RX filters for each entry to forward messages based on specified criteria.”","""Registers a set of CAN router entries, adding RX filters to forward messages based on specified criteria.”"
94,c,Initializes the CAN router by registering all statically-defined routing tables,"""Initializes the CAN router by registering entries from a predefined table.""","""Initializes the CAN router by registering entries from a predefined table of routing rules."""
95,c,Sets a masked group of GPIO pins to the states defined in a value bitmask,"""Sets the value of specified GPIO pins within a hardware voltage shield configuration.""","""Sets the value of specified GPIO pins based on a mask and value, using a hardware voltage shield configuration."""
96,c,Gets the number of available LIN callback slots,"""Returns the number of available callback slots in the abstract LIN driver.""","""Returns the number of free callback slots in the abstract LIN driver."""
97,c,Registers a callback function for a specific incoming LIN frame,"""Registers a callback function to handle incoming LIN messages with a specific frame ID and size.”","""Registers a callback function to handle incoming LIN messages with a specific frame ID and size.”"
98,c,Registers a callback function to provide data for a specific outgoing LIN frame,"""Registers an outgoing callback function for a specific LIN frame ID and size.”","""Registers an outgoing callback function for a specific LIN frame ID and size, storing it in a data structure.”"
99,c,Sets the active schedule table for a LIN scheduler and resets its position to the beginning,"""Sets the active table index for a LIN scheduler and resets the current entry to the beginning of the table.""","""Sets the active table index for a LIN scheduler, resetting the current entry to the beginning of the table, and uses a semaphore to protect access."""
100,c,Stops the LIN scheduler from processing its current schedule table,"""Disables a LIN scheduler by setting its current table to -1 and releasing a semaphore.""","""Disables a LIN scheduler by setting its current table to -1 and releasing a semaphore, preventing further scheduling."""
