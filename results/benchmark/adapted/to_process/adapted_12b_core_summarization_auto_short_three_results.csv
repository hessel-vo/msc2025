id,language,reference,generated,generated_rci
1,python,Checks if a data type is a subtype of a specified base type,"""Checks if a data type is a subtype of a specified base type”","""Checks if a given type is a subtype of a specified base type”"
2,python,Validates if a value conforms to a datatype specified by a string,"""Checks if a value matches a specified datatype”","""Checks if a value is of a specified datatype”"
3,python,Checks if a value or list of values is a valid integer for a specified bit-width and signedness.,"""Checks if a value or list of values is a valid signed or unsigned integer within a specified bit range”","""Checks if a value or list of values is a valid integer within a specified bit range, optionally considering signedness”"
4,python,Looks up a type definition tuple by its string name from a list of types,"""Retrieves a type definition from a list of types based on a given datatype string”","""Retrieves a type definition (including name, constructor, and subtypes) from a list of types based on a given datatype string”"
5,python,Finds all datatypes within the current namespace and any parent namespaces of a given FQN,"""Identifies and returns a dictionary of namespaced datatypes that match a given fully qualified name prefix”","""Identifies and returns a dictionary of namespaced datatypes that match a given fully qualified name prefix.”"
6,python,Traverses a VSS tree to count the occurrences and collect the fully qualified paths of each node name,"""Traverses a VSS tree to count the occurrences and collect the fully qualified paths of each node name”","""Recursively traverses a VSS tree to count the occurrences and collect the fully qualified paths of each node name”"
7,python,Converts a string-based data type definition into an ApiGearType object,"""Converts a string representation of a data type into an ApiGearType object, handling basic types and arrays”","""Converts a string representation of a data type into an ApiGearType object, handling basic types and arrays.”"
8,python,Generates an ApiGear property from a VSS (Vehicle Signal Specification) node,"""Creates an ApiGearProperty object from a VSS node and a specified datatype”","""Creates an ApiGearProperty object from a VSS node and a specified datatype, populating its description if available.”"
9,python,Recursively resolves and flattens a specification file and all its include dependencies,"""Recursively resolves and flattens a specification file and all its include dependencies”","""Recursively resolves and flattens a specification file and its include dependencies”"
10,python,Loads and merges multiple VSpec files from specified paths into a single VSpec object,"""Loads and merges multiple VSpec files and their include dependencies into a single VSpec object”","""Loads and merges multiple VSpec files and their include dependencies into a single VSpec object, logging the process.”"
11,python,"Recursively updates a dictionary with values from another, merging nested dictionaries","""Recursively updates a dictionary with another dictionary, merging nested dictionaries”","""Recursively updates a dictionary with another dictionary, merging nested dictionaries and overwriting non-dictionary values”"
12,python,Validates a constant unique identifier (constUID) is a 32-bit hexadecimal string,"""Validates that a given string matches the format of a constant UID (e.g., '0x12345678') and returns the original string if valid.”","""Validates that a given string matches the format of a constant UID (e.g., '0x12345678') and returns the original string if valid or None if invalid.”"
13,python,"Initializes and attempts to resolve a VSS raw model, returning the unresolved model on failure","""Creates and attempts to resolve a VSSRaw object, logging a debug message if resolution fails”","""Creates and attempts to resolve a VSSRaw object, returning it or a partially initialized version if resolution fails”"
14,python,Validates that a list of strings are all known datatypes,"""Validates that a list of values contains only valid data types”","""Validates that a list of values contains only valid data types.”"
15,python,"Renders a VSS tree into a string, displaying specified attributes for each node","""Generates a string representation of a VSS tree, including specified attributes for each node”","""Generates a formatted string representation of a VSS tree, including specified attributes for each node”"
16,python,Finds the root of a VSS instance by recursively traversing up the parent hierarchy,"""Recursively traverses up the VSS tree to find the root instance node, raising an exception if no instance root is found”","""Recursively traverses up the VSS tree to find the root instance node, raising an exception if no instance root is found or if the current node is not an instance.”"
17,python,Counts the depth of a chain of instance branches,"""Recursively counts the depth of instance children within a VSSDataBranch”","""Recursively counts the depth of instance children within a VSSDataBranch”"
18,python,Finds all child node IDs that belong to a specific parent name,"""Finds the IDs of all nodes whose expected parent is a given name”","""Finds the IDs of all nodes whose expected parent is a given name”"
19,python,"Gets an attribute, returning a default value if the attribute is missing or its value is None","""Safely retrieves an attribute from an object, returning a default value if the attribute is missing”","""Safely retrieves an attribute from an object, returning a default value if the attribute is not found”"
20,python,Generates a Protobuf schema from a Vehicle Signal Specification (VSS) tree,"""Generates a protobuf file from a VSS tree, including imports and message definitions for data branches”","""Generates a protobuf file from a VSS tree, including imports and message definitions for data branches and datatypes”"
21,python,Groups all leaf VSS branch instances by the fully qualified name of their original branch definition,"""Collects the fully qualified names of all instance nodes under each instance root node in a VSS tree”","""Collects the fully qualified names of all instance nodes under each instance root node in a VSS tree”"
22,python,Determines if a VSS node is a leaf based on its data type,"""Checks if a VSS node is a leaf node (i.e., contains a data datatype as its data attribute)”","""Checks if a VSS node is a leaf node (i.e., has a data datatype as its data attribute)”"
23,python,Checks if a VSS node is a branch that is not an instance,"""Checks if a VSS node represents a branch with a non-instance data type”","""Checks if a VSS node represents a branch with a non-instance data type."""
24,python,Checks if a VSS node represents a branch instance,"""Checks if a VSS node represents an instance of a VSS data branch”","""Checks if a VSS node is an instance of a VSS data branch”"
25,python,FNV-1 32-bit hashing algorithm for a byte sequence,"""Calculates the FNV-1a 32-bit hash of a byte string”","""Calculates the FNV-1a 32-bit hash of a byte string."""
26,java,Lazily initializes and returns an audio card presenter with data models for media and in-call status,"""Lazily initializes and returns an audio card presenter with data models for media and in-call status”","""Lazily initializes and returns an audio card presenter, providing either a default in-call model or a media view model if available”"
27,java,Lazily initializes and returns the audio card view fragment,"""Lazily initializes and returns the audio card view fragment”","""Lazily initializes and returns the audio card view fragment”"
28,java,Inflates a card fragment's layout and initializes its view components,"""Inflates a card fragment layout, finds its title and icon views, and returns the root view”","""Inflates a card fragment layout and initializes its title and icon views”"
29,java,"Sets a button's icon and click listener to make it visible, or hides it if no content is provided","""Updates the visibility and content of a control bar button based on the provided descriptive text and controls”","""Updates the visibility and content of a control bar button based on the provided descriptive text and controls”"
30,java,Lazily inflates and initializes a descriptive text layout view on first access,"""Lazily initializes and returns the descriptive text-only layout view with its associated text and image elements”","""Lazily initializes and returns the descriptive text-only layout view, including its title, subtitle, optional image, and tap-for-more text elements”"
31,java,Updates and displays a card header view with a new title and icon,"""Updates the card header view with the provided title and icon on the main thread”","""Updates the card header view with the provided title and icon on the main thread”"
32,java,Lazily inflates and returns a text block layout view from a ViewStub,"""Lazily initializes and returns a text block layout view with associated text and tap-for-more elements”","""Lazily initializes and returns a text block layout view containing a text block and a tap-for-more element”"
33,java,Gets the media browser service component from a given package,"""Retrieves the default media browser service component name for a given package name”","""Retrieves the default media browser service component name for a given package name, or null if none is found”"
34,java,Determines if an app component should be launchable by filtering against a hide list and de-duplicating media services,"""Determines if a component should be added to the launchables list based on app type, custom media components, and apps to hide”","""Determines if a component should be added to the launchables list based on app type, custom media components, and apps to hide”"
35,java,Sets the media source and finishes the current activity,"""Sets the media source to browse mode and finishes the activity if it is one, handling car connection exceptions”","""Sets the media source to browse mode and finishes the activity if it is one, handling car connection exceptions”"
36,java,"Safely checks if a given activity is distraction-optimized, handling potential connection errors","""Checks if a given activity in a package is distraction optimized using the CarPackageManager”","""Determines if an activity is distraction optimized using the CarPackageManager, handling potential CarNotConnectedException”"
37,java,"Asynchronously creates, configures, and adds a task view to a parent view group","""Asynchronously creates, configures, and adds a task view to a parent view group”","""Asynchronously creates, configures, and adds a task view to a parent view group, using a TaskViewManager and a listener.”"
38,java,"Retrieves a specific, configured Intent for the default maps app, falling back to a generic one","""Constructs an intent to launch a preferred maps application, falling back to the default if no preferred app is found or the URI is invalid”","""Constructs an intent to launch a preferred maps application, falling back to the default if no preferred app is found or the URI is invalid”"
39,java,Dynamically instantiates and displays home card modules defined in a configuration resource,"""Dynamically initializes and adds home card modules to the fragment transaction based on configured class names”","""Dynamically initializes and adds home card modules to the fragment transaction based on configured class names and ViewModelProvider”"
40,java,Removes dangling tasks that are in multi-window mode,"""Removes dangling multi-window tasks from the ActivityTaskManager based on provided task information”","""Removes dangling multi-window tasks from the ActivityTaskManager based on provided task information”"
41,java,Updates the mode from the intent and sets the UI title accordingly,"""Parses the mode from the intent and updates the title of the activity and toolbar”","""Parses the mode from the intent and updates the activity and toolbar titles”"
42,java,Lazily initializes and returns the Chronometer view on first access,"""Lazily initializes and returns a chronometer view with its separator from the descriptive text layout”","""Lazily initializes and returns a chronometer view and its separator from the descriptive text layout”"
43,java,Blurs and scales an image to set as a card's visible background,"""Lazily initializes and returns the media layout view with title, subtitle, and control bar”","""Lazily initializes and returns the media layout view, including title, subtitle, and control bar”"
44,java,Blurs and scales an image to set as a card's visible background,"""Updates the card's background image by scaling, blurring, and setting it to the background view”","""Updates the card's background image by scaling, blurring, and setting it to the background view”"
45,java,Makes the media view visible and sets its title and subtitle,"""Updates the visibility and text content of a media layout view with provided title and subtitle”","""Updates the visibility and text content of a media layout view with provided title and subtitle”"
46,java,"Starts and shows a chronometer if a start time is positive; otherwise, hides it","""Updates the visibility and state of a chronometer and separator based on the start time of an audio duration”","""Updates the visibility and state of a chronometer and separator based on the start time of an audio duration”"
47,java,Registers a callback on a newly added call,"""Registers a callback to monitor incoming calls.”","""Registers a callback to monitor incoming calls.”"
48,java,Resets state and unregisters the callback when a call is removed,"""Removes the current call, clears associated data, updates the presenter, and unregisters the callback.”","""Removes the current call, clears associated data, updates the presenter, and unregisters the callback.”"
49,java,Updates the ongoing call view model with a formatted phone number and UI controls,"""Updates the card content with a formatted phone number and associated UI elements, then notifies the presenter.”","""Updates the card content with a formatted phone number and associated UI elements, then notifies the presenter of the update.”"
50,java,"Initializes the Mute, End Call, and Dialpad buttons for an in-call user interface","""Initializes mute, end call, and dialpad buttons with associated actions”","""Initializes mute, end call, and dialpad buttons with associated actions and listeners”"
51,cpp,Sends a D-Bus message over the connection and returns a boolean indicating success,"""Sends a D-Bus message over the connection and returns a boolean indicating success”","""Sends a D-Bus message over the connection, returning true on success or false on failure”"
52,cpp,Creates a D-Bus signal message addressed to a specific client,"""Creates a D-Bus signal message addressed to a specific client”","""Creates a D-Bus signal message addressed to a specific client”"
53,cpp,Notifies a newly added listener if the D-Bus connection is already available,"""Notifies a listener that the D-Bus connection is available”","""Notifies a listener that the D-Bus connection is available if the connection is active”"
54,cpp,"For an active connection, adds a thread to a list to be joined on exit, avoiding duplicates","""Registers a thread to be joined when a connection is closed”","""Registers a thread to be joined when a connection is closed”"
55,cpp,A callback that wakes up a main loop context if it has not been destroyed,"""A callback that wakes up a main loop context if it has not been destroyed”","""A callback that wakes up a main loop context if it is still alive”"
56,cpp,A callback to stop monitoring a D-Bus watch and clean up its associated data,"""Removes a D-Bus watch and stops watching if it is ready”",Removes a D-Bus watch and stops watching if it is ready to be removed.
57,cpp,"A libdbus callback that creates, starts, or stops a D-Bus watch based on its readiness status","""A callback that toggles the state of a D-Bus watch based on its readiness to be watched”","""A callback that toggles the state of a D-Bus watch based on its readiness to be watched”"
58,cpp,Thread-safely gets or creates a singleton DBusObjectManager instance using double-checked locking,"""Returns a shared pointer to a DBusObjectManager, creating one if it doesn't already exist”","""Returns a shared pointer to a DBusObjectManager, lazily creating one if it doesn't already exist”"
59,cpp,Performs a reference-counted release of a D-Bus service name,"""Releases a service name from the D-Bus connection, decrementing its count or removing it if it was the last reference”","""Releases a service name from the D-Bus connection, decrementing its count or removing it if it was the last reference, and returns a boolean indicating success”"
60,cpp,Steals the reply from a pending D-Bus call and wraps it in a DBusMessage object,"""Converts a D-Bus pending call to a D-Bus message object”","""Converts a D-Bus pending call to a D-Bus message object, stealing the reply from the pending call”"
61,cpp,Safely deletes all pending asynchronous handlers from a shared list,"""Deletes all pending asynchronous D-Bus message reply handlers”","""Deletes all pending asynchronous D-Bus message reply handlers from a vector”"
62,cpp,Reports a success status to all registered signal handlers for their associated tags,"""Iterates through signal handlers and calls their onSpecificError method for each received signal tag.”","""Iterates through signal handlers and calls their onSpecificError method for each received signal tag.”"
63,cpp,Thread-safely removes a connection from a collection if it exists,"""Removes a connection from the factory's internal map of connections”",Removes a connection from the factory's internal map of connections.
64,cpp,Dispatches D-Bus signals for interface addition or removal to specific handlers,"""Handles D-Bus signals indicating the addition or removal of interfaces, notifying the instance availability status event accordingly”","""Handles D-Bus signals indicating the addition or removal of interfaces, notifying the instance availability status event accordingly”"
65,cpp,Retrieves the addresses of available service instances from a D-Bus registry,"""Retrieves a list of available D-Bus service instances and populates a vector with their addresses”",Retrieves a list of available D-Bus service instances and populates a vector with their addresses.
66,cpp,Queries a D-Bus registry to determine if a specific service instance is available,"""Retrieves the availability status of a D-Bus service instance and sets the call status accordingly”",Retrieves the availability status of a D-Bus service instance and sets the call status accordingly.
67,cpp,Notifies that a service is unavailable when its corresponding D-Bus interface is removed,"""Handles a D-Bus signal indicating the removal of interfaces, updating the availability status of observed interfaces”","""Handles a D-Bus signal indicating the removal of interfaces, updating the availability status of observed interfaces if the signal matches the observed interface”"
68,cpp,Notifies CommonAPI listeners of a D-Bus interface's availability status change,"""Notifies listeners of a change in the availability status of a D-Bus interface”","""Notifies listeners of a change in the availability status of a D-Bus interface, using a translated address”"
69,cpp,Schedules an asynchronous notification of the current proxy status for a newly added listener,"""Adds a listener to a D-Bus proxy and pushes a function to the main loop to notify it when the proxy's status changes”","""Adds a listener to a D-Bus proxy and schedules a function to notify it when the proxy's status changes”"
70,cpp,Removes all listener entries that match a given subscription in a thread-safe manner,"""Removes a listener from the list of listeners for a given subscription”",Removes a listener from the list of listeners for a given subscription.
71,cpp,Forwards the addition of a D-Bus signal state handler to the underlying connection object,"""Adds a signal handler to the connection for a specific subscription”","""Adds a signal handler to the connection for a specific subscription”"
72,cpp,Callback to translate available D-Bus service instance addresses to strings and forward the result,"""A callback function that translates a vector of DBus addresses to a vector of strings and invokes a callback with the status and instances”","""A callback function that translates a vector of DBus addresses to a vector of strings and invokes a callback with the status and instances”"
73,cpp,Routes a D-Bus message to a registered handler or handles standard introspection requests,"""Handles incoming D-Bus messages by routing them to registered interface handlers or handling introspection requests”","""Handles incoming D-Bus messages by routing them to registered interface handlers or handling introspection requests.”"
74,cpp,"Adds a D-Bus interface handler to a path, preventing duplicate registration except for standard interfaces","""Adds a D-Bus interface handler to a table, preventing duplicates and handling special cases for object manager interfaces”","""Adds a D-Bus interface handler to a table, preventing duplicates and handling special cases for object manager and properties interfaces”"
75,cpp,"Registers a D-Bus handler for a specific path, preventing duplicates","""Adds a DBus interface handler to a table of registered objects, preventing duplicates”","""Adds a DBus interface handler to a table of registered objects, ensuring no duplicates”"
76,c,Sends a UDS negative response message containing the failed service ID and a negative response code,"""Sends a UDS negative response message containing the failed service ID and a negative response code”","""Sends a UDS negative response message containing the failed service ID and a negative response code”"
77,c,Sends a UDS positive response for the Diagnostic Session Control service,"""Sends a UDS positive response for the Diagnostic Session Control service”","""Sends a UDS positive response message for the Diagnostic Session Control service”"
78,c,Sends a positive UDS response for the ECU Reset service,"""Sends a UDS positive response for the ECU reset service”","""Sends a UDS positive response for the ECU reset service”"
79,c,"Handles a UDS ECU Reset request, supporting only the hard reset sub-function which reboots the system","""Handles the ECU reset UDS service, sending a positive response and rebooting the system for a hard reset, or a negative response for unsupported reset types”","""Handles the ECU reset UDS service, sending a positive response and rebooting the system for a hard reset, or a negative response for unsupported reset types or incorrect message length.”"
80,c,"Sends a positive UDS response to a Request Download, specifying the maximum block length","""Sends a UDS positive response for the Request Download service with a block size of 258 bytes”","""Sends a UDS positive response for the Request Download service with a block size of 258 bytes”"
81,c,Sends a UDS Transfer Data positive response containing the block sequence counter,"""Sends a UDS positive response for the Transfer Data service with the specified block sequence counter”","""Sends a UDS positive response for the Transfer Data service, including the block sequence counter”"
82,c,Sends a UDS positive response for the Routine Control service containing a result code over ISO-TP,"""Sends a UDS positive response for the Routine Control service, including the routine ID and the result”","""Sends a UDS positive response for the Routine Control service, including the routine ID and the result”"
83,c,Sends a UDS Transfer Exit positive response message via the ISO-TP protocol,"""Sends a UDS positive response for the Request Transfer Exit service”","""Sends a UDS positive response for the Request Transfer Exit service"""
84,c,"Converts a raw integer gain value to a corresponding DAC gain enumeration, returning an error if unsupported","""Converts a raw integer gain value to a corresponding DAC gain enumeration, returning an error if unsupported”","""Converts a raw integer gain value to a corresponding DAC gain enumeration, returning an error if unsupported”"
85,c,Finds the index of a given CAN ID in a mapping table,"""Maps a CAN ID to an index within a predefined mapping table, returning 0xff if not found”","""Maps a CAN ID to an index within a predefined mapping table, returning 0xff if not found”"
86,c,"Removes a specific LIN-to-CAN receive filter, or all filters, by clearing the associated callback","""Removes a callback function for a specific LIN2CAN filter ID, clearing the callback for all translatable addresses if the filter ID is the maximum value”",Removes a callback function for a specific LIN2CAN filter ID.
87,c,A LIN callback that dequeues a frame for transmission and executes its completion callback,"""Retrieves a LIN frame from a queue and calls a user-defined callback function to transmit it via CAN”","""Retrieves a LIN frame from a queue and calls a user-defined callback function to transmit it via CAN”"
88,c,A callback that translates an incoming LIN frame to a CAN frame and invokes a registered handler,"""Translates incoming LIN frames to CAN frames and invokes a registered callback function with the translated frame data”","""Translates incoming LIN frames to CAN frames and invokes a registered callback function with the translated frame data”"
89,c,Initializes a high-voltage shield by configuring its registers and enabling its output,"""Initializes the HV shield device by configuring the output enable pin, setting initial register values, and enabling the shield”","""Initializes the HV shield device by configuring the output enable pin, setting initial register values, and enabling the shield."""
90,c,Sets the gain for a specified DAC on a high-voltage shield,"""Sets the gain value for a specified DAC register, updating the device's internal state”","""Sets the gain value for a specified DAC register, updating the device's internal state and returning an error if the DAC is invalid”"
91,c,"Sets a GPIO output enable state, remapping the pin index by swapping the 4-bit nibbles within its byte","""Sets the enable state of a GPIO output pin by modifying a register and updating the device's state”","""Sets the enable state of a GPIO output pin by modifying a register and updating the device’s state”"
92,c,A callback function that forwards a received CAN frame to another device,"""Routes CAN frames received on a device to another device using the CAN bus, logging any errors encountered during transmission”","""Routes CAN frames received on a device to another device using the CAN bus, logging any errors encountered during transmission”"
93,c,Registers a set of rules to route CAN frames between specified interfaces,"""Registers a set of CAN router entries, adding RX filters for each entry and returning an error if any registration fails”","""Registers a set of CAN router entries, adding RX filters for each entry and returning an error if any registration fails”"
94,c,Initializes the CAN router by registering all statically-defined routing tables,"""Initializes the CAN router by registering all configured CAN router tables.”","""Initializes the CAN router by registering all configured CAN router tables and returns an error if registration fails.”"
95,c,Sets a masked group of GPIO pins to the states defined in a value bitmask,"""Sets the specified GPIO pins to a given value, iterating through a configuration structure to determine the pins to be set”","""Sets the specified GPIO pins to a given value based on a configuration structure and a bitmask”"
96,c,Gets the number of available LIN callback slots,"""Returns the number of free callback slots available in the abstract LIN driver”","""Returns the number of free callback slots available in the abstract LIN driver"""
97,c,Registers a callback function for a specific incoming LIN frame,"""Registers a callback function to handle incoming LIN messages with a specific frame ID and size”","""Registers a callback function to handle incoming LIN messages with a specific frame ID and size, returning an error if the input is invalid”"
98,c,Registers a callback function to provide data for a specific outgoing LIN frame,"""Registers an outgoing callback function for a specific LIN frame ID and size, returning an error if the input is invalid”","""Registers an outgoing callback function for a specific LIN frame ID and size, returning an error if the input is invalid or if the callback cannot be registered”"
99,c,Sets the active schedule table for a LIN scheduler and resets its position to the beginning,"""Sets the active table index for a given abstract linear scheduler, resetting the entry index to 0 and acquiring/releasing a semaphore to ensure exclusive access”","""Sets the active table index for a given abstract linear scheduler, resetting the entry index to 0 and acquiring/releasing a semaphore to ensure exclusive access to the scheduler”"
100,c,Stops the LIN scheduler from processing its current schedule table,"""Disables a LIN scheduler by setting its current table to -1 and taking a semaphore to prevent concurrent access”","""Disables a LIN scheduler by setting its current table to -1 and acquiring a semaphore to prevent concurrent access”"
