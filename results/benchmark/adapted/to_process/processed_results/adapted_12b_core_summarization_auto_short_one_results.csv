id,language,reference,generated,generated_rci
2,python,Validates if a value conforms to a datatype specified by a string,"""Checks if a value is of a specified datatype”","""Checks if a value conforms to a specified datatype”"
3,python,Checks if a value or list of values is a valid integer for a specified bit-width and signedness.,"""Checks if a value or list of values is a signed or unsigned integer within a specified bit range.""","""Checks if a value or list of values is a signed or unsigned integer within a specified bit range."""
4,python,Looks up a type definition tuple by its string name from a list of types,"""Retrieves a tuple containing the type name, constructor, and subtypes for a given datatype string.""","""Retrieves type information (name, constructor, and subtypes) for a given datatype string, or None if not found."""
5,python,Finds all datatypes within the current namespace and any parent namespaces of a given FQN,"""Returns a dictionary of namespaced datatypes matching a given fully qualified name prefix.""","""Returns a dictionary of namespaced datatypes that match a given fully qualified name prefix."""
7,python,Converts a string-based data type definition into an ApiGearType object,"""Converts a string representation of a data type to an ApiGearType object, handling arrays and basic types.""","""Converts a string representation of a data type to an ApiGearType object, handling arrays and basic types."""
8,python,Generates an ApiGear property from a VSS (Vehicle Signal Specification) node,"""Generates an ApiGearProperty object from a VSSNode and its datatype, handling unsupported datatypes.""","""Generates an ApiGearProperty object from a VSSNode and its datatype, returning None if the datatype is unsupported."""
10,python,Loads and merges multiple VSpec files from specified paths into a single VSpec object,"""Loads and merges multiple VSpec files, handling include directories and identifiers, and raising an exception if no specs are loaded.”","""Loads and merges multiple VSpec files, handling include directories and identifiers, and raising an exception if no specs are loaded.”"
11,python,"Recursively updates a dictionary with values from another, merging nested dictionaries","""Recursively updates a dictionary with another dictionary, merging nested dictionaries.”","Recursively updates a dictionary with another dictionary, merging nested dictionaries."
12,python,Validates a constant unique identifier (constUID) is a 32-bit hexadecimal string,"""Validates if a given string matches the format of a constant UID (e.g., '0x12345678').""","""Validates if a given string matches the format of a constant UID (e.g., '0x12345678')."""
13,python,"Initializes and attempts to resolve a VSS raw model, returning the unresolved model on failure","""Creates and resolves a VSSRaw object from a dictionary, handling potential validation or model errors.""","""Creates and resolves a VSSRaw object from a dictionary, returning it even if validation or model resolution fails."""
14,python,Validates that a list of strings are all known datatypes,"""Validates that a list of strings contains only valid data types.""","""Validates that a list of strings contains only valid data types."""
15,python,"Renders a VSS tree into a string, displaying specified attributes for each node","""Generates a string representation of a VSSNode tree, including specified attributes and their values.”","""Generates a formatted string representation of a VSSNode tree, including specified attributes and their values.”"
16,python,Finds the root of a VSS instance by recursively traversing up the parent hierarchy,"""Recursively traverses up the tree to find the root instance of a VSSDataBranch.""","""Recursively finds the root instance of a VSSDataBranch by traversing up the tree."""
17,python,Counts the depth of a chain of instance branches,"""Recursively counts the depth of instance children within a VSSDataBranch.""","""Recursively counts the depth of instance children within a VSSDataBranch."""
18,python,Finds all child node IDs that belong to a specific parent name,"""Finds the IDs of nodes whose expected parent is a specified name.""","""Finds the IDs of nodes whose expected parent is a specified name."""
19,python,"Gets an attribute, returning a default value if the attribute is missing or its value is None","""Safely retrieves an attribute from an object, returning a default value if the attribute is missing.""","""Safely retrieves an attribute from an object, returning a default value if the attribute is missing or None."""
20,python,Generates a Protobuf schema from a Vehicle Signal Specification (VSS) tree,"""Generates a protobuf message definition from a VSS signal tree, including imports and message fields.""","""Generates a protobuf message definition from a VSS signal tree, including imports and message fields."""
21,python,Groups all leaf VSS branch instances by the fully qualified name of their original branch definition,"""Collects the names of all instances of a VSSDataBranch node and its children, grouped by their instance root.""","""Collects the names of all instances of VSSDataBranch nodes, grouped by their instance root."""
22,python,Determines if a VSS node is a leaf based on its data type,"""Checks if a VSS node is a leaf node by verifying if its data is a VSSDataDatatype.""","""Checks if a VSS node is a leaf node by checking if its data is a VSSDataDatatype."""
23,python,Checks if a VSS node is a branch that is not an instance,"""Checks if a VSS node represents a branch with no instance.""","""Checks if a VSS node is a branch and does not represent an instance."""
24,python,Checks if a VSS node represents a branch instance,"""Checks if a VSSNode represents an instance of a VSSDataBranch.""","""Checks if a VSSNode's data is an instance of a VSSDataBranch."""
25,python,FNV-1 32-bit hashing algorithm for a byte sequence,"""Calculates the FNV-1a 32-bit hash of a byte string.""","""Calculates the FNV-1a 32-bit hash of a byte string."""
28,java,Inflates a card fragment's layout and initializes its view components,"""Inflates a layout for a card fragment and initializes its view elements.""","""Inflates a card fragment layout and initializes its view elements (title and icon)."""
29,java,"Sets a button's icon and click listener to make it visible, or hides it if no content is provided","""Updates the visibility and content of an image button based on the provided descriptive text with controls.”","""Updates the visibility and content of an image button based on the provided descriptive text with controls.”"
30,java,Lazily inflates and initializes a descriptive text layout view on first access,"""Lazily initializes and returns a view for displaying descriptive text-only content with optional image and tap-for-more functionality.”","""Lazily initializes and returns a view for displaying descriptive text-only content, including optional image and tap-for-more functionality.”"
31,java,Updates and displays a card header view with a new title and icon,"""Updates the header view of a card with the provided title and icon.""","""Updates the card header view with the provided title and icon."""
32,java,Lazily inflates and returns a text block layout view from a ViewStub,"""Lazily initializes and returns a text block layout view with associated text and tap-for-more elements.""","""Lazily initializes and returns a text block layout view containing a text element and a tap-for-more element."""
33,java,Gets the media browser service component from a given package,"""Retrieves the default media browser service component name for a given package name.""","""Retrieves the default media browser service component name for a given package name from the system."""
34,java,Determines if an app component should be launchable by filtering against a hide list and de-duplicating media services,"""Determines if a component should be added to launchables based on app hiding, custom media components, and app types.""","""Determines if a component should be added to launchables based on app hiding, custom media components, and app types."""
35,java,Sets the media source and finishes the current activity,"""Sets the media source to browse mode and finishes the activity if it is an activity.""","""Sets the media source to browse mode and finishes the activity if it is an activity, handling car connection errors."""
36,java,"Safely checks if a given activity is distraction-optimized, handling potential connection errors","""Checks if a given activity within a package is distraction optimized using the CarPackageManager.""","""Determines if an activity is distraction optimized by querying the CarPackageManager, handling potential CarNotConnectedException."""
38,java,"Retrieves a specific, configured Intent for the default maps app, falling back to a generic one","""Returns an intent to launch a preferred maps application, falling back to the default maps activity if no preferred app is found or the preferred app is invalid.""","""Returns an intent to launch a preferred maps application, prioritizing those specified in the configuration, or falling back to the default maps activity if no preferred app is found or the preferred app is invalid."""
39,java,Dynamically instantiates and displays home card modules defined in a configuration resource,"""Dynamically creates and adds HomeCardModules to the fragment transaction based on configured class names.""","""Dynamically creates and adds HomeCardModules to the fragment transaction based on configured class names, logging initialization times."""
40,java,Removes dangling tasks that are in multi-window mode,"""Removes dangling multi-window tasks from the ActivityTaskManager based on provided task appearance information.""","""Removes dangling multi-window tasks from the ActivityTaskManager based on provided task appearance information."""
41,java,Updates the mode from the intent and sets the UI title accordingly,"""Parses the mode from the intent and updates the title of the activity and toolbar accordingly.""","""Parses the mode from the intent and updates the activity and toolbar titles."""
42,java,Lazily initializes and returns the Chronometer view on first access,"""Lazily initializes and returns a chronometer view with its separator from the layout.”","""Lazily initializes and returns a chronometer view and its separator from the layout.”"
43,java,Blurs and scales an image to set as a card's visible background,"""Lazily initializes and returns a view for displaying media layout information, including title, subtitle, and playback controls.”","""Lazily initializes and returns a view for displaying media layout information, including title, subtitle, and playback controls, and initializes the presenter with the controls action bar.”"
44,java,Blurs and scales an image to set as a card's visible background,"""Updates the card's background image by scaling, blurring, and setting it to the card's background view.""","""Updates the card's background image by scaling, blurring, and setting it to the card's background view, if the image and card size are valid."""
45,java,Makes the media view visible and sets its title and subtitle,"""Updates the visibility and text content of the media layout view with provided title and subtitle.""","""Updates the visibility and text content of the media layout view with provided title and subtitle."""
46,java,"Starts and shows a chronometer if a start time is positive; otherwise, hides it","""Updates the visibility and state of a chronometer and separator based on the start time of an audio duration.""","""Updates the visibility and state of a chronometer and separator based on the start time of an audio duration, displaying elapsed time if a start time is provided."""
47,java,Registers a callback on a newly added call,"""Registers a callback to monitor a newly added call.""","""Registers a callback to monitor a newly added call."""
48,java,Resets state and unregisters the callback when a call is removed,"""Removes the current call, clears associated data, updates the presenter, and unregisters the callback.""","""Removes the current call, clears associated data, updates the presenter, and unregisters the callback from the call."""
49,java,Updates the ongoing call view model with a formatted phone number and UI controls,"""Updates the card content with a formatted phone number and associated UI elements, then notifies the presenter.""","""Updates the card content with a formatted phone number, subtitle, elapsed time, and call control buttons, then notifies the presenter."""
50,java,"Initializes the Mute, End Call, and Dialpad buttons for an in-call user interface","""Initializes mute, end call, and dialpad buttons with associated actions for controlling audio and call functions.""","""Initializes mute, end call, and dialpad buttons with associated actions for controlling audio and call functions."""
53,cpp,Notifies a newly added listener if the D-Bus connection is already available,"""Notifies a listener of the availability status if the D-Bus connection is connected.""","""Notifies a listener of the availability status if the D-Bus connection is connected."""
54,cpp,"For an active connection, adds a thread to a list to be joined on exit, avoiding duplicates","""Associates a thread with a connection to be joined upon exit.""",Associates a thread with a connection to be joined when the connection is closed.
56,cpp,A callback to stop monitoring a D-Bus watch and clean up its associated data,"""Removes a D-Bus watch and stops watching if it's ready.”",Removes a D-Bus watch and stops watching if it's ready.
57,cpp,"A libdbus callback that creates, starts, or stops a D-Bus watch based on its readiness status","""Handles D-Bus watch events, starting or stopping the watch based on its readiness and context.""","""Handles D-Bus watch events, starting or stopping the watch based on its readiness and context, and managing its associated DBusWatch object."""
58,cpp,Thread-safely gets or creates a singleton DBusObjectManager instance using double-checked locking,"""Returns a shared pointer to a DBusObjectManager, creating one if it doesn't already exist.""","""Returns a shared pointer to a DBusObjectManager, lazily creating one if it doesn't already exist."""
59,cpp,Performs a reference-counted release of a D-Bus service name,"""Releases a D-Bus service name, decrementing its count or removing it if the count reaches zero.""","""Releases a D-Bus service name, decrementing its count or removing it if the count reaches zero, and returns a boolean indicating success."""
60,cpp,Steals the reply from a pending D-Bus call and wraps it in a DBusMessage object,"""Converts a D-Bus pending call to a D-Bus message and returns it”","""Converts a D-Bus pending call to a D-Bus message, returning the message object”"
61,cpp,Safely deletes all pending asynchronous handlers from a shared list,"""Deletes all pending asynchronous D-Bus message reply handlers.""","""Deletes all pending asynchronous D-Bus message reply handlers to prevent memory leaks."""
62,cpp,Reports a success status to all registered signal handlers for their associated tags,"""Iterates through signal handlers and calls their onSpecificError method for each received signal tag.""","""Iterates through signal handlers and calls their onSpecificError method for each received signal tag."""
63,cpp,Thread-safely removes a connection from a collection if it exists,"""Removes a connection from the factory's connection map, ensuring thread safety with a mutex.""","Removes a connection from the factory's connection map, ensuring thread safety with a mutex."
64,cpp,Dispatches D-Bus signals for interface addition or removal to specific handlers,"""Handles D-Bus messages related to interface availability changes, dispatching them to the appropriate event handler.""","""Handles D-Bus messages indicating interface additions or removals, dispatching them to the corresponding event handler."""
65,cpp,Retrieves the addresses of available service instances from a D-Bus registry,"""Retrieves available service instances from the D-Bus registry and populates a vector with their addresses.""",Retrieves available service instances from the D-Bus registry and populates a vector with their addresses.
66,cpp,Queries a D-Bus registry to determine if a specific service instance is available,"""Retrieves the availability status of a D-Bus service instance and populates the provided status and call status objects.""","Retrieves the availability status of a D-Bus service instance, translating a CommonAPI address to a D-Bus address and populating the provided status and call status objects."
67,cpp,Notifies that a service is unavailable when its corresponding D-Bus interface is removed,"""Handles the DBus signal for interfaces being removed, updating the availability status of observed interfaces.""","""Handles the DBus signal for interfaces being removed, updating the availability status of observed interfaces and notifying listeners."""
68,cpp,Notifies CommonAPI listeners of a D-Bus interface's availability status change,"""Notifies listeners of a change in the availability status of a D-Bus interface.""","""Notifies listeners of a change in the availability status of a D-Bus interface via a CommonAPI address."""
69,cpp,Schedules an asynchronous notification of the current proxy status for a newly added listener,"""Adds a listener to the proxy and pushes a function to the main loop to notify it when the proxy's status changes.""","""Adds a listener to the proxy and pushes a function to the main loop to notify it when the proxy's status changes."""
70,cpp,Removes all listener entries that match a given subscription in a thread-safe manner,"""Removes a listener from the list of listeners for a given subscription.""",Removes a listener from the list of listeners for a given subscription.
71,cpp,Forwards the addition of a D-Bus signal state handler to the underlying connection object,"""Adds a signal handler to the connection for a specific subscription.""",Adds a signal handler to the connection for a specific subscription.
72,cpp,Callback to translate available D-Bus service instance addresses to strings and forward the result,"""Handles the asynchronous callback for retrieving available service instances, translating the result and passing it to the provided callback.”","""Handles the asynchronous callback for retrieving available service instances, translating the result to a vector of strings and passing it to the provided callback.”"
73,cpp,Routes a D-Bus message to a registered handler or handles standard introspection requests,"""Handles incoming D-Bus messages by routing them to registered interface handlers or processing introspection requests.""","""Handles incoming D-Bus messages by routing them to registered interface handlers or processing introspection requests."""
74,cpp,"Adds a D-Bus interface handler to a path, preventing duplicate registration except for standard interfaces","""Adds a D-Bus interface handler to a table, checking for duplicates and handling special cases for object manager and properties interfaces.""","""Adds a D-Bus interface handler to a table, preventing duplicates and handling special cases for object manager and properties interfaces."""
75,cpp,"Registers a D-Bus handler for a specific path, preventing duplicates","""Adds a DBusInterfaceHandler to the registered objects table, ensuring no duplicates for a given interface path.""","""Adds a DBusInterfaceHandler to the registered objects table, preventing duplicates for a given interface path."""
78,c,Sends a positive UDS response for the ECU Reset service,"""Sends a UDS positive response message for an ECU reset request with the specified reset type.""","""Sends a UDS positive response message indicating successful completion of an ECU reset request with the specified reset type."""
79,c,"Handles a UDS ECU Reset request, supporting only the hard reset sub-function which reboots the system","""Handles an ECU reset request, sending a positive response and rebooting for hard resets, or a negative response for unsupported reset types.""","""Handles an ECU reset request, sending a positive response and rebooting for hard resets, or a negative response for unsupported reset types or incorrect message length."""
80,c,"Sends a positive UDS response to a Request Download, specifying the maximum block length","""Sends a UDS positive response message indicating successful request download with a block size of 258 bytes.""","""Sends a UDS positive response message indicating successful request download with a block size of 258 bytes."""
81,c,Sends a UDS Transfer Data positive response containing the block sequence counter,"""Sends a UDS transfer data response message containing the block sequence counter”","""Sends a UDS transfer data response message containing the block sequence counter"""
82,c,Sends a UDS positive response for the Routine Control service containing a result code over ISO-TP,"""Sends a UDS routine control result message containing the routine ID and the result code.""","""Sends a UDS routine control result message containing the routine ID and the result code."""
83,c,Sends a UDS Transfer Exit positive response message via the ISO-TP protocol,"""Sends a UDS positive response message indicating successful transfer exit.""","""Sends a UDS positive response message indicating successful transfer exit."""
85,c,Finds the index of a given CAN ID in a mapping table,"""Maps a CAN ID to a corresponding index within a predefined mapping table, returning 0xff if no match is found.”","""Maps a CAN ID to a corresponding index within a predefined mapping table, returning 0xff if no match is found.”"
86,c,"Removes a specific LIN-to-CAN receive filter, or all filters, by clearing the associated callback","""Removes a CAN receive filter by setting the corresponding callback function to NULL.""",Removes a CAN receive filter by setting the corresponding callback function to NULL.
87,c,A LIN callback that dequeues a frame for transmission and executes its completion callback,"""Retrieves a LIN frame from a queue and copies it to a CAN frame, then calls a user-defined callback function to transmit the frame.""","""Retrieves a LIN frame from a queue and copies it to a CAN frame, then calls a user-defined callback function to transmit the frame."""
88,c,A callback that translates an incoming LIN frame to a CAN frame and invokes a registered handler,"""Translates incoming LIN frames to CAN frames and calls the corresponding callback function with the translated frame.""","""Translates incoming LIN frames to CAN frames and invokes a callback function with the translated frame and device data."""
89,c,Initializes a high-voltage shield by configuring its registers and enabling its output,"""Initializes the HV shield device by configuring the output enable pin, setting up the data structure, updating the registers, and enabling the output.""","""Initializes the HV shield device by configuring the output enable pin, setting up the data structure, updating the registers, and enabling the output."""
90,c,Sets the gain for a specified DAC on a high-voltage shield,"""Sets the DAC gain for a specified DAC channel (0 or 1) in the HV shield device.""","""Sets the DAC gain for a specified DAC channel (0 or 1) in the HV shield device, updating the device's configuration."""
91,c,"Sets a GPIO output enable state, remapping the pin index by swapping the 4-bit nibbles within its byte","""Enables or disables a GPIO output pin on the HV shield device by setting the corresponding bit in the GPIO output register.""","""Enables or disables a GPIO output pin on the HV shield device by setting the corresponding bit in the GPIO output register, handling index values correctly."""
92,c,A callback function that forwards a received CAN frame to another device,"""Routes CAN frames received on a device to another device using the can_send function.""","""Routes CAN frames received on a device to another device using the can_send function."""
93,c,Registers a set of rules to route CAN frames between specified interfaces,"""Registers multiple CAN router entries by adding corresponding receive filters to the CAN driver.""","""Registers multiple CAN router entries by adding corresponding receive filters to the CAN driver."""
94,c,Initializes the CAN router by registering all statically-defined routing tables,"""Initializes the CAN router by registering all configured CAN router tables.""","""Initializes the CAN router by registering all configured CAN router tables."""
95,c,Sets a masked group of GPIO pins to the states defined in a value bitmask,"""Sets the specified GPIO pins to a given value, masking out unconfigured pins.""","""Sets the specified GPIO pins to a given value, masking out unconfigured pins."""
96,c,Gets the number of available LIN callback slots,"""Returns the number of free callback slots available in the abstract LIN driver.""","""Returns the number of free callback slots available in the abstract LIN driver."""
97,c,Registers a callback function for a specific incoming LIN frame,"""Registers a callback function to handle incoming LIN messages with a specific frame ID and size.""","""Registers a callback function to handle incoming LIN messages with a specific frame ID and size."""
98,c,Registers a callback function to provide data for a specific outgoing LIN frame,"""Registers an outgoing callback function for a specific LIN frame ID and size with the abstract LIN layer.""","""Registers an outgoing callback function for a specific LIN frame ID and size with the abstract LIN layer."""
99,c,Sets the active schedule table for a LIN scheduler and resets its position to the beginning,"""Sets the active table index for a given abstract LIN scheduler and resets the current entry to the beginning of the table.""","""Sets the active table index for a given abstract LIN scheduler, resetting the current entry to the beginning of the table."""
100,c,Stops the LIN scheduler from processing its current schedule table,"""Disables a LIN scheduler by setting its current table to -1 and taking the active semaphore.""","""Disables a LIN scheduler by setting its current table to -1 and blocking until the scheduler is inactive."""
