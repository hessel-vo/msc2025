id,language,reference,generated,generated_rci
2,python,Validates if a value conforms to a datatype specified by a string,"""Checks if a value conforms to a specified datatype”","""Validates if a value matches a specified datatype”"
3,python,Checks if a value or list of values is a valid integer for a specified bit-width and signedness.,"""Checks if a value or list of values are within the range of a signed or unsigned integer with a specified number of bits”","""Checks if a value or list of values are within the range of a signed or unsigned integer with a specified number of bits”"
4,python,Looks up a type definition tuple by its string name from a list of types,"""Retrieves a type definition from a list of types based on a given datatype string.”","""Looks up a type definition in a list of types based on a given datatype string.”"
5,python,Finds all datatypes within the current namespace and any parent namespaces of a given FQN,"""Identifies and returns a dictionary of namespaced datatypes matching a given fully qualified name prefix.”","""Identifies and returns a dictionary of namespaced datatypes that start with a given fully qualified name prefix.”"
7,python,Converts a string-based data type definition into an ApiGearType object,"""Maps a string representation of a data type to its corresponding ApiGearType, handling arrays and basic types.”","""Converts a string representation of a data type to an ApiGearType, handling arrays and basic types.”"
8,python,Generates an ApiGear property from a VSS (Vehicle Signal Specification) node,"""Generates an ApiGear property object from a VSS node and its associated datatype”","""Creates an ApiGear property object based on a VSS node's datatype and data description”"
10,python,Loads and merges multiple VSpec files from specified paths into a single VSpec object,"""Loads and merges multiple specification files and their include dependencies into a single VSpec object”","""Loads and merges multiple specification files and their include dependencies into a single VSpec object, logging details about the process."""
11,python,"Recursively updates a dictionary with values from another, merging nested dictionaries","""Recursively updates a dictionary with another dictionary, merging nested dictionaries.”","""Recursively merges a dictionary into another, updating nested dictionaries.”"
12,python,Validates a constant unique identifier (constUID) is a 32-bit hexadecimal string,"""Validates that a given string conforms to the 'constUID' format (e.g., '0x12345678') and returns the input if valid.""","""Validates that a given string conforms to the 'constUID' format (e.g., '0x12345678') and returns the input if valid, or None if it is None."""
13,python,"Initializes and attempts to resolve a VSS raw model, returning the unresolved model on failure","""Creates and resolves a VSSRaw object, handling potential validation or model errors”","""Creates and resolves a VSSRaw object, returning it even if validation or model resolution fails”"
14,python,Validates that a list of strings are all known datatypes,"""Validates a list of datatypes against a predefined set of allowed datatypes”","""Validates that a list of datatypes contains only allowed values”"
15,python,"Renders a VSS tree into a string, displaying specified attributes for each node","""Generates a string representation of a VSS tree, including specified attributes for each node.”","""Generates a formatted string representation of a VSS tree, including specified attributes for each node.”"
16,python,Finds the root of a VSS instance by recursively traversing up the parent hierarchy,"""Traverses up the VSS tree to find the root instance node, raising an exception if no instance root is found.”","""Traverses up the VSS tree to find the root instance node, incrementing depth along the way.”"
17,python,Counts the depth of a chain of instance branches,"""Recursively counts the depth of instance children within a VSS data branch.”","""Recursively counts the depth of instance children within a VSS data branch.”"
18,python,Finds all child node IDs that belong to a specific parent name,"""Finds the IDs of all nodes whose expected parent is a given name”","""Finds the IDs of all nodes whose expected parent is a given name”"
19,python,"Gets an attribute, returning a default value if the attribute is missing or its value is None","""Safely retrieves an attribute from an object, returning a default value if the attribute is missing.”","""Safely retrieves an attribute from an object, returning a default value if the attribute is not found.”"
20,python,Generates a Protobuf schema from a Vehicle Signal Specification (VSS) tree,"""Generates a protocol buffer definition from a VSS tree, including imports and message structures.”","""Generates a protocol buffer definition from a VSS tree, including imports and message structures for data branches.”"
21,python,Groups all leaf VSS branch instances by the fully qualified name of their original branch definition,"""Collects the fully qualified names of all instance nodes under each instance root node in a VSS tree”","""Extracts the names of all instance nodes grouped by their instance root nodes in a VSS tree”"
22,python,Determines if a VSS node is a leaf based on its data type,"""Checks if a VSS node is a leaf node based on its data type”","""Checks if a VSS node represents a leaf node by examining its data type”"
23,python,Checks if a VSS node is a branch that is not an instance,"""Checks if a VSS node represents a branch and is not an instance”","""Checks if a VSS node is a branch and not an instance of a data type”"
24,python,Checks if a VSS node represents a branch instance,"""Checks if a VSS node represents an instance of a VSS branch”","""Checks if a VSS node is an instance of a VSS branch data type”"
25,python,FNV-1 32-bit hashing algorithm for a byte sequence,"""Calculates a 32-bit FNV-1a hash value for a given byte string”","""Computes a 32-bit FNV-1a hash value for a given byte string."""
28,java,Inflates a card fragment's layout and initializes its view components,"""Inflates a card fragment layout and initializes its title and icon views”","""Inflates a card fragment layout and initializes its title and icon views."""
29,java,"Sets a button's icon and click listener to make it visible, or hides it if no content is provided","""Updates the visibility and content of a control bar button based on a descriptive text with controls object”","""Updates the visibility and content of a control bar button based on a descriptive text with controls object"""
30,java,Lazily inflates and initializes a descriptive text layout view on first access,"""Lazily initializes and returns a view containing descriptive text elements and an optional image”","""Lazily initializes and returns a view containing descriptive text elements, an optional image, and a tap-for-more indicator”"
31,java,Updates and displays a card header view with a new title and icon,"""Updates the header view with the card title and icon on the main thread”","""Updates the header view's title and icon on the main thread”"
32,java,Lazily inflates and returns a text block layout view from a ViewStub,"""Lazily initializes and returns a text block layout view with associated text and tap-for-more elements”","""Lazily initializes and returns a text block layout view containing a text element and a tap-for-more element”"
33,java,Gets the media browser service component from a given package,"""Retrieves the default media browsing service component name for a given package name.""","""Retrieves the default media browsing service component name for a given package name, or null if none is found."""
34,java,Determines if an app component should be launchable by filtering against a hide list and de-duplicating media services,"""Determines whether a component should be added to the launchables list based on app hiding, custom media components, and component type.""","""Determines whether a component should be added to the launchables list based on app hiding, custom media components, and component type."""
35,java,Sets the media source and finishes the current activity,"""Selects a media source and finishes the activity if it is one, handling potential connection errors.”","""Selects a media source and finishes the activity if it is one, handling potential connection errors."""
36,java,"Safely checks if a given activity is distraction-optimized, handling potential connection errors","""Checks if a given activity in a package is distraction optimized using the CarPackageManager, handling potential CarNotConnectedException.""","""Determines if an activity is distraction optimized by querying the CarPackageManager, handling CarNotConnectedException."""
38,java,"Retrieves a specific, configured Intent for the default maps app, falling back to a generic one","""Retrieves a preferred maps intent from configuration, falling back to the default if no preferred activity is found or valid.”","""Retrieves a preferred maps intent from configuration, prioritizing user-specified apps and falling back to the default if none are found or valid.”"
39,java,Dynamically instantiates and displays home card modules defined in a configuration resource,"""Dynamically initializes and adds home card modules to the fragment transaction based on configured class names”","""Dynamically initializes and adds home card modules to the fragment transaction based on configured class names, logging initialization times for debugging”"
40,java,Removes dangling tasks that are in multi-window mode,"""Removes dangling multi-window tasks from the activity task manager.”","""Removes dangling multi-window tasks from the activity task manager to prevent resource leaks.”"
41,java,Updates the mode from the intent and sets the UI title accordingly,"""Parses the app mode from the intent and updates the title of the activity and toolbar”","""Parses the app mode from the intent and updates the activity and toolbar titles”"
42,java,Lazily initializes and returns the Chronometer view on first access,"""Lazily initializes and returns a chronometer view and its separator from a layout”","""Lazily initializes and returns a chronometer view and its separator from a layout”"
43,java,Blurs and scales an image to set as a card's visible background,"""Lazily initializes and returns the media layout view, including its title, subtitle, and control bar.”","""Lazily initializes and returns the media layout view, setting up its title, subtitle, and control bar.”"
44,java,Blurs and scales an image to set as a card's visible background,"""Updates the card's background image with a blurred version of the provided drawable, scaled to the card's dimensions.""","""Updates the card's background image with a blurred version of the provided drawable, scaled to the card's maximum dimension."""
45,java,Makes the media view visible and sets its title and subtitle,"""Updates the visibility and text content of a media layout view with a given title and subtitle.”","""Updates the visibility and text content of a media layout view with a given title and subtitle.”"
46,java,"Starts and shows a chronometer if a start time is positive; otherwise, hides it","""Updates the visibility and state of a chronometer to display audio duration based on a start time.”","""Updates the visibility and state of a chronometer to display audio duration if a start time is available.”"
47,java,Registers a callback on a newly added call,"""Registers a callback to receive updates for a given call object.""","""Registers a callback to receive updates for a given call."""
48,java,Resets state and unregisters the callback when a call is removed,"""Clears call-related data, updates the presenter, and unregisters a callback when a call is removed.""","""Clears call-related data, updates the presenter, and unregisters a callback upon call removal."""
49,java,Updates the ongoing call view model with a formatted phone number and UI controls,"""Updates the card content with a formatted phone number and associated call controls.”","""Updates the card content with a formatted phone number and associated call controls, notifying the presenter of the update.”"
50,java,"Initializes the Mute, End Call, and Dialpad buttons for an in-call user interface","""Initializes audio control buttons for muting, ending calls, and accessing the dialpad.”","""Initializes audio control buttons for muting, ending calls, and opening the dialpad.”"
53,cpp,Notifies a newly added listener if the D-Bus connection is already available,"""Notifies a listener of the availability status if the D-Bus connection is connected”","""Notifies a listener of the availability status if the D-Bus connection is connected and available”"
54,cpp,"For an active connection, adds a thread to a list to be joined on exit, avoiding duplicates","""Registers a thread to be joined when a D-Bus connection is closed.”","""Registers a thread to be joined when a D-Bus connection is closed.”"
56,cpp,A callback to stop monitoring a D-Bus watch and clean up its associated data,"""A callback that stops watching a D-Bus file descriptor if it is ready to be stopped”","""A callback that stops watching a D-Bus file descriptor when it is ready to be stopped”"
57,cpp,"A libdbus callback that creates, starts, or stops a D-Bus watch based on its readiness status","""Handles D-Bus watch events, starting or stopping the watch based on its readiness and context.”","""Handles D-Bus watch events, starting or stopping the watch based on its readiness and context, and managing associated data.”"
58,cpp,Thread-safely gets or creates a singleton DBusObjectManager instance using double-checked locking,"""Returns a shared pointer to a DBusObjectManager, creating one if it doesn't already exist”","""Returns a shared pointer to a DBusObjectManager, lazily creating one if it doesn't already exist”"
59,cpp,Performs a reference-counted release of a D-Bus service name,"""Releases a D-Bus service name, decrementing its count or removing it if it was the last reference”","""Releases a D-Bus service name, decrementing its count or removing it if it was the last reference, handling potential errors."""
60,cpp,Steals the reply from a pending D-Bus call and wraps it in a DBusMessage object,"""Converts a D-Bus pending call reply to a D-Bus message object”","""Converts a D-Bus pending call reply to a D-Bus message object, handling null input”"
61,cpp,Safely deletes all pending asynchronous handlers from a shared list,"""Deletes all pending asynchronous D-Bus message reply handlers”","""Deletes all pending asynchronous D-Bus message reply handlers to prevent memory leaks”"
62,cpp,Reports a success status to all registered signal handlers for their associated tags,"""Iterates through signal handlers and calls their onSpecificError method for each registered signal tag.""","""Iterates through signal handlers and calls their onSpecificError method for each registered signal tag, indicating successful completion."""
63,cpp,Thread-safely removes a connection from a collection if it exists,"""Removes a connection from the factory's internal map of connections.""","""Removes a connection from the factory's internal map of connections, ensuring thread safety."""
64,cpp,Dispatches D-Bus signals for interface addition or removal to specific handlers,"""Handles D-Bus signals indicating the addition or removal of interfaces, notifying the instance availability status event.”","""Handles D-Bus signals indicating interface additions or removals, notifying the instance availability status event.”"
65,cpp,Retrieves the addresses of available service instances from a D-Bus registry,"""Retrieves a list of available service instances from a D-Bus object manager and populates a vector with their addresses”","""Retrieves a list of available service instances from a D-Bus object manager and populates a vector with their addresses and status.”"
66,cpp,Queries a D-Bus registry to determine if a specific service instance is available,"""Retrieves the availability status of a D-Bus service instance and populates a call status object”","""Retrieves the availability status of a D-Bus service instance, translating a local address to a D-Bus address, and populating a call status object”"
67,cpp,Notifies that a service is unavailable when its corresponding D-Bus interface is removed,"""Handles a D-Bus signal indicating interfaces have been removed, updating the availability status of observed interfaces.”","""Handles a D-Bus signal indicating interfaces have been removed, updating the availability status of observed interfaces and notifying listeners.”"
68,cpp,Notifies CommonAPI listeners of a D-Bus interface's availability status change,"""Notifies listeners of a change in the availability status of a D-Bus interface”","""Notifies listeners of a change in the availability status of a D-Bus interface, using a translated address”"
69,cpp,Schedules an asynchronous notification of the current proxy status for a newly added listener,"""Registers a listener and pushes a function to the main loop to notify it when a specific subscription changes”","""Registers a listener and schedules a function to notify it when a specific subscription changes”"
70,cpp,Removes all listener entries that match a given subscription in a thread-safe manner,"""Removes a listener from the list of listeners for a given subscription”","""Removes a listener from the list of listeners associated with a subscription”"
71,cpp,Forwards the addition of a D-Bus signal state handler to the underlying connection object,"""Adds a signal handler to the connection for a specific subscription”","""Adds a signal handler to the connection for a specific subscription"""
72,cpp,Callback to translate available D-Bus service instance addresses to strings and forward the result,"""A callback that translates a list of D-Bus addresses into a list of strings and returns the status and instances to the caller”","""A callback that translates a list of D-Bus addresses into a list of strings and returns the status and instances to the caller"""
73,cpp,Routes a D-Bus message to a registered handler or handles standard introspection requests,"""Handles incoming D-Bus messages by routing them to registered interface handlers or processing introspectable interface messages.”","""Handles incoming D-Bus messages by routing them to registered interface handlers or processing introspectable interface messages.”"
74,cpp,"Adds a D-Bus interface handler to a path, preventing duplicate registration except for standard interfaces","""Adds a D-Bus interface handler to a table, preventing duplicates and handling special cases for ObjectManager and Properties interfaces”","""Adds a D-Bus interface handler to a table, preventing duplicates and handling special cases for ObjectManager and Properties interfaces.”"
75,cpp,"Registers a D-Bus handler for a specific path, preventing duplicates","""Adds a D-Bus interface handler to a table of registered objects, preventing duplicates”","""Adds a D-Bus interface handler to a table of registered objects, ensuring no duplicates are added”"
78,c,Sends a positive UDS response for the ECU Reset service,"""Sends a UDS positive response for the ECU reset service”","""Sends a UDS positive response for the ECU reset service with a specified reset type”"
79,c,"Handles a UDS ECU Reset request, supporting only the hard reset sub-function which reboots the system","""Handles the ECU reset UDS service, sending a positive response and rebooting for hard resets, or a negative response for unsupported reset types”","""Handles the ECU reset UDS service, sending a positive response and rebooting the system for hard resets, or a negative response for unsupported reset types”"
80,c,"Sends a positive UDS response to a Request Download, specifying the maximum block length","""Sends a UDS positive response for the Request Download service with a block size of 258 bytes”","""Sends a UDS positive response for the Request Download service with a block size of 258 bytes"""
81,c,Sends a UDS Transfer Data positive response containing the block sequence counter,"""Sends a UDS positive response for the Transfer Data service, including the block sequence counter”","""Sends a UDS positive response for the Transfer Data service, including the block sequence counter"""
82,c,Sends a UDS positive response for the Routine Control service containing a result code over ISO-TP,"""Sends a UDS positive response for the Routine Control service, including the routine ID and result”","""Sends a UDS positive response for the Routine Control service, including the routine ID and result."""
83,c,Sends a UDS Transfer Exit positive response message via the ISO-TP protocol,"""Sends a UDS positive response for the Request Transfer Exit service”","""Sends a UDS positive response for the Request Transfer Exit service”"
85,c,Finds the index of a given CAN ID in a mapping table,"""Maps a CAN ID to an index within a lookup table, returning 0xff if the ID is not found.”","""Maps a CAN ID to an index within a lookup table, returning 0xff if the ID is not found.”"
86,c,"Removes a specific LIN-to-CAN receive filter, or all filters, by clearing the associated callback","""Removes a callback for a specific LIN filter ID, or clears all callbacks if the filter ID is the length of the filter list”","""Removes a callback for a specific LIN filter ID, or clears all callbacks if the filter ID is the maximum filter ID”"
87,c,A LIN callback that dequeues a frame for transmission and executes its completion callback,"""Retrieves a LIN frame from a queue and calls a user-provided callback function to transmit it via CAN”","""Retrieves a LIN frame from a queue and calls a user-provided callback function to transmit it via CAN."""
88,c,A callback that translates an incoming LIN frame to a CAN frame and invokes a registered handler,"""Translates incoming LIN frames to CAN frames and invokes registered callbacks for each translated CAN ID”","""Translates incoming LIN frames to CAN frames and invokes registered callbacks for each translated CAN ID”"
89,c,Initializes a high-voltage shield by configuring its registers and enabling its output,"""Initializes the HV shield device by configuring the output enable pin, setting initial register values, and enabling the shield”","""Initializes the HV shield device by configuring the output enable pin, setting initial register values, and enabling the shield via GPIO”"
90,c,Sets the gain for a specified DAC on a high-voltage shield,"""Sets the DAC gain for a specified DAC channel, updating the device's internal registers and triggering an update function”","""Sets the DAC gain for a specified DAC channel, updating the device's internal registers and triggering an update function”"
91,c,"Sets a GPIO output enable state, remapping the pin index by swapping the 4-bit nibbles within its byte","""Sets or clears the enable bit for a specific GPIO output pin within a range, updating the device's registers accordingly.""","""Enables or disables a specific GPIO output pin by manipulating a bitfield in the device's register, and updates the device."""
92,c,A callback function that forwards a received CAN frame to another device,"""Routes CAN frames received on a device to another device using the `can_send` function.""","""Routes CAN frames received on a device to another device using the `can_send` function, logging debug and warning messages."""
93,c,Registers a set of rules to route CAN frames between specified interfaces,"""Registers a set of CAN router entries, adding RX filters for each entry and returning an error if any registration fails”","""Registers a set of CAN router entries, adding RX filters for each entry and returning an error if any registration fails”"
94,c,Initializes the CAN router by registering all statically-defined routing tables,"""Initializes the CAN router by registering entries from a predefined table.”","""Initializes the CAN router by registering entries from a predefined table.”"
95,c,Sets a masked group of GPIO pins to the states defined in a value bitmask,"""Sets the value of specified GPIO pins based on a mask and value, returning an error if any pin fails to set”","""Sets the value of specified GPIO pins based on a mask and value, returning an error if any pin fails to set”"
96,c,Gets the number of available LIN callback slots,"""Returns the number of free callback slots available in the abstract LIN driver”","""Returns the number of free callback slots available in the abstract LIN driver."""
97,c,Registers a callback function for a specific incoming LIN frame,"""Registers a callback function to handle incoming LIN messages with a specific frame ID and size.”","""Registers a callback function to handle incoming LIN messages with a specific frame ID and size, returning an error if the input is invalid.”"
98,c,Registers a callback function to provide data for a specific outgoing LIN frame,"""Registers an outgoing callback function for a specific LIN frame ID and size, returning an error if the input is invalid or if no free callback slots are available”","""Registers an outgoing callback function for a specific LIN frame ID and size, returning an error if the input is invalid or if no free callback slots are available."""
99,c,Sets the active schedule table for a LIN scheduler and resets its position to the beginning,"""Sets the active table index for a linear scheduler, deactivating the previous table if one was active.”","""Sets the active table index for a linear scheduler, deactivating the previous table if one was active and resetting the entry index.”"
100,c,Stops the LIN scheduler from processing its current schedule table,"""Disables a LIN scheduler by setting its current table to -1 and releasing a semaphore.”","""Disables a LIN scheduler by setting its current table to -1 and releasing a semaphore, preventing further scheduling.”"
