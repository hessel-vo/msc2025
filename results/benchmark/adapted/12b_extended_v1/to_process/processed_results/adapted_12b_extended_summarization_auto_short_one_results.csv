id,language,reference,generated,generated_rci
2,python,Validates if a value conforms to a datatype specified by a string,"""Checks if a value is of a specified datatype”","""Checks if a value conforms to a specified datatype”"
3,python,Checks if a value or list of values is a valid integer for a specified bit-width and signedness.,"""Checks if a value or list of values is a signed or unsigned integer within a specified bit range.""","""Checks if a value or list of values is a signed or unsigned integer within a specified bit range."""
4,python,Looks up a type definition tuple by its string name from a list of types,"""Retrieves a tuple containing the datatype, a callable, and a list of subtypes for a given datatype string.""","""Retrieves datatype information (type, callable, and subtypes) for a given datatype string, or None if not found."""
5,python,Finds all datatypes within the current namespace and any parent namespaces of a given FQN,"""Returns a dictionary of namespaced datatypes matching a given fully qualified name prefix.""","""Returns a dictionary of namespaced datatypes matching a given fully qualified name prefix."""
7,python,Converts a string-based data type definition into an ApiGearType object,"""Converts a string representation of a data type to an ApiGearType object, handling arrays and basic types.""","""Converts a string representation of a data type to an ApiGearType object, handling arrays and basic types."""
8,python,Generates an ApiGear property from a VSS (Vehicle Signal Specification) node,"""Generates an ApiGearProperty object from a VSSNode and its datatype, handling unsupported datatypes.""","""Generates an ApiGearProperty object from a VSSNode and its datatype, returning None if the datatype is unsupported."""
10,python,Loads and merges multiple VSpec files from specified paths into a single VSpec object,"""Loads and merges multiple VSpec files, handling includes and logging the process.""","""Loads and merges multiple VSpec files, handling includes and logging the process."""
11,python,"Recursively updates a dictionary with values from another, merging nested dictionaries","""Recursively updates a dictionary with another dictionary, merging nested dictionaries.”","""Recursively updates a dictionary with another dictionary, merging nested dictionaries.”"
12,python,Validates a constant unique identifier (constUID) is a 32-bit hexadecimal string,"""Validates if a given string matches the format of a constant UID (e.g., '0x12345678') and returns the original string if valid, otherwise None.""","""Validates if a given string matches the format of a constant UID (e.g., '0x12345678') and returns the original string if valid, otherwise raises an assertion error."""
13,python,"Initializes and attempts to resolve a VSS raw model, returning the unresolved model on failure","""Creates and resolves a VSSRaw object from a dictionary, handling potential validation or model resolution errors.""","""Creates and resolves a VSSRaw object from a dictionary, returning it even if validation or model resolution fails."""
14,python,Validates that a list of strings are all known datatypes,"""Validates that a list of values contains only valid data types.""","""Validates that a list of values contains only valid data types."""
15,python,"Renders a VSS tree into a string, displaying specified attributes for each node","""Generates a string representation of a VSSNode tree, including specified attributes for each node.”","""Generates a string representation of a VSSNode tree, including specified attributes for each node.”"
16,python,Finds the root of a VSS instance by recursively traversing up the parent hierarchy,"""Recursively traverses up the tree to find the root instance of a VSSDataBranch”","""Recursively traverses up the tree to find the root instance of a VSSDataBranch, returning the root node and its depth”"
17,python,Counts the depth of a chain of instance branches,"""Recursively counts the depth of instance children within a VSSDataBranch object.""","""Recursively counts the depth of instance children within a VSSDataBranch object."""
18,python,Finds all child node IDs that belong to a specific parent name,"""Finds the IDs of nodes whose expected parent is a given name.""","""Finds the IDs of nodes whose expected parent is a given name."""
19,python,"Gets an attribute, returning a default value if the attribute is missing or its value is None","""Safely retrieves an attribute from an object, returning a default value if the attribute is missing.""","""Safely retrieves an attribute from an object, returning a default value if the attribute is not found."""
20,python,Generates a Protobuf schema from a Vehicle Signal Specification (VSS) tree,"""Generates a protobuf definition from a VSS signal tree, including imports and message structures.""","""Generates a protobuf definition from a VSS signal tree, including imports and message structures."""
21,python,Groups all leaf VSS branch instances by the fully qualified name of their original branch definition,"""Collects the names of all instances of a VSS data branch, grouped by their root node.""","""Collects the names of all instances of a VSS data branch, grouped by their root node."""
22,python,Determines if a VSS node is a leaf based on its data type,"""Checks if a VSS node is a leaf node (i.e., contains a data datatype).""","""Checks if a VSS node is a leaf node containing a data datatype."""
23,python,Checks if a VSS node is a branch that is not an instance,"""Checks if a VSS node represents a branch with no instance data.""","""Checks if a VSS node is a branch and does not contain instance data."""
24,python,Checks if a VSS node represents a branch instance,"""Checks if a VSSNode represents an instance of a VSSDataBranch""","""Checks if a VSSNode's data is an instance of a VSSDataBranch"""
25,python,FNV-1 32-bit hashing algorithm for a byte sequence,"""Calculates a 32-bit FNV-1a hash value for a given byte string.""","""Calculates a 32-bit FNV-1a hash value for a given byte string."""
28,java,Inflates a card fragment's layout and initializes its view components,"""Inflates a layout and initializes view elements for a card fragment.""","""Inflates a layout and initializes view elements for a card fragment."""
29,java,"Sets a button's icon and click listener to make it visible, or hides it if no content is provided","""Updates the visibility and content of an ImageButton based on the provided DescriptiveTextWithControlsView control.""","""Updates an ImageButton's visibility and content based on a DescriptiveTextWithControlsView control."""
30,java,Lazily inflates and initializes a descriptive text layout view on first access,"""Lazily initializes and returns a view for displaying descriptive text-only content with optional image and tap-for-more functionality.”","""Lazily initializes and returns a view for displaying descriptive text-only content, including optional image and tap-for-more functionality.”"
31,java,Updates and displays a card header view with a new title and icon,"""Updates the header view of a card with the provided title and icon.""","""Updates the card header view with the provided title and icon."""
32,java,Lazily inflates and returns a text block layout view from a ViewStub,"""Lazily initializes and returns a text block layout view with associated text and tap-for-more elements”","""Lazily initializes and returns a text block layout view containing a text block and a tap-for-more element”"
33,java,Gets the media browser service component from a given package,"""Retrieves the default media browser service component name for a given package name.""","""Retrieves the default media browser service component name for a given package name, or null if none is found."""
34,java,Determines if an app component should be launchable by filtering against a hide list and de-duplicating media services,"""Determines if a component should be added to launchables based on app hiding, custom media components, and app types.""","""Determines if a component should be added to launchables based on app hiding, custom media components, and app types."""
35,java,Sets the media source and finishes the current activity,"""Selects a media source and finishes the activity if it is an activity, handling car connection exceptions.""","""Selects a media source and finishes the activity if it is an activity, handling car connection exceptions."""
36,java,"Safely checks if a given activity is distraction-optimized, handling potential connection errors","""Checks if a given activity within an application is distraction optimized using the CarPackageManager.""","""Checks if a given activity within an application is distraction optimized using the CarPackageManager, handling potential CarNotConnectedException."""
38,java,"Retrieves a specific, configured Intent for the default maps app, falling back to a generic one","""Returns an intent to launch a preferred maps activity, falling back to the default maps activity if no preferred activity is found or valid.""","""Returns an intent to launch a preferred maps activity, prioritizing user-defined preferences and falling back to the default maps activity if no preferred activity is found or valid."""
39,java,Dynamically instantiates and displays home card modules defined in a configuration resource,"""Dynamically instantiates and adds HomeCardModule classes defined in a resource array to a fragment transaction, replacing their respective card resource IDs with their card views.""","""Dynamically instantiates and adds HomeCardModule classes defined in a resource array to a fragment transaction, replacing their respective card resource IDs with their card views."""
40,java,Removes dangling tasks that are in multi-window mode,"""Removes dangling multi-window tasks from the ActivityTaskManager based on provided task information.""","""Removes dangling multi-window tasks from the ActivityTaskManager based on provided task information."""
41,java,Updates the mode from the intent and sets the UI title accordingly,"""Parses the mode from the intent and updates the title of the activity and toolbar.""","""Parses the mode from the intent and updates the activity and toolbar titles."""
42,java,Lazily initializes and returns the Chronometer view on first access,"""Lazily initializes and returns a chronometer view with its separator from the layout.""","""Lazily initializes and returns a chronometer view and its separator from the layout."""
43,java,Blurs and scales an image to set as a card's visible background,"""Lazily initializes and returns a view for displaying media layout information, including title, subtitle, and playback controls.”","""Lazily initializes and returns a view for displaying media layout information, including title, subtitle, and playback controls, and initializes the presenter with the controls action bar.”"
44,java,Blurs and scales an image to set as a card's visible background,"""Updates the card background with a blurred image scaled to the card's dimensions.""","""Updates the card background with a blurred image scaled to the card's dimensions and visibility."""
45,java,Makes the media view visible and sets its title and subtitle,"""Updates the visibility and text content of a media layout view with provided title and subtitle.""","""Updates the visibility and text content of a media layout view with provided title and subtitle."""
46,java,"Starts and shows a chronometer if a start time is positive; otherwise, hides it","""Updates the visibility of a chronometer and separator based on the start time of an audio duration.""","""Updates the visibility of a chronometer and separator based on the start time of an audio duration."""
47,java,Registers a callback on a newly added call,"""Registers a callback to a newly added call object to receive call state updates.""","""Registers a callback to a newly added call object to receive call state updates."""
48,java,Resets state and unregisters the callback when a call is removed,"""Removes a call, clears associated data, updates the presenter, and unregisters the callback.""","""Removes a call, clears associated data, updates the presenter, and unregisters the callback."""
49,java,Updates the ongoing call view model with a formatted phone number and UI controls,"""Updates the card content with a formatted phone number and associated UI elements, then notifies the presenter.""","""Updates the card content with a formatted phone number, subtitle, elapsed time, and call control buttons, then notifies the presenter."""
50,java,"Initializes the Mute, End Call, and Dialpad buttons for an in-call user interface","""Initializes mute, end call, and dialpad buttons with associated actions for controlling audio and call functions.""","""Initializes mute, end call, and dialpad buttons with associated actions for controlling audio and call functions."""
53,cpp,Notifies a newly added listener if the D-Bus connection is already available,"""Notifies a listener of the connection status if the connection is available""","""Notifies a listener of the connection status if the connection is available"""
54,cpp,"For an active connection, adds a thread to a list to be joined on exit, avoiding duplicates","""Associates a thread with a connection to be joined upon exit”","""Associates a thread with a connection to be joined when the connection is closed”"
56,cpp,A callback to stop monitoring a D-Bus watch and clean up its associated data,"""Removes a D-Bus watch and stops watching if it's ready.""","""Removes a D-Bus watch and stops watching if it's ready."""
57,cpp,"A libdbus callback that creates, starts, or stops a D-Bus watch based on its readiness status","""Handles D-Bus watch events, starting or stopping the watch based on its readiness state.""","""Handles D-Bus watch events, starting or stopping the watch based on its readiness state and managing its associated data."""
58,cpp,Thread-safely gets or creates a singleton DBusObjectManager instance using double-checked locking,"""Returns a shared pointer to a DBusObjectManager, creating one if it doesn't already exist.""","""Returns a shared pointer to a DBusObjectManager, lazily creating one if it doesn't already exist."""
59,cpp,Performs a reference-counted release of a D-Bus service name,"""Releases a D-Bus service name from the connection, decrementing its count or removing it if the count reaches zero.""","""Releases a D-Bus service name from the connection, decrementing its count or removing it if the count reaches zero, and returns a boolean indicating success."""
60,cpp,Steals the reply from a pending D-Bus call and wraps it in a DBusMessage object,"""Converts a libdbus pending call to a DBusMessage object and returns it”","""Converts a libdbus pending call to a DBusMessage object, returning the message”"
61,cpp,Safely deletes all pending asynchronous handlers from a shared list,"""Deletes all pending asynchronous D-Bus message reply handlers.""","""Deletes all pending asynchronous D-Bus message reply handlers to prevent memory leaks."""
62,cpp,Reports a success status to all registered signal handlers for their associated tags,"""Iterates through signal handlers and calls their onSpecificError method for each received signal tag.""","""Iterates through signal handlers and calls their onSpecificError method for each received signal tag."""
63,cpp,Thread-safely removes a connection from a collection if it exists,"""Removes a connection from the factory's connection map, ensuring thread safety with a mutex.""","""Removes a connection from the factory's connection map, ensuring thread safety with a mutex."""
64,cpp,Dispatches D-Bus signals for interface addition or removal to specific handlers,"""Handles D-Bus signals for interface availability changes, dispatching them to the appropriate event handler.""","""Handles D-Bus signals indicating interface additions or removals, dispatching them to the appropriate event handler."""
65,cpp,Retrieves the addresses of available service instances from a D-Bus registry,"""Retrieves available service instances from the D-Bus registry and populates a vector with their addresses.""","""Retrieves available service instances from the D-Bus registry and populates a vector with their addresses and status."""
66,cpp,Queries a D-Bus registry to determine if a specific service instance is available,"""Retrieves the availability status of a D-Bus service instance and populates the provided status and call status objects.""","""Retrieves the availability status of a D-Bus service instance, translating a CommonAPI address to a D-Bus address, and populating the provided status and call status objects."""
67,cpp,Notifies that a service is unavailable when its corresponding D-Bus interface is removed,"""Handles the DBus signal for interfaces being removed, updating the availability status of observed interfaces.""","""Handles the DBus signal for interfaces being removed, updating the availability status of observed interfaces and notifying listeners."""
68,cpp,Notifies CommonAPI listeners of a D-Bus interface's availability status change,"""Notifies listeners of a change in the availability status of a D-Bus interface for a given object path""","""Notifies listeners of a change in the availability status of a D-Bus interface for a given object path and interface name"""
69,cpp,Schedules an asynchronous notification of the current proxy status for a newly added listener,"""Adds a listener to the proxy and pushes a function to the main loop to notify it of specific events.""","""Adds a listener to the proxy and pushes a function to the main loop to notify it of specific events."""
70,cpp,Removes all listener entries that match a given subscription in a thread-safe manner,"""Removes a listener from the list of listeners for a given subscription.""",Removes a listener from the list of listeners for a given subscription.
71,cpp,Forwards the addition of a D-Bus signal state handler to the underlying connection object,"""Adds a signal handler to the connection for a given subscription.""","""Adds a signal handler to the connection for a given subscription."""
72,cpp,Callback to translate available D-Bus service instance addresses to strings and forward the result,"""Handles the asynchronous callback for retrieving available D-Bus service instances, translating the result and passing it to the provided callback function.”","""Handles the asynchronous callback for retrieving available D-Bus service instances, translating the result and passing it to the provided callback function.”"
73,cpp,Routes a D-Bus message to a registered handler or handles standard introspection requests,"""Handles incoming D-Bus messages by routing them to registered interface handlers or handling introspection requests.""","""Handles incoming D-Bus messages by routing them to registered interface handlers or handling introspection requests."""
74,cpp,"Adds a D-Bus interface handler to a path, preventing duplicate registration except for standard interfaces","""Adds a D-Bus interface handler to a table, checking for duplicates and handling special cases for ObjectManager and Properties interfaces.""","""Adds a D-Bus interface handler to a table, preventing duplicates and handling special cases for ObjectManager and Properties interfaces."""
75,cpp,"Registers a D-Bus handler for a specific path, preventing duplicates","""Adds a DBusInterfaceHandler to the registered objects table, preventing duplicates”","""Adds a DBusInterfaceHandler to the registered objects table, preventing duplicate entries”"
78,c,Sends a positive UDS response for the ECU Reset service,"""Sends a UDS positive response message indicating a successful ECU reset operation”","""Sends a UDS positive response message indicating a successful ECU reset operation”"
79,c,"Handles a UDS ECU Reset request, supporting only the hard reset sub-function which reboots the system","""Handles an ECU reset request, sending a positive response and rebooting for a hard reset or a negative response for other reset types.""","""Handles an ECU reset request, sending a positive response and rebooting for a hard reset or a negative response for unsupported reset types."""
80,c,"Sends a positive UDS response to a Request Download, specifying the maximum block length","""Sends a UDS positive response message indicating successful request download with a block size of 258 bytes.""","""Sends a UDS positive response message indicating successful request download with a block size of 258 bytes."""
81,c,Sends a UDS Transfer Data positive response containing the block sequence counter,"""Sends a UDS transfer data response message containing the block sequence counter”","""Sends a UDS transfer data response message containing the block sequence counter”"
82,c,Sends a UDS positive response for the Routine Control service containing a result code over ISO-TP,"""Sends a UDS routine control result message containing the routine ID and the result code""","""Sends a UDS routine control result message containing the routine ID and the result code"""
83,c,Sends a UDS Transfer Exit positive response message via the ISO-TP protocol,"""Sends a UDS positive response message indicating the successful completion of a transfer request.""","""Sends a UDS positive response message indicating the successful completion of a transfer request."""
85,c,Finds the index of a given CAN ID in a mapping table,"""Maps a CAN ID to a corresponding index within a predefined mapping table, returning 0xff if no match is found.""","""Maps a CAN ID to a corresponding index within a predefined mapping table, returning 0xff if no match is found."""
86,c,"Removes a specific LIN-to-CAN receive filter, or all filters, by clearing the associated callback","""Removes a CAN filter by setting the corresponding callback function to NULL, either for a specific filter ID or all filters.""","""Removes a CAN filter by setting the corresponding callback function to NULL for a specific filter ID."""
87,c,A LIN callback that dequeues a frame for transmission and executes its completion callback,"""Retrieves a LIN frame from a queue and calls a user-defined callback function to transmit it via CAN.""","""Retrieves a LIN frame from a queue and calls a user-defined callback function to transmit it via CAN."""
88,c,A callback that translates an incoming LIN frame to a CAN frame and invokes a registered handler,"""Translates incoming LIN frames to CAN frames and calls the registered callback function for the corresponding CAN ID.""","""Translates incoming LIN frames to CAN frames and invokes the corresponding CAN callback function."""
89,c,Initializes a high-voltage shield by configuring its registers and enabling its output,"""Initializes the HV shield device by configuring the output enable pin, initializing registers, updating the shield state, and enabling the output.""","""Initializes the HV shield device by configuring the output enable pin, initializing registers, updating the shield state, and enabling the output."""
90,c,Sets the gain for a specified DAC on a high-voltage shield,"""Sets the gain value of a specified DAC channel (0 or 1) in the HV shield device.""","""Sets the gain value of a specified DAC channel (0 or 1) in the HV shield device."""
91,c,"Sets a GPIO output enable state, remapping the pin index by swapping the 4-bit nibbles within its byte","""Enables or disables a GPIO output pin on the HV shield device by setting the corresponding bit in the gpio_output register.""","""Enables or disables a GPIO output pin on the HV shield device by setting the corresponding bit in the gpio_output register, handling index offsets."""
92,c,A callback function that forwards a received CAN frame to another device,"""Routes a CAN frame received on a device to another device using the `can_send` function.""","""Routes a CAN frame received on a device to another device using the `can_send` function."""
93,c,Registers a set of rules to route CAN frames between specified interfaces,"""Registers a set of CAN router entries, adding corresponding receive filters for each entry.”","""Registers a set of CAN router entries, adding corresponding receive filters for each entry.”"
94,c,Initializes the CAN router by registering all statically-defined routing tables,"""Initializes the CAN router by registering all entries from the can_router_table.""","""Initializes the CAN router by registering all entries from the can_router_table."""
95,c,Sets a masked group of GPIO pins to the states defined in a value bitmask,"""Sets the specified GPIO pins to a given value, iterating through a configuration structure to determine the pins and their corresponding ports.""","""Sets the specified GPIO pins to a given value, iterating through a configuration structure to determine the pins and their corresponding ports."""
96,c,Gets the number of available LIN callback slots,"""Returns the number of free callback slots available in the abstract LIN driver.""","""Returns the number of free callback slots available in the abstract LIN driver."""
97,c,Registers a callback function for a specific incoming LIN frame,"""Registers a callback function to handle incoming LIN frames with a specific ID and size.""","""Registers a callback function to handle incoming LIN frames with a specific ID and size."""
98,c,Registers a callback function to provide data for a specific outgoing LIN frame,"""Registers an outgoing callback function for a specific LIN frame ID and size with the abstract LIN layer.""","""Registers an outgoing callback function for a specific LIN frame ID and size with the abstract LIN layer."""
99,c,Sets the active schedule table for a LIN scheduler and resets its position to the beginning,"""Sets the active table index for a given abstract LIN scheduler and resets the current entry index to 0.""","""Sets the active table index for a given abstract LIN scheduler, resetting the current entry index to 0 and ensuring exclusive access."""
100,c,Stops the LIN scheduler from processing its current schedule table,"""Disables a LIN scheduler by setting its current table index to -1 and blocking until it is no longer active.""","""Disables a LIN scheduler by setting its current table index to -1 and blocking until it is no longer active."""
