The target code below is part of the automotive software engineering domain.
Provide a concise, single-line summary of the target C code below.
Do not provide any other output.

---

**[Examples]**
**[Example 1]**
**Code:**
```c
void send_negative_response(enum UDS_SID request_sid,
                            enum UDS_NRC response_code) {
  int ret;
  uint8_t tx_data[] = {UDS_SID_NEGATIVE_RESPONSE, request_sid, response_code};
  ret = isotp_send(&send_ctx, can_dev, tx_data, sizeof(tx_data), &tx_addr,
                   &rx_addr, send_complete_cb, NULL);
  if (ret != ISOTP_N_OK) {
    LOG_ERR("Error while sending data to ID %d [%d]\n", tx_addr.std_id, ret);
  }
}
```

**Summary:**
"Sends a UDS negative response message containing the failed service ID and a negative response code.”

**[Example 2]**
**Code:**
```c
static void send_session_control_response(enum UdsSessionState session_type,
                                          uint16_t p2_timeout_ms,
                                          uint16_t p2_star_timeout_ms) {
  int ret;
  uint8_t positive_sid = UDS_SID_DIAGNOSTIC_SESSION_CONTROL + 0x40;

  uint8_t tx_data[] = {
    positive_sid,
    session_type,
    (p2_timeout_ms >> 8) & 0xFF,
    p2_timeout_ms & 0xFF,
    ((p2_star_timeout_ms / 10) >> 8) & 0xFF,
    (p2_star_timeout_ms / 10) & 0xFF,
  };

  ret = isotp_send(&send_ctx, can_dev, tx_data, sizeof(tx_data), &tx_addr,
                   &rx_addr, send_complete_cb, NULL);
  if (ret != ISOTP_N_OK) {
    LOG_ERR("Error while sending data to ID %d [%d]\n", tx_addr.std_id, ret);
  }
}
```

**Summary:**
"Sends a UDS positive response for the Diagnostic Session Control service.”

**[Example 3]**
**Code:**
```c
void send_positive_reset_response(uint8_t reset_type) {
  int ret;
  uint8_t positive_sid = UDS_SID_ECU_RESET + 0x40;

  uint8_t tx_data[] = {positive_sid, reset_type};

  ret = isotp_send(&send_ctx, can_dev, tx_data, sizeof(tx_data), &tx_addr,
                   &rx_addr, send_complete_cb, NULL);
  if (ret != ISOTP_N_OK) {
    LOG_ERR("Error while sending data to ID %d [%d]\n", tx_addr.std_id, ret);
  }
}
```

**Summary:**
"Sends a positive UDS response for the ECU Reset service.”

---

**[Target]**
**Summarize the following C code (do not provide any other output):**
```c
static int hvs_set_masked_raw(const struct device* port,
                              gpio_port_pins_t mask,
                              gpio_port_value_t value) {
  const struct hv_shield_gpio_config_t* config = port->config;

  for (int i = 0; i < config->lv_gpios_count; i++) {
    if (!(mask & BIT(i))) continue;

    int ret = gpio_pin_set(config->lv_gpios[i].port, config->lv_gpios[i].pin,
                           !!(value & BIT(i)));
    if (ret < 0) {
      LOG_ERR("Error settings gpio %d (error %d)", i, ret);
      return ret;
    }
  }

  return 0;
}
```

**Summary:**