The target code below is part of the automotive software engineering domain.
Provide a concise, single-line summary of the target Python code below.
Do not provide any other output.
___

**[Example]**
**Code:**
```python
def find_max_sum(arr):
    incl = 0
    excl = 0
    for i in arr:
        new_excl = excl if excl > incl else incl
        incl = excl + i
        excl = new_excl
    return excl if excl > incl else incl
```

**Summary:**
"Maximum sum such that no two elements are adjacent”
___

**[Target]**
**Summarize the following Python code (do not provide any other output):**
```python
def populate_unique_node_names(node_names_dict: dict[str, Any], vss_node: VSSNode) -> None:
    if not node_names_dict.get(vss_node.name):
        node_names_dict.__setitem__(vss_node.name, {"counter": 1, "vss_paths": [vss_node.get_fqn()]})
    else:
        node_names_dict[vss_node.name]["counter"] += 1  # type: ignore
        node_names_dict[vss_node.name]["vss_paths"].append(vss_node.get_fqn())  # type: ignore

    if vss_node.children and len(vss_node.children) > 0:
        for vss_child_node in vss_node.children:
            populate_unique_node_names(node_names_dict, vss_child_node)
```

**Summary:**